import{_ as s,o,c as n,S as a}from"./chunks/framework.7f03344f.js";const x=JSON.parse('{"title":"6-2 使用其它插件的 API","description":"","frontmatter":{},"headers":[],"relativePath":"Volume6/6-2.md","filePath":"docs/Volume6/6-2.md","lastUpdated":1698403164000}'),t={name:"Volume6/6-2.md"},e=a(`<h1 id="_6-2-使用其它插件的-api" tabindex="-1">6-2 使用其它插件的 API <a class="header-anchor" href="#_6-2-使用其它插件的-api" aria-label="Permalink to &quot;6-2 使用其它插件的 API&quot;">​</a></h1><p>在插件开发中，我们虽然希望尽可能自己完成开发，但有的时候还是得依赖其它的插件。</p><h2 id="plugin-yml" tabindex="-1"><code>plugin.yml</code> <a class="header-anchor" href="#plugin-yml" aria-label="Permalink to &quot;\`plugin.yml\`&quot;">​</a></h2><p>要使用其它插件的 API，我们需要在 <code>plugin.yml</code> 中做一些修改。</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">depend</span><span style="color:var(--shiki-token-keyword);">:</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  - </span><span style="color:var(--shiki-token-string-expression);">Vault</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  - </span><span style="color:var(--shiki-token-string-expression);">RarityCommons</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">softdepend</span><span style="color:var(--shiki-token-keyword);">:</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  - </span><span style="color:var(--shiki-token-string-expression);">HoofPower</span></span></code></pre></div><p>加上的就是这两个字段，<code>depend</code> 中是<strong>必需依赖</strong>，如果没有安装，Bukkit 会拒绝加载本插件。</p><p><code>softdepend</code> 是<strong>非必需依赖</strong>。</p><p>另外，如果你想检查一个插件有没有被加载，可以使用：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-constant);">Bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getPluginManager</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getPlugin</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;插件的名字&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// 如果加载了，返回值就是一个有效的 JavaPlugin 对象，否则是 null，插件名区分大小写</span></span></code></pre></div><h2 id="使用-api" tabindex="-1">使用 API <a class="header-anchor" href="#使用-api" aria-label="Permalink to &quot;使用 API&quot;">​</a></h2><p>下面我们以使用 Vault 经济插件的 API 为例，介绍插件 API 的使用方法。</p><p>一些高级的插件将 API 从插件本身中分离出来，一些没有。如果有 API，我们就应该找到这个 API，如果没有，那就使用插件 Jar 文件。</p><div class="info custom-block"><p class="custom-block-title"><img src="data:image/svg+xml,%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#39;0 0 16 16&#39; transform=&#39;scale(0.6)&#39; fill=&#39;%23fff&#39;%3E%3Cpath d=&#39;M9.1 0C10.2 0 10.7 0.7 10.7 1.6 10.7 2.6 9.8 3.6 8.6 3.6 7.6 3.6 7 3 7 2 7 1.1 7.7 0 9.1 0Z&#39;/%3E%3Cpath d=&#39;M5.8 16C5 16 4.4 15.5 5 13.2L5.9 9.1C6.1 8.5 6.1 8.2 5.9 8.2 5.7 8.2 4.6 8.6 3.9 9.1L3.5 8.4C5.6 6.6 7.9 5.6 8.9 5.6 9.8 5.6 9.9 6.6 9.5 8.2L8.4 12.5C8.2 13.2 8.3 13.5 8.5 13.5 8.7 13.5 9.6 13.2 10.4 12.5L10.9 13.2C8.9 15.2 6.7 16 5.8 16Z&#39;/%3E%3C/svg%3E" style="background-color:#0B87DA;clip-path:circle();" width="24px" height="24px"> <strong>为什么要使用 API</strong>？</p><p>这里我们用到的 API 实际上就是接口，它没有被最终包含在我们的插件中，只是在编写和编译时用于提供类型。它就是一个「空壳」，只有外表没有内在，这使得 API 变得很小，易于使用。</p><p>开发时我们也不需要关注 API 的实现，只需要知道「有这个 API」就可以了。不懂？看图看图啦~</p><p><img src="https://s2.loli.net/2023/06/24/nYRyNI8EKuOhjGb.png" alt="API.png"></p><div class="tip custom-block"><p class="custom-block-title"><img src="data:image/svg+xml,%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#39;0 0 1028 1024&#39; transform=&#39;scale(0.6)&#39; fill=&#39;%23fff&#39;%3E%3Cpath d=&#39;M1018.319924 112.117535q4.093748 9.210934 6.652341 21.492179t2.558593 25.585928-5.117186 26.609365-16.374994 25.585928q-12.281245 12.281245-22.003898 21.492179t-16.886712 16.374994q-8.187497 8.187497-15.351557 14.32812l-191.382739-191.382739q12.281245-11.257808 29.167958-27.121083t28.144521-25.074209q14.32812-11.257808 29.679676-15.863275t30.191395-4.093748 28.656239 4.605467 24.050772 9.210934q21.492179 11.257808 47.589826 39.402329t40.425766 58.847634zM221.062416 611.554845q6.140623-6.140623 28.656239-29.167958t56.289041-56.80076l74.710909-74.710909 82.898406-82.898406 220.038979-220.038979 191.382739 192.406177-220.038979 220.038979-81.874969 82.898406q-40.937484 39.914047-73.687472 73.175753t-54.242167 54.753885-25.585928 24.562491q-10.234371 9.210934-23.539054 19.445305t-27.632802 16.374994q-14.32812 7.16406-41.960921 17.398431t-57.824197 19.957024-57.312478 16.886712-40.425766 9.210934q-27.632802 3.070311-36.843736-8.187497t-5.117186-37.867173q2.046874-14.32812 9.722653-41.449203t16.374994-56.289041 16.886712-53.730448 13.304682-33.773425q6.140623-14.32812 13.816401-26.097646t22.003898-26.097646z&#39;/%3E%3C/svg%3E" style="background-color:#057E3D;clip-path:circle();" width="24px" height="24px"> <strong>编者注</strong></p><p>有鉴于图床失效、原图丢失，上图系定稿后再行修补，图文未必贴合。</p></div></div><p>左边是开发时的场景，右边是插件打包后的场景。</p><p>API 做的事，就是图中粉红色的部分。最终打包时，实现和 API 都会被丢掉。</p><p>上面所说的「空壳」，就是去掉了紫色部分后的结果。<strong>紫色部分无论是在开发还是在成果中都是不必要的</strong>。</p><p>也就是说，我们对着粉色部分（API）盖房子，完全不需要紫色部分（实现），最后把粉色部分拿走，就是产物了。 :::</p><p>Vault 是有 API 的，所以首先我们要找到该插件的 API，如果这个插件有 API，该 API 应该在它的「开发人员指南」部分有所提供。</p><p>Vault 的 API 位于 <a href="https://github.com/MilkBowl/VaultAPI" target="_blank" rel="noreferrer">VaultAPI</a> 仓库中。</p><p>咦？这里怎么没有下载链接？</p><p>Vault 使用了一种叫做 Maven 的工具发布它的 API，因此我们的项目也需要升级到 Maven。</p><h2 id="创建-maven-项目" tabindex="-1">创建 Maven 项目 <a class="header-anchor" href="#创建-maven-项目" aria-label="Permalink to &quot;创建 Maven 项目&quot;">​</a></h2><p>原先 Maven 是需要单独进行安装的，但现在它已经被集成到 IDEA 中了。</p><p>打开「Project Structure」，转到「Modules」，单击左上角的「+」、「New module」。</p><p>在新的窗口中选择「Maven」，单击「Next」。</p><p>在新的窗口中输入项目的名字，项目的存储地点和 「GroupId」，「ArtifactId」。</p><p>「GroupId」 是这个项目组的名字，可以是 <code>net.mcbbs.xxx</code>，可以是 <code>rarityeg.plugins</code>，也可以是什么别的。</p><p>「ArtifactId」 是该模块的名字，在插件开发中一般以插件名小写组成。</p><p>这里「Location」比较坑，Maven <strong>并不会为你选择一个合适的地点</strong>，需要将路径设置到之前的文件夹中（在我这里是 <code>RarityPlugins</code>）。</p><p>最终的配置如下：</p><p><img src="https://s2.loli.net/2022/04/15/mh4nyAsr2xpXIG6.png" alt="CONF.png"></p><p>单击「Finish」完成。</p><h2 id="pom-xml" tabindex="-1"><code>pom.xml</code> <a class="header-anchor" href="#pom-xml" aria-label="Permalink to &quot;\`pom.xml\`&quot;">​</a></h2><p>我不想在这里引入许多复杂的概念，因此我们以最简单的方式介绍 <code>pom.xml</code>。</p><p><strong><code>pom.xml</code> 是 Maven 模块中的一个文件，Maven 看着它来构建项目。</strong></p><p>展开刚刚创建的「ExampleMavenPlugin」，你就能看到 <code>pom.xml</code>，它看上去像这样：</p><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-color-text);">&lt;?</span><span style="color:var(--shiki-token-string-expression);">xml</span><span style="color:var(--shiki-token-function);"> version</span><span style="color:var(--shiki-color-text);">=</span><span style="color:var(--shiki-token-string-expression);">&quot;1.0&quot;</span><span style="color:var(--shiki-token-function);"> encoding</span><span style="color:var(--shiki-color-text);">=</span><span style="color:var(--shiki-token-string-expression);">&quot;UTF-8&quot;</span><span style="color:var(--shiki-color-text);">?&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-string-expression);">project</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">xmlns</span><span style="color:var(--shiki-color-text);">=</span><span style="color:var(--shiki-token-string-expression);">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">         </span><span style="color:var(--shiki-token-function);">xmlns</span><span style="color:var(--shiki-token-punctuation);">:</span><span style="color:var(--shiki-token-function);">xsi</span><span style="color:var(--shiki-color-text);">=</span><span style="color:var(--shiki-token-string-expression);">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">         </span><span style="color:var(--shiki-token-function);">xsi</span><span style="color:var(--shiki-token-punctuation);">:</span><span style="color:var(--shiki-token-function);">schemaLocation</span><span style="color:var(--shiki-color-text);">=</span><span style="color:var(--shiki-token-string-expression);">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    &lt;</span><span style="color:var(--shiki-token-string-expression);">modelVersion</span><span style="color:var(--shiki-color-text);">&gt;4.0.0&lt;/</span><span style="color:var(--shiki-token-string-expression);">modelVersion</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    &lt;</span><span style="color:var(--shiki-token-string-expression);">groupId</span><span style="color:var(--shiki-color-text);">&gt;rarityeg&lt;/</span><span style="color:var(--shiki-token-string-expression);">groupId</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    &lt;</span><span style="color:var(--shiki-token-string-expression);">artifactId</span><span style="color:var(--shiki-color-text);">&gt;examplemavenplugin&lt;/</span><span style="color:var(--shiki-token-string-expression);">artifactId</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    &lt;</span><span style="color:var(--shiki-token-string-expression);">version</span><span style="color:var(--shiki-color-text);">&gt;1.0-SNAPSHOT&lt;/</span><span style="color:var(--shiki-token-string-expression);">version</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    &lt;</span><span style="color:var(--shiki-token-string-expression);">properties</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        &lt;</span><span style="color:var(--shiki-token-string-expression);">maven.compiler.source</span><span style="color:var(--shiki-color-text);">&gt;11&lt;/</span><span style="color:var(--shiki-token-string-expression);">maven.compiler.source</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        &lt;</span><span style="color:var(--shiki-token-string-expression);">maven.compiler.target</span><span style="color:var(--shiki-color-text);">&gt;11&lt;/</span><span style="color:var(--shiki-token-string-expression);">maven.compiler.target</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    &lt;/</span><span style="color:var(--shiki-token-string-expression);">properties</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">&lt;/</span><span style="color:var(--shiki-token-string-expression);">project</span><span style="color:var(--shiki-color-text);">&gt;</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title"><img src="data:image/svg+xml,%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#39;0 0 1028 1024&#39; transform=&#39;scale(0.6)&#39; fill=&#39;%23fff&#39;%3E%3Cpath d=&#39;M1018.319924 112.117535q4.093748 9.210934 6.652341 21.492179t2.558593 25.585928-5.117186 26.609365-16.374994 25.585928q-12.281245 12.281245-22.003898 21.492179t-16.886712 16.374994q-8.187497 8.187497-15.351557 14.32812l-191.382739-191.382739q12.281245-11.257808 29.167958-27.121083t28.144521-25.074209q14.32812-11.257808 29.679676-15.863275t30.191395-4.093748 28.656239 4.605467 24.050772 9.210934q21.492179 11.257808 47.589826 39.402329t40.425766 58.847634zM221.062416 611.554845q6.140623-6.140623 28.656239-29.167958t56.289041-56.80076l74.710909-74.710909 82.898406-82.898406 220.038979-220.038979 191.382739 192.406177-220.038979 220.038979-81.874969 82.898406q-40.937484 39.914047-73.687472 73.175753t-54.242167 54.753885-25.585928 24.562491q-10.234371 9.210934-23.539054 19.445305t-27.632802 16.374994q-14.32812 7.16406-41.960921 17.398431t-57.824197 19.957024-57.312478 16.886712-40.425766 9.210934q-27.632802 3.070311-36.843736-8.187497t-5.117186-37.867173q2.046874-14.32812 9.722653-41.449203t16.374994-56.289041 16.886712-53.730448 13.304682-33.773425q6.140623-14.32812 13.816401-26.097646t22.003898-26.097646z&#39;/%3E%3C/svg%3E" style="background-color:#057E3D;clip-path:circle();" width="24px" height="24px"> <strong>编者注</strong></p><p><code>maven.compiler.target</code> 用于表示项目编译后期望在何版本的 JRE 上运行。比如，此处填写 11 以后，插件就应该能在 JRE 11 上运行。由于 Java 自身的兼容性，一般来说能在 JRE 11 上运行的程序也可以在 JRE 17 上运行（用到 Nashorn 等标记为过时 API 的程序除外）。但是如果此处填了 17，那么程序就不可能在 JRE 11 上运行了。即使你没有用 Java 17 较之 11 添加的新语法特性，亦然。因为编译后，字节码文件中会记录版本。假如是低版本 JDK 编译的程序，则可以在高版本 JRE 运行。反之则不可以。</p><p>在 ThatRarityEG 写下此章节时，Minecraft 尚没有 1.17 版本，编程开发时只需要用 JDK 8 或 JDK 11 即可。现依据实际情况添加了有关 JDK 17 的说明。谨按，后文中所有插件样例及代码都是针对 1.16.5 版本所编写，<code>maven.compiler.target</code> 都为 11，不便修改。专此说明。</p></div><p>现在我们回到 VaultAPI 的介绍页面，其中写着这样的内容：</p><blockquote><p>How to include the API with Maven:</p><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-string-expression);">repositories</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    &lt;</span><span style="color:var(--shiki-token-string-expression);">repository</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        &lt;</span><span style="color:var(--shiki-token-string-expression);">id</span><span style="color:var(--shiki-color-text);">&gt;jitpack.io&lt;/</span><span style="color:var(--shiki-token-string-expression);">id</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        &lt;</span><span style="color:var(--shiki-token-string-expression);">url</span><span style="color:var(--shiki-color-text);">&gt;https://jitpack.io&lt;/</span><span style="color:var(--shiki-token-string-expression);">url</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    &lt;/</span><span style="color:var(--shiki-token-string-expression);">repository</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">&lt;/</span><span style="color:var(--shiki-token-string-expression);">repositories</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-string-expression);">dependencies</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    &lt;</span><span style="color:var(--shiki-token-string-expression);">dependency</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        &lt;</span><span style="color:var(--shiki-token-string-expression);">groupId</span><span style="color:var(--shiki-color-text);">&gt;com.github.MilkBowl&lt;/</span><span style="color:var(--shiki-token-string-expression);">groupId</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        &lt;</span><span style="color:var(--shiki-token-string-expression);">artifactId</span><span style="color:var(--shiki-color-text);">&gt;VaultAPI&lt;/</span><span style="color:var(--shiki-token-string-expression);">artifactId</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        &lt;</span><span style="color:var(--shiki-token-string-expression);">version</span><span style="color:var(--shiki-color-text);">&gt;1.7&lt;/</span><span style="color:var(--shiki-token-string-expression);">version</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        &lt;</span><span style="color:var(--shiki-token-string-expression);">scope</span><span style="color:var(--shiki-color-text);">&gt;provided&lt;/</span><span style="color:var(--shiki-token-string-expression);">scope</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    &lt;/</span><span style="color:var(--shiki-token-string-expression);">dependency</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">&lt;/</span><span style="color:var(--shiki-token-string-expression);">dependencies</span><span style="color:var(--shiki-color-text);">&gt;</span></span></code></pre></div></blockquote><p>复制其中的内容，粘贴到 <code>pom.xml</code> 的 <code>&lt;project&gt;</code> 和 <code>&lt;/project&gt;</code> 中间的任意位置：</p><p><img src="https://s2.loli.net/2022/04/15/ZVqTDjY3dJC9a2e.png" alt="DEP.png"></p><p>IDEA 将某些部分标注为了红色，表示「有错」，这是什么意思呢？</p><p>这表示「没有同步」，Maven 的作用之一是「依赖管理」。刚刚我们粘贴进来的那部分中包括了 VaultAPI 的地址信息，Maven 用它来寻找 VaultAPI 的文件。</p><p>现在这个文件还在网络上，IDEA 在本地找不到，就会发出警告。</p><p>单击一下图中的按钮，这表示「同步」，IDEA 就会开始同步 Maven 项目，稍等一会，等到下面的进度条完成，并且 <code>VaultAPI</code> 字样变为黑色，同步就完成了：</p><p><img src="https://s2.loli.net/2022/04/15/XvqWdPsuna9FVx7.png" alt="AFTERSYNC.png"></p><h2 id="创建主类" tabindex="-1">创建主类 <a class="header-anchor" href="#创建主类" aria-label="Permalink to &quot;创建主类&quot;">​</a></h2><p>在 Maven 这里，我们不是在 <code>src</code> 下创建包，而要在 <code>src/main/java</code> 中创建包。为什么呢？</p><p>Maven 不仅能够用于 Java 的构建，还能够用于 C#、Ruby 等项目，因此该文件夹被放到了 <code>src/main/java</code> 下，换句话说，你就把 <code>src/main/java</code> 当作之前的 <code>src</code> 就行啦。</p><p>右键 <code>java</code>，创建包，包名自己写。</p><p>现在就可以在你的包中创建类啦！</p><h2 id="添加服务端依赖" tabindex="-1">添加服务端依赖 <a class="header-anchor" href="#添加服务端依赖" aria-label="Permalink to &quot;添加服务端依赖&quot;">​</a></h2><p>在 Maven 中，我们无法通过之前的方式添加「spigot-1.16.5」作为依赖，这会与 Maven 的依赖系统冲突。</p><p>幸运的是，Paper 提供了它的 API 的 Maven 版本，既然 Paper 这么好，我们就抛弃 Spigot，改用 Paper 吧。</p><p>查询 <a href="https://github.com/PaperMC/Paper" target="_blank" rel="noreferrer">Paper 的仓库介绍</a>，里面有这样的内容：</p><blockquote><ul><li>Maven Repo (for paper-api):</li></ul><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-string-expression);">repository</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   &lt;</span><span style="color:var(--shiki-token-string-expression);">id</span><span style="color:var(--shiki-color-text);">&gt;papermc&lt;/</span><span style="color:var(--shiki-token-string-expression);">id</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   &lt;</span><span style="color:var(--shiki-token-string-expression);">url</span><span style="color:var(--shiki-color-text);">&gt;https://papermc.io/repo/repository/maven-public/&lt;/</span><span style="color:var(--shiki-token-string-expression);">url</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">&lt;/</span><span style="color:var(--shiki-token-string-expression);">repository</span><span style="color:var(--shiki-color-text);">&gt;</span></span></code></pre></div><ul><li>Artifact Information:</li></ul><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-string-expression);">dependency</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   &lt;</span><span style="color:var(--shiki-token-string-expression);">groupId</span><span style="color:var(--shiki-color-text);">&gt;com.destroystokyo.paper&lt;/</span><span style="color:var(--shiki-token-string-expression);">groupId</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   &lt;</span><span style="color:var(--shiki-token-string-expression);">artifactId</span><span style="color:var(--shiki-color-text);">&gt;paper-api&lt;/</span><span style="color:var(--shiki-token-string-expression);">artifactId</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   &lt;</span><span style="color:var(--shiki-token-string-expression);">version</span><span style="color:var(--shiki-color-text);">&gt;1.16.5-R0.1-SNAPSHOT&lt;/</span><span style="color:var(--shiki-token-string-expression);">version</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   &lt;</span><span style="color:var(--shiki-token-string-expression);">scope</span><span style="color:var(--shiki-color-text);">&gt;provided&lt;/</span><span style="color:var(--shiki-token-string-expression);">scope</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">&lt;/</span><span style="color:var(--shiki-token-string-expression);">dependency</span><span style="color:var(--shiki-color-text);">&gt;</span></span></code></pre></div></blockquote><p>我们将 <code>&lt;repository&gt;</code> 部分插入到 <code>pom.xml</code> 中的 <code>&lt;repositories&gt;&lt;/repositories&gt;</code> 之间，将 <code>&lt;dependency&gt;</code> 部分插入到 <code>&lt;dependencies&gt;&lt;/dependencies&gt;</code> 之间，就像这样：</p><p><img src="https://s2.loli.net/2023/06/19/rd8IBxXTQbHnlKL.png" alt="ADD.png"></p><p>你现在是不是对 Maven 的配置有一点点感觉了？看到 <code>&lt;repository&gt;</code>，就插入 <code>&lt;repositories&gt;</code> 中，看到 <code>&lt;dependency&gt;</code>，就插入 <code>&lt;dependencies&gt;</code> 中。</p><p>修改之后，右上角的按钮又出现了，我们再按一下「同步」，稍等一会，<code>com.destroystokyo</code> 字样就会变成黑色，即代表导入完成。</p><p>怎么样？Maven 使用起来是不是很方便？既然这样，我们就抛弃之前的导入方法，全部改用 Maven 吧，耶！晋升成功~</p><div class="info custom-block"><p class="custom-block-title"><img src="data:image/svg+xml,%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#39;0 0 16 16&#39; transform=&#39;scale(0.6)&#39; fill=&#39;%23fff&#39;%3E%3Cpath d=&#39;M9.1 0C10.2 0 10.7 0.7 10.7 1.6 10.7 2.6 9.8 3.6 8.6 3.6 7.6 3.6 7 3 7 2 7 1.1 7.7 0 9.1 0Z&#39;/%3E%3Cpath d=&#39;M5.8 16C5 16 4.4 15.5 5 13.2L5.9 9.1C6.1 8.5 6.1 8.2 5.9 8.2 5.7 8.2 4.6 8.6 3.9 9.1L3.5 8.4C5.6 6.6 7.9 5.6 8.9 5.6 9.8 5.6 9.9 6.6 9.5 8.2L8.4 12.5C8.2 13.2 8.3 13.5 8.5 13.5 8.7 13.5 9.6 13.2 10.4 12.5L10.9 13.2C8.9 15.2 6.7 16 5.8 16Z&#39;/%3E%3C/svg%3E" style="background-color:#0B87DA;clip-path:circle();" width="24px" height="24px"> <strong>到底怎么回事</strong>？</p><p>Maven 的 <code>pom.xml</code> 中记载着项目的依赖信息，<code>&lt;repositories&gt;</code> 表示「仓库」，也就是在哪些地方查找依赖，<code>&lt;dependencies&gt;</code> 则表示要使用的依赖。</p><p>IDEA 和 Maven 会按照配置在网络上寻找对应的 Jar 包并下载下来以供开发使用。只需要配置 <code>pom.xml</code>，再按一下「同步」，这明显比「Project Structure」方便多了嘛！</p><p>只要有了像上面这样的配置信息（如 Paper 提供的），使用 Maven 就能够获取全世界任何开发者发布的项目文件以供开发，这就是 Maven 的强大之处——一套统一的标准，一个简便的方法。</p></div><p>哦，对了，我们 <code>plugin.yml</code> 的位置也要发生变化，位于 <code>src/main/resources</code> 下而不是 <code>src</code> 下了。</p><h2 id="检查-vault-是否装载" tabindex="-1">检查 Vault 是否装载 <a class="header-anchor" href="#检查-vault-是否装载" aria-label="Permalink to &quot;检查 Vault 是否装载&quot;">​</a></h2><p>在 <code>onEnable</code> 方法中即可检查：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">boolean</span><span style="color:var(--shiki-color-text);"> isVaultEnabled </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">!</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getPluginManager</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getPlugin</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;Vault&quot;</span><span style="color:var(--shiki-color-text);">) </span><span style="color:var(--shiki-token-keyword);">==</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-color-text);">);</span></span></code></pre></div><p>如果 Vault 启用了，我们就可以调用它的 API，如果没有，那我们需要进行相应的善后措施。</p><h2 id="使用插件-api" tabindex="-1">使用插件 API <a class="header-anchor" href="#使用插件-api" aria-label="Permalink to &quot;使用插件 API&quot;">​</a></h2><p>接下来就可以参照 Vault 的文档进行开发了，那些提供了 API 的插件一般都会提供开发文档。</p><p>例如，Vault 的快速上手代码：</p><div class="danger custom-block"><p class="custom-block-title"><img src="data:image/svg+xml,%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#39;0 0 16 16&#39; transform=&#39;scale(0.6)&#39; fill=&#39;%23fff&#39;%3E%3Cpath d=&#39;M10 14C10 15.1 9.1 16 8 16 6.9 16 6 15.1 6 14 6 12.9 6.9 12 8 12 9.1 12 10 12.9 10 14Z&#39;/%3E%3Cpath d=&#39;M10 1.6C10 1.2 9.8 0.9 9.6 0.7 9.2 0.3 8.6 0 8 0 7.4 0 6.8 0.2 6.5 0.6 6.2 0.9 6 1.2 6 1.6 6 1.7 6 1.8 6 1.9L6.8 9.6C6.9 9.9 7 10.1 7.2 10.2 7.4 10.4 7.7 10.5 8 10.5 8.3 10.5 8.6 10.4 8.8 10.3 9 10.1 9.1 9.9 9.2 9.6L10 1.9C10 1.8 10 1.7 10 1.6Z&#39;/%3E%3C/svg%3E" style="background-color:#DA0B50;clip-path:circle();" width="24px" height="24px"> <strong>这是示例代码</strong>！</p><p>这部分代码是 Vault 提供的，<strong>仅提示了使用方法</strong>，请不要尝试运行它！</p></div><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">package</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">com</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">example</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">plugin</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">java</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">util</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">logging</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">Logger</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">net</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">milkbowl</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">vault</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">chat</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">Chat</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">net</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">milkbowl</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">vault</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">economy</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">Economy</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">net</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">milkbowl</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">vault</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">economy</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">EconomyResponse</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">net</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">milkbowl</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">vault</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">permission</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">Permission</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">org</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">command</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">Command</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">org</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">command</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">CommandSender</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">org</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">entity</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">Player</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">org</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">plugin</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">RegisteredServiceProvider</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">org</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">plugin</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">java</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">JavaPlugin</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">class</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">ExamplePlugin</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">extends</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">JavaPlugin</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">final</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Logger</span><span style="color:var(--shiki-color-text);"> log </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Logger</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getLogger</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;Minecraft&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Economy</span><span style="color:var(--shiki-color-text);"> econ </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Permission</span><span style="color:var(--shiki-color-text);"> perms </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Chat</span><span style="color:var(--shiki-color-text);"> chat </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">Override</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">void</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">onDisable</span><span style="color:var(--shiki-color-text);">() {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">log</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">info</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">String</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">format</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;[%s] Disabled Version %s&quot;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">getDescription()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getName</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">getDescription()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getVersion</span><span style="color:var(--shiki-color-text);">()));</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">Override</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">void</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">onEnable</span><span style="color:var(--shiki-color-text);">() {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">!</span><span style="color:var(--shiki-token-function);">setupEconomy()</span><span style="color:var(--shiki-color-text);"> ) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">log</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">severe</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">String</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">format</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;[%s] - Disabled due to no Vault dependency found!&quot;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">getDescription()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getName</span><span style="color:var(--shiki-color-text);">()));</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-function);">getServer()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getPluginManager</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">disablePlugin</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">this</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-function);">setupPermissions()</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-function);">setupChat()</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">boolean</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">setupEconomy</span><span style="color:var(--shiki-color-text);">() {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-function);">getServer()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getPluginManager</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getPlugin</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;Vault&quot;</span><span style="color:var(--shiki-color-text);">) </span><span style="color:var(--shiki-token-keyword);">==</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">false</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">RegisteredServiceProvider</span><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-keyword);">Economy</span><span style="color:var(--shiki-color-text);">&gt; rsp </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">getServer()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getServicesManager</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getRegistration</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Economy</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">class</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (rsp </span><span style="color:var(--shiki-token-keyword);">==</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">false</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        econ </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">rsp</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getProvider</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> econ </span><span style="color:var(--shiki-token-keyword);">!=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">boolean</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">setupChat</span><span style="color:var(--shiki-color-text);">() {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">RegisteredServiceProvider</span><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-keyword);">Chat</span><span style="color:var(--shiki-color-text);">&gt; rsp </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">getServer()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getServicesManager</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getRegistration</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Chat</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">class</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        chat </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">rsp</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getProvider</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> chat </span><span style="color:var(--shiki-token-keyword);">!=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">boolean</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">setupPermissions</span><span style="color:var(--shiki-color-text);">() {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">RegisteredServiceProvider</span><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-keyword);">Permission</span><span style="color:var(--shiki-color-text);">&gt; rsp </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">getServer()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getServicesManager</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getRegistration</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Permission</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">class</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        perms </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">rsp</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getProvider</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> perms </span><span style="color:var(--shiki-token-keyword);">!=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">boolean</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">onCommand</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">CommandSender</span><span style="color:var(--shiki-color-text);"> sender</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Command</span><span style="color:var(--shiki-color-text);"> command</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> commandLabel</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);">[] args) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">!</span><span style="color:var(--shiki-color-text);">(sender </span><span style="color:var(--shiki-token-keyword);">instanceof</span><span style="color:var(--shiki-color-text);"> Player)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">log</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">info</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;Only players are supported for this Example Plugin, but you should not do this!!!&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">true</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">Player</span><span style="color:var(--shiki-color-text);"> player </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> (Player) sender;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">command</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getLabel</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">equals</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;test-economy&quot;</span><span style="color:var(--shiki-color-text);">)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-comment);">// Lets give the player 1.05 currency (note that SOME economic plugins require rounding!)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">sender</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">sendMessage</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">String</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">format</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;You have %s&quot;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">econ</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">format</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">econ</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getBalance</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getName</span><span style="color:var(--shiki-color-text);">()))));</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">EconomyResponse</span><span style="color:var(--shiki-color-text);"> r </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">econ</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">depositPlayer</span><span style="color:var(--shiki-color-text);">(player</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">1.05</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">r</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">transactionSuccess</span><span style="color:var(--shiki-color-text);">()) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-constant);">sender</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">sendMessage</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">String</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">format</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;You were given %s and now have %s&quot;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">econ</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">format</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">r</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">amount</span><span style="color:var(--shiki-color-text);">)</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">econ</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">format</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">r</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">balance</span><span style="color:var(--shiki-color-text);">)));</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-constant);">sender</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">sendMessage</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">String</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">format</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;An error occured: %s&quot;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">r</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">errorMessage</span><span style="color:var(--shiki-color-text);">));</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">true</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">command</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getLabel</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">equals</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;test-permission&quot;</span><span style="color:var(--shiki-color-text);">)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-comment);">// Lets test if user has the node &quot;example.plugin.awesome&quot; to determine if they are awesome or just suck</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">perms</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">has</span><span style="color:var(--shiki-color-text);">(player</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;example.plugin.awesome&quot;</span><span style="color:var(--shiki-color-text);">)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-constant);">sender</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">sendMessage</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;You are awesome!&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-constant);">sender</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">sendMessage</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;You suck!&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">true</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">false</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Economy</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">getEconomy</span><span style="color:var(--shiki-color-text);">() {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> econ;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Permission</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">getPermissions</span><span style="color:var(--shiki-color-text);">() {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> perms;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Chat</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">getChat</span><span style="color:var(--shiki-color-text);">() {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> chat;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><p><code>RegisteredServiceProvider</code> 是「中间商」。由于我们只能访问到 Vault 的 API，这个中间商就负责将一个接口与一个实现它的类「绑」起来。也就是说，通过它的 <code>getProvider</code> 方法，我们获得了符合这个接口的一个类实例。至于那个实例具体怎么样……不在考虑范围之内。</p><p>还不明白？图！</p><p><img src="https://s2.loli.net/2023/06/24/QukUXfxJIiOYw2D.png" alt="RSP.png"></p><div class="tip custom-block"><p class="custom-block-title"><img src="data:image/svg+xml,%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#39;0 0 1028 1024&#39; transform=&#39;scale(0.6)&#39; fill=&#39;%23fff&#39;%3E%3Cpath d=&#39;M1018.319924 112.117535q4.093748 9.210934 6.652341 21.492179t2.558593 25.585928-5.117186 26.609365-16.374994 25.585928q-12.281245 12.281245-22.003898 21.492179t-16.886712 16.374994q-8.187497 8.187497-15.351557 14.32812l-191.382739-191.382739q12.281245-11.257808 29.167958-27.121083t28.144521-25.074209q14.32812-11.257808 29.679676-15.863275t30.191395-4.093748 28.656239 4.605467 24.050772 9.210934q21.492179 11.257808 47.589826 39.402329t40.425766 58.847634zM221.062416 611.554845q6.140623-6.140623 28.656239-29.167958t56.289041-56.80076l74.710909-74.710909 82.898406-82.898406 220.038979-220.038979 191.382739 192.406177-220.038979 220.038979-81.874969 82.898406q-40.937484 39.914047-73.687472 73.175753t-54.242167 54.753885-25.585928 24.562491q-10.234371 9.210934-23.539054 19.445305t-27.632802 16.374994q-14.32812 7.16406-41.960921 17.398431t-57.824197 19.957024-57.312478 16.886712-40.425766 9.210934q-27.632802 3.070311-36.843736-8.187497t-5.117186-37.867173q2.046874-14.32812 9.722653-41.449203t16.374994-56.289041 16.886712-53.730448 13.304682-33.773425q6.140623-14.32812 13.816401-26.097646t22.003898-26.097646z&#39;/%3E%3C/svg%3E" style="background-color:#057E3D;clip-path:circle();" width="24px" height="24px"> <strong>编者注</strong></p><p>有鉴于图床失效、原图丢失，上图系定稿后再行修补，图文未必贴合。</p></div><p>打比方说就是，你提供需要的服务（接口的 <code>class</code>）给 Bukkit，Bukkit 为你去找符合条件的酒店（提供方），你得到酒店地址后也不用了解它的底细（知道具体的类），走进去，里面就有你需要的服务（实现了接口）。</p><p>得到了接口的实现后，就可以开始进行开发了。关于究竟要如何利用一个插件为你提供的类、方法等内容，这是各个插件作者决定的，笔者也帮不上忙。你需要阅读相应插件的作者们所编写的文档。</p><p>对了！最后打包时，记得把对应的 API 一起打包进去，可以参考 AC-1-3 中打包 JDBC 的过程（右键，「Extract Into Output Root」）。</p><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><ol><li>创建 Maven 项目，添加依赖</li><li>检查插件是否可用</li><li>使用「中间商」获得接口对应的对象</li><li>像使用 Bukkit API 一样使用 Vault API 吧！</li></ol><p>就是这样。</p>`,83),l=[e];function r(i,p,c,k,y,v){return o(),n("div",null,l)}const u=s(t,[["render",r]]);export{x as __pageData,u as default};
