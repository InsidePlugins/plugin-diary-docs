import{_ as s,o,c as n,S as a}from"./chunks/framework.7f03344f.js";const x=JSON.parse('{"title":"AC-3-1 CuteCoin Part 1","description":"","frontmatter":{},"headers":[],"relativePath":"Volume8/AC-3-1.md","filePath":"docs/Volume8/AC-3-1.md","lastUpdated":1698403164000}'),t={name:"Volume8/AC-3-1.md"},r=a(`<h1 id="ac-3-1-cutecoin-part-1" tabindex="-1">AC-3-1 CuteCoin Part 1 <a class="header-anchor" href="#ac-3-1-cutecoin-part-1" aria-label="Permalink to &quot;AC-3-1 CuteCoin Part 1&quot;">​</a></h1><h2 id="行动背景" tabindex="-1">行动背景 <a class="header-anchor" href="#行动背景" aria-label="Permalink to &quot;行动背景&quot;">​</a></h2><p>Minecraft 原版没有提供合适的经济系统，虽然用金锭代替货币很合适，但不利于携带与交易。此外，插件想要检测玩家的钱财也很困难，这就催生了经济系统插件。</p><p>笔者不是很喜欢「金币 - 点券」这样的结构，我们希望服务器使用多种货币，并且可由服主管理。那么我们就来做一个这样的插件。</p><h2 id="行动规划" tabindex="-1">行动规划 <a class="header-anchor" href="#行动规划" aria-label="Permalink to &quot;行动规划&quot;">​</a></h2><div class="danger custom-block"><p class="custom-block-title"><img src="data:image/svg+xml,%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#39;0 0 16 16&#39; transform=&#39;scale(0.6)&#39; fill=&#39;%23fff&#39;%3E%3Cpath d=&#39;M10 14C10 15.1 9.1 16 8 16 6.9 16 6 15.1 6 14 6 12.9 6.9 12 8 12 9.1 12 10 12.9 10 14Z&#39;/%3E%3Cpath d=&#39;M10 1.6C10 1.2 9.8 0.9 9.6 0.7 9.2 0.3 8.6 0 8 0 7.4 0 6.8 0.2 6.5 0.6 6.2 0.9 6 1.2 6 1.6 6 1.7 6 1.8 6 1.9L6.8 9.6C6.9 9.9 7 10.1 7.2 10.2 7.4 10.4 7.7 10.5 8 10.5 8.3 10.5 8.6 10.4 8.8 10.3 9 10.1 9.1 9.9 9.2 9.6L10 1.9C10 1.8 10 1.7 10 1.6Z&#39;/%3E%3C/svg%3E" style="background-color:#DA0B50;clip-path:circle();" width="24px" height="24px"> <strong>CuteCoin 的许可协议</strong></p><p>CuteCoin 不适用首页的许可，它遵循 <a href="https://www.gnu.org/licenses/gpl-3.0.html" target="_blank" rel="noreferrer">GNU 通用公共许可证（第三版）</a>，请仔细阅读该许可证。该许可证也包含在其代码仓库中。</p><p><img src="https://www.gnu.org/graphics/gplv3-with-text-136x68.png" alt="GPLv3.png"></p></div><blockquote><p>行动名称：CuteCoin</p><p>行动代号：AC-3</p><p>行动类别：作战</p><p>涉及章节：</p><ul><li>AC-3-1</li><li>AC-3-2</li></ul><p>难度：<s>（小）</s>末影龙</p></blockquote><p>我们希望我们的插件有这些功能：</p><ul><li>自定义货币</li><li>使用数据库和文件存储数据</li><li>可以进行货币兑换及转账</li></ul><p>暂时就这些功能，但是我们要将这个插件做得可靠。</p><h2 id="开始行动" tabindex="-1">开始行动 <a class="header-anchor" href="#开始行动" aria-label="Permalink to &quot;开始行动&quot;">​</a></h2><p>这次我们使用 Maven 进行开发。</p><p>不知道怎么回事，笔者的 IDEA 在管理多个 Maven 项目时很混乱，构建耗时也很长，因此这次我们重新创建一个新的项目吧。</p><p>单击菜单中的「File」、「Close Project」关闭这个我们一直在其中工作的项目，回到 IDEA 首页。</p><p>单击「New Project」，在弹出的窗口左侧选择「Maven」，单击「Next」。</p><p>为新项目命名为「CuteCoin」，「GroupId」改成你的包名（我就直接用 <code>rarityeg</code> 了）。</p><p>单击「Finish」完成。</p><div class="info custom-block"><p class="custom-block-title"><img src="data:image/svg+xml,%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#39;0 0 16 16&#39; transform=&#39;scale(0.6)&#39; fill=&#39;%23fff&#39;%3E%3Cpath d=&#39;M9.1 0C10.2 0 10.7 0.7 10.7 1.6 10.7 2.6 9.8 3.6 8.6 3.6 7.6 3.6 7 3 7 2 7 1.1 7.7 0 9.1 0Z&#39;/%3E%3Cpath d=&#39;M5.8 16C5 16 4.4 15.5 5 13.2L5.9 9.1C6.1 8.5 6.1 8.2 5.9 8.2 5.7 8.2 4.6 8.6 3.9 9.1L3.5 8.4C5.6 6.6 7.9 5.6 8.9 5.6 9.8 5.6 9.9 6.6 9.5 8.2L8.4 12.5C8.2 13.2 8.3 13.5 8.5 13.5 8.7 13.5 9.6 13.2 10.4 12.5L10.9 13.2C8.9 15.2 6.7 16 5.8 16Z&#39;/%3E%3C/svg%3E" style="background-color:#0B87DA;clip-path:circle();" width="24px" height="24px"> <strong>到底怎么回事</strong>？</p><p>Maven 的项目管理方法和 IDEA 不一样，Maven 中的「项目」相当于 IDEA 中的「模块」，然而由于我们之前的项目中混合使用了传统项目和 Maven 项目，Maven 和 IDEA 被搞糊涂了。</p><p>按照标准，实际上一个 Maven 项目就对应 IDEA 中的一个项目，这样做也能提升 Build 的速度。</p></div><p>现在你的 <code>pom.xml</code> 应该像这样：</p><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-color-text);">&lt;?</span><span style="color:var(--shiki-token-string-expression);">xml</span><span style="color:var(--shiki-token-function);"> version</span><span style="color:var(--shiki-color-text);">=</span><span style="color:var(--shiki-token-string-expression);">&quot;1.0&quot;</span><span style="color:var(--shiki-token-function);"> encoding</span><span style="color:var(--shiki-color-text);">=</span><span style="color:var(--shiki-token-string-expression);">&quot;UTF-8&quot;</span><span style="color:var(--shiki-color-text);">?&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-string-expression);">project</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">xmlns</span><span style="color:var(--shiki-color-text);">=</span><span style="color:var(--shiki-token-string-expression);">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">         </span><span style="color:var(--shiki-token-function);">xmlns</span><span style="color:var(--shiki-token-punctuation);">:</span><span style="color:var(--shiki-token-function);">xsi</span><span style="color:var(--shiki-color-text);">=</span><span style="color:var(--shiki-token-string-expression);">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">         </span><span style="color:var(--shiki-token-function);">xsi</span><span style="color:var(--shiki-token-punctuation);">:</span><span style="color:var(--shiki-token-function);">schemaLocation</span><span style="color:var(--shiki-color-text);">=</span><span style="color:var(--shiki-token-string-expression);">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    &lt;</span><span style="color:var(--shiki-token-string-expression);">modelVersion</span><span style="color:var(--shiki-color-text);">&gt;4.0.0&lt;/</span><span style="color:var(--shiki-token-string-expression);">modelVersion</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    &lt;</span><span style="color:var(--shiki-token-string-expression);">groupId</span><span style="color:var(--shiki-color-text);">&gt;这里是你自己命名的！&lt;/</span><span style="color:var(--shiki-token-string-expression);">groupId</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    &lt;</span><span style="color:var(--shiki-token-string-expression);">artifactId</span><span style="color:var(--shiki-color-text);">&gt;CuteCoin&lt;/</span><span style="color:var(--shiki-token-string-expression);">artifactId</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    &lt;</span><span style="color:var(--shiki-token-string-expression);">version</span><span style="color:var(--shiki-color-text);">&gt;1.0-SNAPSHOT&lt;/</span><span style="color:var(--shiki-token-string-expression);">version</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    &lt;</span><span style="color:var(--shiki-token-string-expression);">properties</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        &lt;</span><span style="color:var(--shiki-token-string-expression);">maven.compiler.source</span><span style="color:var(--shiki-color-text);">&gt;11&lt;/</span><span style="color:var(--shiki-token-string-expression);">maven.compiler.source</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        &lt;</span><span style="color:var(--shiki-token-string-expression);">maven.compiler.target</span><span style="color:var(--shiki-color-text);">&gt;11&lt;/</span><span style="color:var(--shiki-token-string-expression);">maven.compiler.target</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    &lt;/</span><span style="color:var(--shiki-token-string-expression);">properties</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">&lt;/</span><span style="color:var(--shiki-token-string-expression);">project</span><span style="color:var(--shiki-color-text);">&gt;</span></span></code></pre></div><p>现在我们需要添加三个依赖，分别是 JDBC，Paper API 和 RarityCommons（好不容易写好了，为什么不用呢）。</p><p>在 <code>pom.xml</code> 中加入（建议直接加在 <code>&lt;/project&gt;</code> 上面）：</p><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-string-expression);">repositories</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">&lt;!-- Apache Maven 中央仓库是内置的 --&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    &lt;</span><span style="color:var(--shiki-token-string-expression);">repository</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        &lt;</span><span style="color:var(--shiki-token-string-expression);">id</span><span style="color:var(--shiki-color-text);">&gt;papermc&lt;/</span><span style="color:var(--shiki-token-string-expression);">id</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        &lt;</span><span style="color:var(--shiki-token-string-expression);">url</span><span style="color:var(--shiki-color-text);">&gt;https://papermc.io/repo/repository/maven-public/&lt;/</span><span style="color:var(--shiki-token-string-expression);">url</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    &lt;/</span><span style="color:var(--shiki-token-string-expression);">repository</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">&lt;!-- Paper Maven 仓库 --&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    &lt;</span><span style="color:var(--shiki-token-string-expression);">repository</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        &lt;</span><span style="color:var(--shiki-token-string-expression);">id</span><span style="color:var(--shiki-color-text);">&gt;plugin-diary-code&lt;/</span><span style="color:var(--shiki-token-string-expression);">id</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        &lt;</span><span style="color:var(--shiki-token-string-expression);">url</span><span style="color:var(--shiki-color-text);">&gt;https://raw.fastgit.org/Andy-K-Sparklight/PluginDiaryCode/master/repo/&lt;/</span><span style="color:var(--shiki-token-string-expression);">url</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    &lt;/</span><span style="color:var(--shiki-token-string-expression);">repository</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">&lt;!-- 我的 Maven 仓库 --&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">&lt;/</span><span style="color:var(--shiki-token-string-expression);">repositories</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-string-expression);">dependencies</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    &lt;</span><span style="color:var(--shiki-token-string-expression);">dependency</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        &lt;</span><span style="color:var(--shiki-token-string-expression);">groupId</span><span style="color:var(--shiki-color-text);">&gt;com.destroystokyo.paper&lt;/</span><span style="color:var(--shiki-token-string-expression);">groupId</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        &lt;</span><span style="color:var(--shiki-token-string-expression);">artifactId</span><span style="color:var(--shiki-color-text);">&gt;paper-api&lt;/</span><span style="color:var(--shiki-token-string-expression);">artifactId</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        &lt;</span><span style="color:var(--shiki-token-string-expression);">version</span><span style="color:var(--shiki-color-text);">&gt;1.16.5-R0.1-SNAPSHOT&lt;/</span><span style="color:var(--shiki-token-string-expression);">version</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        &lt;</span><span style="color:var(--shiki-token-string-expression);">scope</span><span style="color:var(--shiki-color-text);">&gt;provided&lt;/</span><span style="color:var(--shiki-token-string-expression);">scope</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-comment);">&lt;!-- Paper --&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    &lt;/</span><span style="color:var(--shiki-token-string-expression);">dependency</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    &lt;</span><span style="color:var(--shiki-token-string-expression);">dependency</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        &lt;</span><span style="color:var(--shiki-token-string-expression);">groupId</span><span style="color:var(--shiki-color-text);">&gt;rarityeg&lt;/</span><span style="color:var(--shiki-token-string-expression);">groupId</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        &lt;</span><span style="color:var(--shiki-token-string-expression);">artifactId</span><span style="color:var(--shiki-color-text);">&gt;commons&lt;/</span><span style="color:var(--shiki-token-string-expression);">artifactId</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        &lt;</span><span style="color:var(--shiki-token-string-expression);">version</span><span style="color:var(--shiki-color-text);">&gt;1.0-SNAPSHOT&lt;/</span><span style="color:var(--shiki-token-string-expression);">version</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-comment);">&lt;!-- RarityCommons --&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-comment);">&lt;!-- 这是注释，不必添加！ --&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    &lt;/</span><span style="color:var(--shiki-token-string-expression);">dependency</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    &lt;</span><span style="color:var(--shiki-token-string-expression);">dependency</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        &lt;</span><span style="color:var(--shiki-token-string-expression);">groupId</span><span style="color:var(--shiki-color-text);">&gt;mysql&lt;/</span><span style="color:var(--shiki-token-string-expression);">groupId</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        &lt;</span><span style="color:var(--shiki-token-string-expression);">artifactId</span><span style="color:var(--shiki-color-text);">&gt;mysql-connector-java&lt;/</span><span style="color:var(--shiki-token-string-expression);">artifactId</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        &lt;</span><span style="color:var(--shiki-token-string-expression);">version</span><span style="color:var(--shiki-color-text);">&gt;[8.0.23,)&lt;/</span><span style="color:var(--shiki-token-string-expression);">version</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-comment);">&lt;!-- JDBC --&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    &lt;/</span><span style="color:var(--shiki-token-string-expression);">dependency</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">&lt;/</span><span style="color:var(--shiki-token-string-expression);">dependencies</span><span style="color:var(--shiki-color-text);">&gt;</span></span></code></pre></div><p>这里我们包括了 Maven 中央仓库（Maven 内置）、Paper 仓库和我的 Maven 仓库。我的仓库是通过 FastGit 分发的，在此感谢其运营者们的奉献！</p><p>单击右上角的「Load Maven Changes」（或按下 <kbd>Ctrl</kbd> + <kbd>Shift</kbd> + <kbd>O</kbd>），重新载入 Maven 仓库，这样 Paper API，JDBC 和 RarityCommons 即被下载到你的计算机上。</p><p><em>Maven 的好处就在这里，即使你没有看 6-3，没有编写 RarityCommons，也可以使用它，只需要一条链接就可以了。</em></p><div class="danger custom-block"><p class="custom-block-title"><img src="data:image/svg+xml,%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#39;0 0 16 16&#39; transform=&#39;scale(0.6)&#39; fill=&#39;%23fff&#39;%3E%3Cpath d=&#39;M10 14C10 15.1 9.1 16 8 16 6.9 16 6 15.1 6 14 6 12.9 6.9 12 8 12 9.1 12 10 12.9 10 14Z&#39;/%3E%3Cpath d=&#39;M10 1.6C10 1.2 9.8 0.9 9.6 0.7 9.2 0.3 8.6 0 8 0 7.4 0 6.8 0.2 6.5 0.6 6.2 0.9 6 1.2 6 1.6 6 1.7 6 1.8 6 1.9L6.8 9.6C6.9 9.9 7 10.1 7.2 10.2 7.4 10.4 7.7 10.5 8 10.5 8.3 10.5 8.6 10.4 8.8 10.3 9 10.1 9.1 9.9 9.2 9.6L10 1.9C10 1.8 10 1.7 10 1.6Z&#39;/%3E%3C/svg%3E" style="background-color:#DA0B50;clip-path:circle();" width="24px" height="24px"> <strong>注意</strong>！</p><p>RarityCommons 是<strong>自由软件</strong>，刚刚你的操作已经将它作为了你的<strong>依赖</strong>，按照 RarityCommons 的许可证（GPL - 3.0）规定，你的项目（即 CuteCoin）<strong>必须</strong>以相同的许可证发行！</p><p><strong>再次提醒</strong>！要么不发行，要么使用相同的许可证！</p><p>如果你不想使用 RarityCommons，请将它从您的 <code>pom.xml</code> 中移除，您便不再受 GPL - 3.0 的限制。</p><p>在附录中我们将讲到有关许可证的更多内容。</p></div><p>这样我们就准备好了开发环境。</p><p>右键 <code>java</code>（在 <code>src/main</code> 下），创建新的包和类，并继承 <code>JavaPluginR</code>（RarityCommons 中的）：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">package</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">你的包名</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">rarityeg</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">commons</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">JavaPluginR</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// 别导入错了！如果你不用 RarityCommons，这里可以使用 Bukkit 的 JavaPlugin</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">class</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">CuteCoin</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">extends</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">JavaPluginR</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><h2 id="配置文件" tabindex="-1">配置文件 <a class="header-anchor" href="#配置文件" aria-label="Permalink to &quot;配置文件&quot;">​</a></h2><p>这次我们要做一个服主可以自定义货币的配置文件，因此我们将 CuteCoin 的配置文件设计成这样：</p><div class="danger custom-block"><p class="custom-block-title"><img src="data:image/svg+xml,%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#39;0 0 16 16&#39; transform=&#39;scale(0.6)&#39; fill=&#39;%23fff&#39;%3E%3Cpath d=&#39;M10 14C10 15.1 9.1 16 8 16 6.9 16 6 15.1 6 14 6 12.9 6.9 12 8 12 9.1 12 10 12.9 10 14Z&#39;/%3E%3Cpath d=&#39;M10 1.6C10 1.2 9.8 0.9 9.6 0.7 9.2 0.3 8.6 0 8 0 7.4 0 6.8 0.2 6.5 0.6 6.2 0.9 6 1.2 6 1.6 6 1.7 6 1.8 6 1.9L6.8 9.6C6.9 9.9 7 10.1 7.2 10.2 7.4 10.4 7.7 10.5 8 10.5 8.3 10.5 8.6 10.4 8.8 10.3 9 10.1 9.1 9.9 9.2 9.6L10 1.9C10 1.8 10 1.7 10 1.6Z&#39;/%3E%3C/svg%3E" style="background-color:#DA0B50;clip-path:circle();" width="24px" height="24px"> <strong>当心</strong>！</p><p>Maven 项目的结构有所不同，<code>config.yml</code>、<code>plugin.yml</code> 等非 Java 内容需要放在 <code>src/resources</code> 下才能被正确打包！</p></div><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">main-coin</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">cute-coin</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);"># 主要货币</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">coins</span><span style="color:var(--shiki-token-keyword);">:</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">cute-coin</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);"># 货币英文名，只允许小写字母，数字和减号！</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">name</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;可爱币&quot;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);"># 显示名称，以 &amp; 代替 § 来输入彩色符号</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">description</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;❤ So Cute~&quot;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);"># 介绍</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">value</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);"># 价值，这决定货币转换和财产评估时的数据</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">exchange</span><span style="color:var(--shiki-token-keyword);">:</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">in</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">true</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);"># 允许兑换为这种货币</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">out</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">true</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);"># 允许将这种货币兑换为其它货币</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">tax</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);"># 兑换为其它货币时不收税</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">transfer</span><span style="color:var(--shiki-token-keyword);">:</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">allow</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">true</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);"># 允许转账</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">tax</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);"># 转账时不收费</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-comment);"># 另一个货币的示例</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">crystal</span><span style="color:var(--shiki-token-keyword);">:</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">name</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;水晶币&quot;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">description</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;如此纯净的水晶，让我的心也变得如一汪清水……&quot;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">value</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">20</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);"># 1 水晶币转换为 20 可爱币</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">max</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">100</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);"># 最多允许持有 100 个水晶币，主要货币不允许设置最大值！</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">exchange</span><span style="color:var(--shiki-token-keyword);">:</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">in</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">true</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);"># 不允许兑换为这种货币</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">out</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">false</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);"># 允许将这种货币兑换为其它货币</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">tax</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0.5</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);"># 兑换为其它货币时，收取 50% 手续费</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">transfer</span><span style="color:var(--shiki-token-keyword);">:</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">allow</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">false</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);"># 不允许转账</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">tax</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);"># 不允许转账时，此项无需配置</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-comment);"># 继续添加您的货币...</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">messages</span><span style="color:var(--shiki-token-keyword);">:</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">ok</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;&amp;a操作成功完成&quot;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">cancelled</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;&amp;c操作已经取消&quot;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">not-enough</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;&amp;c您没有足够的 &amp;6{1.name} 来完成本操作！&quot;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">confirm</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;&amp;d&amp;l要继续吗？&amp;b(&amp;ay&amp;b/&amp;cn&amp;b)&quot;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">overflow-hint</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;&amp;e进行此操作后，您的 &amp;6{1.name}&amp;e 将超出 &amp;6\${overflow}\\n&amp;e超出部分将被转换为 &amp;6\${2.count} \${2.name}&quot;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">exchange</span><span style="color:var(--shiki-token-keyword);">:</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);"># \${xxx} 代表 xxx 变量</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);"># 1 要兑出的货币</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);"># 2 要兑入的货币</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);"># count 数量，name 名字，tax.rate 税率，tax.result 合计后消耗</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);"># tax.rate 已经包括百分号</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);"># 使用 &amp; 代替 § 渲染颜色</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">to</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;&amp;e您正在将 &amp;6\${1.count} \${1.name}&amp;e 转换为 &amp;6\${2.count} \${2.name}\\n&amp;e这将收取手续费 &amp;6\${tax.rate}&amp;e，合 &amp;6\${tax.result} \${1.name}&amp;e&quot;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">no-out</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;&amp;c抱歉，&amp;6\${1.name}&amp;c 目前不允许被兑出&quot;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">no-in</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;&amp;c抱歉，&amp;6\${1.name}&amp;c 目前不允许被兑入&quot;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">transfer</span><span style="color:var(--shiki-token-keyword);">:</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">to</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;&amp;e您正在将 &amp;6\${1.count} \${1.name}&amp;e 转账给 \${player.name}\\n&amp;e这将收取手续费 &amp;6\${tax.rate}&amp;e，合 &amp;6\${tax.result} \${1.name}&amp;e&quot;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">from</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;&amp;e您收到来自 \${player.name} 转账的 \${1.count} \${1.name}&quot;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">no-transfer</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;&amp;c抱歉，&amp;6\${1.name}&amp;c 目前不允许转账&quot;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">sprintf</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;&amp;6\${1.name}  \${1.count}/\${1.max}\\n&amp;7\${1.description}&quot;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-comment);"># 玩家请求查询货币时的响应</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">mysql</span><span style="color:var(--shiki-token-keyword);">:</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">use</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">false</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);"># false 以使用文件，true 以使用 MySQL</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">host</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">localhost</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);"># 数据库主机</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">db-name</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">cutecoin</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);"># 数据库名</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">username</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">root</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);"># 用户名</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">password</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">123456</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);"># 密码</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">port</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">3306</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);"># 端口</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">save-threshold</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">30</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);"># 数据库写入缓存时间，0 以禁用（仅在关闭时保存）</span></span></code></pre></div><p>这里我模仿了 JavaScript 中的插值语句，稍后我们将实现这项功能。</p><h2 id="货币类" tabindex="-1">货币类 <a class="header-anchor" href="#货币类" aria-label="Permalink to &quot;货币类&quot;">​</a></h2><p>首先我们创建一个 <code>Coin</code> 类描述货币。这很简单……</p><p>不过先等等，万一将来有人要对我们的插件进行开发，我们最好不要直接提供我们当前的类（因为其它开发者可能会创建自己的货币类型），我们先创建抽象的 <code>Coin</code> 类，再用其它的类来继承它。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">package</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">rarityeg</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">cutecoin</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">javax</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">annotation</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">Nonnull</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">abstract</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">class</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">Coin</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">abstract</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">getValue</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">abstract</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">getMax</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">valueOf</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);"> count) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> count </span><span style="color:var(--shiki-token-keyword);">*</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">getValue()</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">countOf</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);"> value) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> value </span><span style="color:var(--shiki-token-keyword);">/</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">getValue()</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">Nonnull</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">abstract</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">getName</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">Nonnull</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">abstract</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">getDescription</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">abstract</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">boolean</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">isAllowOut</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">abstract</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">boolean</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">isAllowIn</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">abstract</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">boolean</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">isAllowTransfer</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">abstract</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">double</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">getExchangeTax</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">abstract</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">double</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">getTransferTax</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">exchangeTo</span><span style="color:var(--shiki-color-text);">(@</span><span style="color:var(--shiki-token-keyword);">Nonnull</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Coin</span><span style="color:var(--shiki-color-text);"> target</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);"> count</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">double</span><span style="color:var(--shiki-color-text);"> tax) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);">) ((count </span><span style="color:var(--shiki-token-keyword);">*</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">getValue()</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">*</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">-</span><span style="color:var(--shiki-color-text);"> tax)) </span><span style="color:var(--shiki-token-keyword);">/</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">target</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getValue</span><span style="color:var(--shiki-color-text);">());</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><p><code>abstract</code> 用于标识「这个方法还没有实现，用不了哦」。</p><p>我们还需要一个类来管理所有存在的币种，这很简单：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">package</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">rarityeg</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">cutecoin</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">javax</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">annotation</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">Nullable</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">java</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">security</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">InvalidParameterException</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">java</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">util</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">Map</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">java</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">util</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">concurrent</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">ConcurrentHashMap</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">final</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">class</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">CoinManager</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">final</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Map</span><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Coin</span><span style="color:var(--shiki-color-text);">&gt; allCoins </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">ConcurrentHashMap</span><span style="color:var(--shiki-color-text);">&lt;&gt;();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Coin</span><span style="color:var(--shiki-color-text);"> mainCoin;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">Nonnull</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Coin</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">byName</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> name) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">Coin</span><span style="color:var(--shiki-color-text);"> c </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">allCoins</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">get</span><span style="color:var(--shiki-color-text);">(name);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (c </span><span style="color:var(--shiki-token-keyword);">==</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">throw</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">InvalidParameterException(</span><span style="color:var(--shiki-token-string-expression);">&quot;Coin not found!&quot;</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> c;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">void</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">registerCoin</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">Coin</span><span style="color:var(--shiki-color-text);"> coin) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">allCoins</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">containsKey</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">coin</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getName</span><span style="color:var(--shiki-color-text);">())) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">throw</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">InvalidParameterException(</span><span style="color:var(--shiki-token-string-expression);">&quot;Coin of same name already exists!&quot;</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">allCoins</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">put</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">coin</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getName</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> coin);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Set</span><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);">&gt; </span><span style="color:var(--shiki-token-function);">getCoins</span><span style="color:var(--shiki-color-text);">() {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">allCoins</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">keySet</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">void</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">setMainCoin</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">Coin</span><span style="color:var(--shiki-color-text);"> coin) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (mainCoin </span><span style="color:var(--shiki-token-keyword);">==</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            mainCoin </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> coin;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">        } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">throw</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">IllegalStateException(</span><span style="color:var(--shiki-token-string-expression);">&quot;Main coin has already been set!&quot;</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Coin</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">getMainCoin</span><span style="color:var(--shiki-color-text);">() {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> mainCoin;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><p>接下来我们来实现 <code>Coin</code> 类。由于我们的货币是基于配置文件创建的，因此我们称之为 <code>ConfigCoin</code>。除了实现 <code>Coin</code> 的方法以外，我们还需要为它创建从配置文件读取的功能，实际上实现这个也很简单：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">package</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">rarityeg</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">cutecoin</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">org</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">configuration</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">Configuration</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">javax</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">annotation</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">Nonnull</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">java</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">security</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">InvalidParameterException</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">class</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">ConfigCoin</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">extends</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">Coin</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">final</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);"> VALUE;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">final</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> NAME;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">final</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);"> MAX;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">final</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> DESCRIPTION;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">final</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">boolean</span><span style="color:var(--shiki-color-text);"> ALLOW_OUT;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">final</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">boolean</span><span style="color:var(--shiki-color-text);"> ALLOW_IN;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">final</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">boolean</span><span style="color:var(--shiki-color-text);"> ALLOW_TRANSFER;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">final</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">double</span><span style="color:var(--shiki-color-text);"> EXCHANGE_TAX;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">final</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">double</span><span style="color:var(--shiki-color-text);"> TRANSFER_TAX;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">ConfigCoin</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> id) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">Configuration</span><span style="color:var(--shiki-color-text);"> config </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">CuteCoin</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getInstance</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getConfig</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> coinPath </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;coins.&quot;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> id;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">config</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">get</span><span style="color:var(--shiki-color-text);">(coinPath) </span><span style="color:var(--shiki-token-keyword);">==</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">throw</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">InvalidParameterException(</span><span style="color:var(--shiki-token-string-expression);">&quot;Coin of this id not found.&quot;</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        coinPath </span><span style="color:var(--shiki-token-keyword);">+=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;.&quot;</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> name </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">config</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getString</span><span style="color:var(--shiki-color-text);">(coinPath </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;name&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> description </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">config</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getString</span><span style="color:var(--shiki-color-text);">(coinPath </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;description&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (name </span><span style="color:var(--shiki-token-keyword);">==</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">||</span><span style="color:var(--shiki-color-text);"> description </span><span style="color:var(--shiki-token-keyword);">==</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">throw</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">InvalidParameterException(</span><span style="color:var(--shiki-token-string-expression);">&quot;Coin data missing!&quot;</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);"> value </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">config</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getInt</span><span style="color:var(--shiki-color-text);">(coinPath </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;value&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);"> max </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">config</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getInt</span><span style="color:var(--shiki-color-text);">(coinPath </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;max&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">boolean</span><span style="color:var(--shiki-color-text);"> allowIn </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">config</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getBoolean</span><span style="color:var(--shiki-color-text);">(coinPath </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;exchange.in&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">boolean</span><span style="color:var(--shiki-color-text);"> allowOut </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">config</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getBoolean</span><span style="color:var(--shiki-color-text);">(coinPath </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;exchange.out&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">double</span><span style="color:var(--shiki-color-text);"> exchangeTax </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">config</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getDouble</span><span style="color:var(--shiki-color-text);">(coinPath </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;exchange.tax&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">boolean</span><span style="color:var(--shiki-color-text);"> allowTransfer </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">config</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getBoolean</span><span style="color:var(--shiki-color-text);">(coinPath </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;transfer.allow&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">double</span><span style="color:var(--shiki-color-text);"> transferTax </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">config</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getDouble</span><span style="color:var(--shiki-color-text);">(coinPath </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;transfer.tax&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        NAME </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> name;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        DESCRIPTION </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> description;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        VALUE </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> value;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        MAX </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> max;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        ALLOW_IN </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> allowIn;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        ALLOW_OUT </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> allowOut;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        EXCHANGE_TAX </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> exchangeTax;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        TRANSFER_TAX </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> transferTax;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        ALLOW_TRANSFER </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> allowTransfer;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">Override</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">getValue</span><span style="color:var(--shiki-color-text);">() {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> VALUE;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">Override</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">getMax</span><span style="color:var(--shiki-color-text);">() {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> MAX;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">Override</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">Nonnull</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">getName</span><span style="color:var(--shiki-color-text);">() {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> NAME;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">Override</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">Nonnull</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">getDescription</span><span style="color:var(--shiki-color-text);">() {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> DESCRIPTION;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">Override</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">boolean</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">isAllowOut</span><span style="color:var(--shiki-color-text);">() {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> ALLOW_OUT;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">Override</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">boolean</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">isAllowIn</span><span style="color:var(--shiki-color-text);">() {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> ALLOW_IN;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">Override</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">boolean</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">isAllowTransfer</span><span style="color:var(--shiki-color-text);">() {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> ALLOW_TRANSFER;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">Override</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">double</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">getExchangeTax</span><span style="color:var(--shiki-color-text);">() {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> EXCHANGE_TAX;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">Override</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">double</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">getTransferTax</span><span style="color:var(--shiki-color-text);">() {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> TRANSFER_TAX;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><p>接下来我们需要在插件加载时注册所有的货币，修改主类：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">boolean</span><span style="color:var(--shiki-color-text);"> isDBAvailable </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">false</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">@</span><span style="color:var(--shiki-token-keyword);">Override</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">void</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">onEnable()</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">try</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-function);">saveDefaultConfig()</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    	</span><span style="color:var(--shiki-token-comment);">// 保存配置</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    	</span><span style="color:var(--shiki-token-keyword);">Set</span><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);">&gt; allCoins </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Objects</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">requireNonNullElseGet</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-function);">getConfig()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getConfigurationSection</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;coins&quot;</span><span style="color:var(--shiki-color-text);">)</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            	() </span><span style="color:var(--shiki-token-keyword);">-&gt;</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-keyword);">throw</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">InvalidParameterException(</span><span style="color:var(--shiki-token-string-expression);">&quot;You shouldn&#39;t have removed the &#39;coins&#39; section!&quot;</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            })</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getKeys</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">false</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// requireNonNullElseGet 是一个比较高级的用法，查看得到的值是否是 null，如果是，就执行后面的方法，这里我们选择直接抛出异常。</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    	</span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">allCoins</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">size</span><span style="color:var(--shiki-color-text);">() </span><span style="color:var(--shiki-token-keyword);">==</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        	</span><span style="color:var(--shiki-token-keyword);">throw</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">InvalidParameterException(</span><span style="color:var(--shiki-token-string-expression);">&quot;At least one coin should be added!&quot;</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        	</span><span style="color:var(--shiki-token-comment);">// 不设置货币想啥呢</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    	}</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    	</span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> mainCoin </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">getConfig()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getString</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;main-coin&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    	</span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (mainCoin </span><span style="color:var(--shiki-token-keyword);">==</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        	</span><span style="color:var(--shiki-token-keyword);">throw</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">InvalidParameterException(</span><span style="color:var(--shiki-token-string-expression);">&quot;You must specify the main coin!&quot;</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        	</span><span style="color:var(--shiki-token-comment);">// 不设置主货币想啥呢</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    	}</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    	</span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-function);">getConfig()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getString</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;coins.&quot;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> mainCoin </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;.name&quot;</span><span style="color:var(--shiki-color-text);">) </span><span style="color:var(--shiki-token-keyword);">==</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        	</span><span style="color:var(--shiki-token-keyword);">throw</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">InvalidParameterException(</span><span style="color:var(--shiki-token-string-expression);">&quot;The main coin does not exist!&quot;</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        	</span><span style="color:var(--shiki-token-comment);">// 阁下何不乘风起，扶摇直上九万里？</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    	}</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    	</span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-function);">getConfig()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getInt</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;coins.&quot;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> mainCoin </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;.max&quot;</span><span style="color:var(--shiki-color-text);">) </span><span style="color:var(--shiki-token-keyword);">!=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        	</span><span style="color:var(--shiki-token-keyword);">throw</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">InvalidParameterException(</span><span style="color:var(--shiki-token-string-expression);">&quot;Main coin could not have a limit!&quot;</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        	</span><span style="color:var(--shiki-token-comment);">// 主货币不允许有上限</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    	}</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    	</span><span style="color:var(--shiki-token-keyword);">for</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> key </span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> allCoins) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        	</span><span style="color:var(--shiki-token-keyword);">Coin</span><span style="color:var(--shiki-color-text);"> c </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">ConfigCoin(key)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        	</span><span style="color:var(--shiki-token-constant);">CoinManager</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">registerCoin</span><span style="color:var(--shiki-color-text);">(c);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        	</span><span style="color:var(--shiki-token-comment);">// 注册各个 Coin</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    	}</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    	</span><span style="color:var(--shiki-token-constant);">CoinManager</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setMainCoin</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">ConfigCoin(mainCoin)</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    	</span><span style="color:var(--shiki-token-comment);">// 设置主货币</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    	isDBAvailable </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">getConfig()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getBoolean</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;mysql.use&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    } </span><span style="color:var(--shiki-token-keyword);">catch</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">InvalidParameterException</span><span style="color:var(--shiki-color-text);"> e) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">printStackTrace</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">Bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getPluginManager</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">disablePlugin</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">this</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-comment);">// 出现问题，拒绝工作</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><p>就这么简单。我们还顺便把数据库的启用信息读入了程序中。</p><p>另外，由于我们一会还要保存数据到文件中，所以现在在 <code>resources</code> 下创建文件 <code>data.yml</code>，并将相应代码写在 <code>onEnable</code> 中：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-function);">saveResource(</span><span style="color:var(--shiki-token-string-expression);">&quot;data.yml&quot;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-constant);">false</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-color-text);">;</span></span></code></pre></div><h2 id="数据管理器" tabindex="-1">数据管理器 <a class="header-anchor" href="#数据管理器" aria-label="Permalink to &quot;数据管理器&quot;">​</a></h2><p>和 HarmonyAuth SMART 中一样，我们需要一个数据管理器接口，并且使用两个类实现它。不过，这里我们使用一个抽象类 <code>AbstractDataManager</code> 来做这一点。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">package</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">rarityeg</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">cutecoin</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">java</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">util</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">Map</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">java</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">util</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">UUID</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">abstract</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">class</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">AbstractDataManager</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">abstract</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">getPlayerCoin</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">UUID</span><span style="color:var(--shiki-color-text);"> id</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> coinName);</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">abstract</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">void</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">setPlayerCoin</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">UUID</span><span style="color:var(--shiki-color-text);"> id</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> coinName</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);"> count);</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">abstract</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Map</span><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Integer</span><span style="color:var(--shiki-color-text);">&gt; </span><span style="color:var(--shiki-token-function);">getPlayerCoins</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">UUID</span><span style="color:var(--shiki-color-text);"> id);</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">abstract</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">void</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">save</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">abstract</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">void</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">load</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">synchronized</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">AbstractDataManager</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">getDataManagerInstance</span><span style="color:var(--shiki-color-text);">() {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">CuteCoin</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">isDBAvailable</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">DBDataManager()</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">FileDataManager()</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><p>静态方法 <code>getDataManagerInstance</code> 通过当前状态创建并返回合适的数据处理器。</p><p>接下来我们就来创建 <code>FileDataManager</code> 和 <code>DBDataManager</code>。</p><p>首先是较简单的基于文件的实现：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">package</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">rarityeg</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">cutecoin</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">org</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">configuration</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">ConfigurationSection</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">org</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">configuration</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">file</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">FileConfiguration</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">org</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">configuration</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">file</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">YamlConfiguration</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">javax</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">annotation</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">Nonnull</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">javax</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">annotation</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">ParametersAreNonnullByDefault</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">java</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">io</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">File</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">java</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">io</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">IOException</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">java</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">util</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">Map</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">java</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">util</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">UUID</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">java</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">util</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">concurrent</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">ConcurrentHashMap</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">class</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">FileDataManager</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">extends</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">AbstractDataManager</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">FileConfiguration</span><span style="color:var(--shiki-color-text);"> data;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">final</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Map</span><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-keyword);">UUID</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Map</span><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Integer</span><span style="color:var(--shiki-color-text);">&gt;&gt; CACHE </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">ConcurrentHashMap</span><span style="color:var(--shiki-color-text);">&lt;&gt;();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// 缓存区</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">Override</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">ParametersAreNonnullByDefault</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">getPlayerCoin</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">UUID</span><span style="color:var(--shiki-color-text);"> id</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> coinName) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">CACHE</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">containsKey</span><span style="color:var(--shiki-color-text);">(id)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">CACHE</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">get</span><span style="color:var(--shiki-color-text);">(id)</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">get</span><span style="color:var(--shiki-color-text);">(coinName);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">data</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getInt</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">id</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">toString</span><span style="color:var(--shiki-color-text);">() </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;.&quot;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> coinName);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">Override</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">ParametersAreNonnullByDefault</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">void</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">setPlayerCoin</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">UUID</span><span style="color:var(--shiki-color-text);"> id</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> coinName</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);"> count) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">synchronized</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">FileDataManager</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">class</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-comment);">// 以 FileDataManager 类作为「锁」，进行同步</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">data</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">set</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">id</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">toString</span><span style="color:var(--shiki-color-text);">() </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;.&quot;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> coinName</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> count);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-comment);">// 如果对应的数据已经被修改，就重新缓存</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">CACHE</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">containsKey</span><span style="color:var(--shiki-color-text);">(id)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">CACHE</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">get</span><span style="color:var(--shiki-color-text);">(id)</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">put</span><span style="color:var(--shiki-color-text);">(coinName</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> count);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">Override</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">Nonnull</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">ParametersAreNonnullByDefault</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Map</span><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Integer</span><span style="color:var(--shiki-color-text);">&gt; </span><span style="color:var(--shiki-token-function);">getPlayerCoins</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">UUID</span><span style="color:var(--shiki-color-text);"> id) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">ConfigurationSection</span><span style="color:var(--shiki-color-text);"> coins </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">data</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getConfigurationSection</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">id</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">toString</span><span style="color:var(--shiki-color-text);">());</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (coins </span><span style="color:var(--shiki-token-keyword);">==</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-comment);">// 这名玩家不存在</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">ConcurrentHashMap</span><span style="color:var(--shiki-color-text);">&lt;&gt;();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">Map</span><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Integer</span><span style="color:var(--shiki-color-text);">&gt; cacheMap;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">CACHE</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">containsKey</span><span style="color:var(--shiki-color-text);">(id)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">CACHE</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">get</span><span style="color:var(--shiki-color-text);">(id);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        cacheMap </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">ConcurrentHashMap</span><span style="color:var(--shiki-color-text);">&lt;&gt;();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">for</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> coin </span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">coins</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getKeys</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">false</span><span style="color:var(--shiki-color-text);">)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">cacheMap</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">put</span><span style="color:var(--shiki-color-text);">(coin</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">coins</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getInt</span><span style="color:var(--shiki-color-text);">(coin));</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">CACHE</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">put</span><span style="color:var(--shiki-color-text);">(id</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> cacheMap);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-comment);">// 存入缓存</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> cacheMap;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">Override</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">void</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">save</span><span style="color:var(--shiki-color-text);">() {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-comment);">// 保存文件</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">File</span><span style="color:var(--shiki-color-text);"> f </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">File(</span><span style="color:var(--shiki-token-constant);">CuteCoin</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getInstance()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getDataFolder()</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;data.yml&quot;</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">try</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">data</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">save</span><span style="color:var(--shiki-color-text);">(f);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        } </span><span style="color:var(--shiki-token-keyword);">catch</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">IOException</span><span style="color:var(--shiki-color-text);"> e) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">CuteCoin</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getInstance</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getLogger</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">warning</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;Failed to save data.&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">printStackTrace</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">Override</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">void</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">load</span><span style="color:var(--shiki-color-text);">() {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">File</span><span style="color:var(--shiki-color-text);"> f </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">File(</span><span style="color:var(--shiki-token-constant);">CuteCoin</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getInstance()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getDataFolder()</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;data.yml&quot;</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        data </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">YamlConfiguration</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">loadConfiguration</span><span style="color:var(--shiki-color-text);">(f);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><p>这里的缓存需要稍微说明一下。</p><p>每当我们调用 <code>getPlayerCoins</code> 进行读取数据时，缓存就被触发，如果已存在就直接从缓存中读取，没有就通过 <code>data</code> 进行读取。</p><p>事实上，每次读取（尤其是那些更多的 <code>getPlayerCoin</code> 单点读取）都应该将数据存入缓存，但 <code>data</code> 本来就位于内存中，只是因为 <code>ConcurrentHashMap</code> 的速度更快我们才使用它作为缓存的。另外，<code>ConcurrentHashMap</code> 是线程安全的。</p><p><code>synchronized</code> 这里是个新用法：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">synchronized</span><span style="color:var(--shiki-color-text);"> (锁) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// ...</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><p>这里的锁表示「在这个级别上，只允许同时一个线程进行操作」，如果传入 <code>this</code> 就表示<strong>当前对象的实例一次只能有一个线程执行该部分</strong>，传入 <code>FileDataManager.class</code> 就表示<strong>整个类的所有实例一次只能有一个线程执行该部分</strong>。由于我们将来将创建很多的 <code>FileDataManager</code> 实例，因此我们需要把整个类都锁上。</p><p>下面我们来看数据库的实现：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">package</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">rarityeg</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">cutecoin</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">org</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">Bukkit</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">org</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">configuration</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">Configuration</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">javax</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">annotation</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">Nonnull</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">javax</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">annotation</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">ParametersAreNonnullByDefault</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">java</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">io</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">IOException</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">java</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">io</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">ObjectInputStream</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">java</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">io</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">ObjectOutputStream</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">java</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">security</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">InvalidParameterException</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">java</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">sql</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">*</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">java</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">util</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">*</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">java</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">util</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">concurrent</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">ConcurrentHashMap</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">class</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">DBDataManager</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">extends</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">AbstractDataManager</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">final</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);"> SAVE_THRESHOLD </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">CuteCoin</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getInstance</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getConfig</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getInt</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;mysql.save-threshold&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);"> setsSinceLastSave </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">final</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Map</span><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-keyword);">UUID</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Map</span><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Integer</span><span style="color:var(--shiki-color-text);">&gt;&gt; CACHE </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">ConcurrentHashMap</span><span style="color:var(--shiki-color-text);">&lt;&gt;();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">final</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Set</span><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-keyword);">UUID</span><span style="color:var(--shiki-color-text);">&gt; DIRTY_LIST </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Collections</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">synchronizedSet</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">HashSet</span><span style="color:var(--shiki-color-text);">&lt;&gt;());</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> dbUrl;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> user;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> password;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">Override</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">ParametersAreNonnullByDefault</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">getPlayerCoin</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">UUID</span><span style="color:var(--shiki-color-text);"> id</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> coinName) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">CACHE</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">containsKey</span><span style="color:var(--shiki-color-text);">(id)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">Map</span><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Integer</span><span style="color:var(--shiki-color-text);">&gt; subMap </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">CACHE</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">get</span><span style="color:var(--shiki-color-text);">(id);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">subMap</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">containsKey</span><span style="color:var(--shiki-color-text);">(coinName)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">subMap</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">get</span><span style="color:var(--shiki-color-text);">(coinName);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">CACHE</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">put</span><span style="color:var(--shiki-color-text);">(id</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">ConcurrentHashMap</span><span style="color:var(--shiki-color-text);">&lt;&gt;());</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-function);">ifNotExistThenInsert(id)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">Coin</span><span style="color:var(--shiki-color-text);"> coin </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">CoinManager</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">byName</span><span style="color:var(--shiki-color-text);">(coinName);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">try</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">Connection</span><span style="color:var(--shiki-color-text);"> conn </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">DriverManager</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getConnection</span><span style="color:var(--shiki-color-text);">(dbUrl</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> user</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> password);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">PreparedStatement</span><span style="color:var(--shiki-color-text);"> ps;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">CoinManager</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getMainCoin</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getName</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">equals</span><span style="color:var(--shiki-color-text);">(coinName)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                ps </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">conn</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">prepareStatement</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;SELECT main_coin_value FROM cute_coin_data WHERE uuid=?&quot;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">ResultSet</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">TYPE_SCROLL_SENSITIVE</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">ResultSet</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">CONCUR_READ_ONLY</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-constant);">ps</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setString</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">id</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">toString</span><span style="color:var(--shiki-color-text);">());</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-keyword);">ResultSet</span><span style="color:var(--shiki-color-text);"> rs </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">ps</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">executeQuery</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-constant);">rs</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">first</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);"> value </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">rs</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getInt</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-constant);">rs</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">close</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-constant);">ps</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">close</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-constant);">conn</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">close</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);"> count </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">coin</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">countOf</span><span style="color:var(--shiki-color-text);">(value);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-constant);">CACHE</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">get</span><span style="color:var(--shiki-color-text);">(id)</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">put</span><span style="color:var(--shiki-color-text);">(coinName</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> count);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> count;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Objects</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">requireNonNullElse</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-function);">getMap(id)</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">get</span><span style="color:var(--shiki-color-text);">(coinName)</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        } </span><span style="color:var(--shiki-token-keyword);">catch</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">SQLException</span><span style="color:var(--shiki-color-text);"> e) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-function);">putError(e)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">Override</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">ParametersAreNonnullByDefault</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">void</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">setPlayerCoin</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">UUID</span><span style="color:var(--shiki-color-text);"> id</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> coinName</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);"> count) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">CACHE</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">containsKey</span><span style="color:var(--shiki-color-text);">(id)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">CACHE</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">get</span><span style="color:var(--shiki-color-text);">(id)</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">put</span><span style="color:var(--shiki-color-text);">(coinName</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> count);</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">        } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">Map</span><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Integer</span><span style="color:var(--shiki-color-text);">&gt; t </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">ConcurrentHashMap</span><span style="color:var(--shiki-color-text);">&lt;&gt;();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">t</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">put</span><span style="color:var(--shiki-color-text);">(coinName</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> count);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">CACHE</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">put</span><span style="color:var(--shiki-color-text);">(id</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> t);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">DIRTY_LIST</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">add</span><span style="color:var(--shiki-color-text);">(id);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">++</span><span style="color:var(--shiki-color-text);">setsSinceLastSave;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (SAVE_THRESHOLD </span><span style="color:var(--shiki-token-keyword);">&gt;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">&amp;&amp;</span><span style="color:var(--shiki-color-text);"> setsSinceLastSave </span><span style="color:var(--shiki-token-keyword);">&gt;=</span><span style="color:var(--shiki-color-text);"> SAVE_THRESHOLD) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-function);">save()</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            setsSinceLastSave </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">DIRTY_LIST</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">clear</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">Override</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">Nonnull</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">ParametersAreNonnullByDefault</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Map</span><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Integer</span><span style="color:var(--shiki-color-text);">&gt; </span><span style="color:var(--shiki-token-function);">getPlayerCoins</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">UUID</span><span style="color:var(--shiki-color-text);"> id) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">getMap(id)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">Override</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">void</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">save</span><span style="color:var(--shiki-color-text);">() {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">try</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">Connection</span><span style="color:var(--shiki-color-text);"> conn </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">DriverManager</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getConnection</span><span style="color:var(--shiki-color-text);">(dbUrl</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> user</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> password);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">PreparedStatement</span><span style="color:var(--shiki-color-text);"> ps </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">conn</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">prepareStatement</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;INSERT INTO cute_coin_data (uuid, main_coin_value, map) VALUES (?, ?, ?) ON DUPLICATE KEY UPDATE uuid=?, main_coin_value=?, map=?&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">for</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">UUID</span><span style="color:var(--shiki-color-text);"> k </span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> DIRTY_LIST) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> uuid </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">k</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">toString</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-constant);">ps</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setString</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> uuid);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-constant);">ps</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setString</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">4</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> uuid);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-keyword);">Map</span><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Integer</span><span style="color:var(--shiki-color-text);">&gt; map </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">getMap(k)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">map</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">containsKey</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">CoinManager</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getMainCoin</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getName</span><span style="color:var(--shiki-color-text);">())) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                    </span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);"> i </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">CoinManager</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getMainCoin</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">valueOf</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">map</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">get</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">CoinManager</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getMainCoin</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getName</span><span style="color:var(--shiki-color-text);">()));</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                    </span><span style="color:var(--shiki-token-constant);">ps</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setInt</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">2</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> i);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                    </span><span style="color:var(--shiki-token-constant);">ps</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setInt</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">5</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> i);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                    </span><span style="color:var(--shiki-token-constant);">ps</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setInt</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">2</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                    </span><span style="color:var(--shiki-token-constant);">ps</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setInt</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">5</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-keyword);">Map</span><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Integer</span><span style="color:var(--shiki-color-text);">&gt; valueMap </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">HashMap</span><span style="color:var(--shiki-color-text);">&lt;&gt;();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-keyword);">for</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> s </span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">map</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">keySet</span><span style="color:var(--shiki-color-text);">()) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                    </span><span style="color:var(--shiki-token-constant);">valueMap</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">put</span><span style="color:var(--shiki-color-text);">(s</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">CoinManager</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">byName</span><span style="color:var(--shiki-color-text);">(s)</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">valueOf</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">map</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">get</span><span style="color:var(--shiki-color-text);">(s)));</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-keyword);">Blob</span><span style="color:var(--shiki-color-text);"> mapBlob </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">conn</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">createBlob</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-keyword);">ObjectOutputStream</span><span style="color:var(--shiki-color-text);"> outputStream </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">ObjectOutputStream(</span><span style="color:var(--shiki-token-constant);">mapBlob</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setBinaryStream(</span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-token-function);">))</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-constant);">outputStream</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">writeObject</span><span style="color:var(--shiki-color-text);">(valueMap);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-constant);">outputStream</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">close</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-constant);">ps</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setBlob</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">3</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> mapBlob);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-constant);">ps</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setBlob</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">6</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> mapBlob);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-constant);">ps</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">execute</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-constant);">ps</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">close</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-constant);">conn</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">close</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        } </span><span style="color:var(--shiki-token-keyword);">catch</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">SQLException</span><span style="color:var(--shiki-color-text);"> e) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-function);">putError(e)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        } </span><span style="color:var(--shiki-token-keyword);">catch</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">IOException</span><span style="color:var(--shiki-color-text);"> e) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-function);">putError(e)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">Override</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">void</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">load</span><span style="color:var(--shiki-color-text);">() {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">Configuration</span><span style="color:var(--shiki-color-text);"> cfg </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">CuteCoin</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getInstance</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getConfig</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> host </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">cfg</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getString</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;mysql.host&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> port </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">cfg</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getString</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;mysql.port&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> dbName </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">cfg</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getString</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;mysql.db-name&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        user </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">cfg</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getString</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;mysql.username&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        password </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">cfg</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getString</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;mysql.password&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (host </span><span style="color:var(--shiki-token-keyword);">==</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">||</span><span style="color:var(--shiki-color-text);"> port </span><span style="color:var(--shiki-token-keyword);">==</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">||</span><span style="color:var(--shiki-color-text);"> dbName </span><span style="color:var(--shiki-token-keyword);">==</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">Bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getPluginManager</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">disablePlugin</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">CuteCoin</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getInstance</span><span style="color:var(--shiki-color-text);">());</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">throw</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">InvalidParameterException(</span><span style="color:var(--shiki-token-string-expression);">&quot;You must configure MySQL settings properly!&quot;</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        dbUrl </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;jdbc:mysql://&quot;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> host </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;:&quot;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> port </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;/&quot;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> dbName </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;?useSSL=false&amp;allowPublicKeyRetrieval=true&amp;serverTimezone=UTC&quot;</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">try</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">Class</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">forName</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;com.mysql.cj.jdbc.Driver&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">Connection</span><span style="color:var(--shiki-color-text);"> conn </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">DriverManager</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getConnection</span><span style="color:var(--shiki-color-text);">(dbUrl</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> user</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> password);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">PreparedStatement</span><span style="color:var(--shiki-color-text);"> ps </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">conn</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">prepareStatement</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;CREATE TABLE IF NOT EXISTS cute_coin_data(uuid VARCHAR(36) PRIMARY KEY NOT NULL , main_coin_value BIGINT NOT NULL, map BLOB)&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">ps</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">execute</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">ps</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">close</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">conn</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">close</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">CuteCoin</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getInstance</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getLogger</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">info</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;Successfully connected to database server.&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        } </span><span style="color:var(--shiki-token-keyword);">catch</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">ClassNotFoundException</span><span style="color:var(--shiki-color-text);"> e) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">CuteCoin</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getInstance</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getLogger</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">warning</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;Failed to load driver, please reinstall this plugin.&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">Bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getPluginManager</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">disablePlugin</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">CuteCoin</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getInstance</span><span style="color:var(--shiki-color-text);">());</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        } </span><span style="color:var(--shiki-token-keyword);">catch</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">SQLException</span><span style="color:var(--shiki-color-text);"> e) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-function);">putError(e)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">boolean</span><span style="color:var(--shiki-color-text);"> trySaveBit </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">true</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">void</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">putError</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">SQLException</span><span style="color:var(--shiki-color-text);"> e) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">CuteCoin</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getInstance</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getLogger</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">warning</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;Failed to operate database, will use file instead.&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">CuteCoin</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">isDBAvailable</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">false</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (trySaveBit) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            trySaveBit </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">false</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-function);">save()</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">printStackTrace</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">void</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">putError</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">IOException</span><span style="color:var(--shiki-color-text);"> e) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">CuteCoin</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getInstance</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getLogger</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">warning</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;Failed to read from binary, data might have been corrupted, now reinitializing.&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">printStackTrace</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">void</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">putError</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">ClassNotFoundException</span><span style="color:var(--shiki-color-text);"> e) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">CuteCoin</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getInstance</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getLogger</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">warning</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;Failed to read from binary, data might have been corrupted, now reinitializing.&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">printStackTrace</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Map</span><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Integer</span><span style="color:var(--shiki-color-text);">&gt; </span><span style="color:var(--shiki-token-function);">getMap</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">UUID</span><span style="color:var(--shiki-color-text);"> id) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">CACHE</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">containsKey</span><span style="color:var(--shiki-color-text);">(id)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">CACHE</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">get</span><span style="color:var(--shiki-color-text);">(id);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">CACHE</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">put</span><span style="color:var(--shiki-color-text);">(id</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">ConcurrentHashMap</span><span style="color:var(--shiki-color-text);">&lt;&gt;());</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-function);">ifNotExistThenInsert(id)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">try</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">Connection</span><span style="color:var(--shiki-color-text);"> conn </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">DriverManager</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getConnection</span><span style="color:var(--shiki-color-text);">(dbUrl</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> user</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> password);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">PreparedStatement</span><span style="color:var(--shiki-color-text);"> ps;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            ps </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">conn</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">prepareStatement</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;SELECT map FROM cute_coin_data WHERE uuid=?&quot;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">ResultSet</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">TYPE_SCROLL_SENSITIVE</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">ResultSet</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">CONCUR_READ_ONLY</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">ps</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setString</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">id</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">toString</span><span style="color:var(--shiki-color-text);">());</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">ResultSet</span><span style="color:var(--shiki-color-text);"> rs </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">ps</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">executeQuery</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">rs</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">first</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">Blob</span><span style="color:var(--shiki-color-text);"> rawMap </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">rs</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getBlob</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">ObjectInputStream</span><span style="color:var(--shiki-color-text);"> mapIn </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">ObjectInputStream(</span><span style="color:var(--shiki-token-constant);">rawMap</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getBinaryStream())</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">Object</span><span style="color:var(--shiki-color-text);"> obj </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">mapIn</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">readObject</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">mapIn</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">close</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">Map</span><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Integer</span><span style="color:var(--shiki-color-text);">&gt; bufferMap </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">ConcurrentHashMap</span><span style="color:var(--shiki-color-text);">&lt;&gt;();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);"> overflow </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-comment);">// Start reading map</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (obj </span><span style="color:var(--shiki-token-keyword);">instanceof</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Map&lt;?</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">?&gt;</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-keyword);">for</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">Object</span><span style="color:var(--shiki-color-text);"> k </span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> ((</span><span style="color:var(--shiki-token-keyword);">Map&lt;?</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">?&gt;</span><span style="color:var(--shiki-color-text);">) obj)</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">entrySet</span><span style="color:var(--shiki-color-text);">()) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                    </span><span style="color:var(--shiki-token-keyword);">Object</span><span style="color:var(--shiki-color-text);"> v </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> ((</span><span style="color:var(--shiki-token-keyword);">Map&lt;?</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">?&gt;</span><span style="color:var(--shiki-color-text);">) obj)</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">get</span><span style="color:var(--shiki-color-text);">(k);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                    </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (k </span><span style="color:var(--shiki-token-keyword);">instanceof</span><span style="color:var(--shiki-color-text);"> String </span><span style="color:var(--shiki-token-keyword);">&amp;&amp;</span><span style="color:var(--shiki-color-text);"> v </span><span style="color:var(--shiki-token-keyword);">instanceof</span><span style="color:var(--shiki-color-text);"> Integer) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                        </span><span style="color:var(--shiki-token-keyword);">try</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                            </span><span style="color:var(--shiki-token-keyword);">Coin</span><span style="color:var(--shiki-color-text);"> c </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">CoinManager</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">byName</span><span style="color:var(--shiki-color-text);">((String) k);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                            </span><span style="color:var(--shiki-token-constant);">bufferMap</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">put</span><span style="color:var(--shiki-color-text);">((String) k</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">c</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">countOf</span><span style="color:var(--shiki-color-text);">((</span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);">) v));</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                        } </span><span style="color:var(--shiki-token-keyword);">catch</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">InvalidParameterException</span><span style="color:var(--shiki-color-text);"> e) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                            </span><span style="color:var(--shiki-token-comment);">// No such coin</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                            overflow </span><span style="color:var(--shiki-token-keyword);">+=</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);">) v;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-comment);">// End reading map</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">Coin</span><span style="color:var(--shiki-color-text);"> mainCoin </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">CoinManager</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getMainCoin</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (overflow </span><span style="color:var(--shiki-token-keyword);">!=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">bufferMap</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">containsKey</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">mainCoin</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getName</span><span style="color:var(--shiki-color-text);">())) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                    </span><span style="color:var(--shiki-token-constant);">bufferMap</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">put</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">mainCoin</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getName</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">bufferMap</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">get</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">mainCoin</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getName</span><span style="color:var(--shiki-color-text);">()) </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">mainCoin</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">countOf</span><span style="color:var(--shiki-color-text);">(overflow));</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                    </span><span style="color:var(--shiki-token-constant);">bufferMap</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">put</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">mainCoin</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getName</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">mainCoin</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">countOf</span><span style="color:var(--shiki-color-text);">(overflow));</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-constant);">DIRTY_LIST</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">add</span><span style="color:var(--shiki-color-text);">(id);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-keyword);">++</span><span style="color:var(--shiki-color-text);">setsSinceLastSave;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">CACHE</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">put</span><span style="color:var(--shiki-color-text);">(id</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> bufferMap);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> bufferMap;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        } </span><span style="color:var(--shiki-token-keyword);">catch</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">SQLException</span><span style="color:var(--shiki-color-text);"> e) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-function);">putError(e)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        } </span><span style="color:var(--shiki-token-keyword);">catch</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">IOException</span><span style="color:var(--shiki-color-text);"> e) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-function);">putError(e)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        } </span><span style="color:var(--shiki-token-keyword);">catch</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">ClassNotFoundException</span><span style="color:var(--shiki-color-text);"> e) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-function);">putError(e)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">ConcurrentHashMap</span><span style="color:var(--shiki-color-text);">&lt;&gt;();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">void</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">ifNotExistThenInsert</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">UUID</span><span style="color:var(--shiki-color-text);"> id) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">try</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">Connection</span><span style="color:var(--shiki-color-text);"> conn </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">DriverManager</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getConnection</span><span style="color:var(--shiki-color-text);">(dbUrl</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> user</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> password);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">PreparedStatement</span><span style="color:var(--shiki-color-text);"> ps </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">conn</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">prepareStatement</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;SELECT COUNT(uuid) FROM cute_coin_data WHERE uuid=?&quot;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">ResultSet</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">TYPE_SCROLL_SENSITIVE</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">ResultSet</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">CONCUR_READ_ONLY</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">ps</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setString</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">id</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">toString</span><span style="color:var(--shiki-color-text);">());</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">ResultSet</span><span style="color:var(--shiki-color-text);"> rs </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">ps</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">executeQuery</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">rs</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">first</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">rs</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getInt</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-color-text);">) </span><span style="color:var(--shiki-token-keyword);">==</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-constant);">rs</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">close</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-constant);">ps</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">close</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-keyword);">Map</span><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Integer</span><span style="color:var(--shiki-color-text);">&gt; emptyMap </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">ConcurrentHashMap</span><span style="color:var(--shiki-color-text);">&lt;&gt;();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-keyword);">for</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> k </span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">CoinManager</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getCoins</span><span style="color:var(--shiki-color-text);">()) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                    </span><span style="color:var(--shiki-token-constant);">emptyMap</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">put</span><span style="color:var(--shiki-color-text);">(k</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-keyword);">Blob</span><span style="color:var(--shiki-color-text);"> b </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">conn</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">createBlob</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-keyword);">ObjectOutputStream</span><span style="color:var(--shiki-color-text);"> outputStream </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">ObjectOutputStream(</span><span style="color:var(--shiki-token-constant);">b</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setBinaryStream(</span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-token-function);">))</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-constant);">outputStream</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">writeObject</span><span style="color:var(--shiki-color-text);">(emptyMap);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-constant);">outputStream</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">close</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-keyword);">PreparedStatement</span><span style="color:var(--shiki-color-text);"> ps2 </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">conn</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">prepareStatement</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;INSERT INTO cute_coin_data (uuid, main_coin_value, map) VALUES (?, ?, ?)&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-constant);">ps2</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setString</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">id</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">toString</span><span style="color:var(--shiki-color-text);">());</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-constant);">ps2</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setInt</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">2</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-constant);">ps2</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setBlob</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">3</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> b);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-constant);">ps2</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">execute</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-constant);">ps2</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">close</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-constant);">conn</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">close</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        } </span><span style="color:var(--shiki-token-keyword);">catch</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">SQLException</span><span style="color:var(--shiki-color-text);"> e) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-function);">putError(e)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        } </span><span style="color:var(--shiki-token-keyword);">catch</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">IOException</span><span style="color:var(--shiki-color-text);"> e) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-function);">putError(e)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><p>虽然代码很长，但原理是比较清晰的。</p><p>数据表的格式我们设置得很简单，三列分别是 UUID、主货币的价值、存储各个货币对应价值的 <code>Map</code> 的二进制格式。之所以记录价值而不是个数，是因为服主可能会修改配置文件，为防止「<s>通货膨胀</s>一夜暴富」或者「财产查封」这样的情况，即使货币的信息已经不存在（无法转换为个数），我们也可以将其转换为主货币<s>以气死服主</s>。</p><p><code>SAVE_THRESHOLD</code> 控制每多少次设置后进行一次保存。</p><p><code>CACHE</code> 是主要缓存空间，每次从数据库读取时都要将数据保存到缓存中。</p><p><code>DIRTY_LIST</code> 记录哪些数据被修改了，只保存真正需要保存的部分，加快了保存的速度。虽然它叫做 <code>DIRTY_LIST</code>，但它实际上是一个 <code>Set</code>，不能保存重复的值，重复加入其中的元素将被忽略，这正是我们需要的。</p><p><code>BLOB</code> 是 MySQL 的一个新数据类型，可以存储<strong>二进制数据</strong>，通过 <code>ObjectOutputStream</code> 可以将 <code>Map</code> 以二进制形式写入数据库中，反之，通过 <code>Object InputStream</code> 可以读取 <code>Map</code>。通过 <code>createBlob</code>、<code>writeObject</code> 等方法，我们实现了保存数据。</p><hr><p>这一节太长了，我本来想在一节里面写完的，但是到现在已经有 4655 词了，剩余的内容我们还是放到下一节吧。</p>`,72),l=[r];function e(i,p,c,k,y,v){return o(),n("div",null,l)}const u=s(t,[["render",e]]);export{x as __pageData,u as default};
