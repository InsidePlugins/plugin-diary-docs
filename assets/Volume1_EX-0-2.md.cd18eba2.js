import{_ as l,o as t,c as a,S as o,k as e,a as s}from"./chunks/framework.7f03344f.js";const f=JSON.parse('{"title":"EX-0-2 Hello World!","description":"","frontmatter":{},"headers":[],"relativePath":"Volume1/EX-0-2.md","filePath":"docs/Volume1/EX-0-2.md","lastUpdated":1698403164000}'),p={name:"Volume1/EX-0-2.md"},n=o(`<h1 id="ex-0-2-hello-world" tabindex="-1">EX-0-2 Hello World! <a class="header-anchor" href="#ex-0-2-hello-world" aria-label="Permalink to &quot;EX-0-2 Hello World!&quot;">​</a></h1><p>在运行这个插件之前，我们需要把你的代码<strong>编译</strong>（Compile）成 Java 能够执行的样子。</p><p>上一节中我们写了那么多东西，Java 可是一个都不认识的！</p><p>诶，别急眼，虽说 Java 现在不能认识那些 <code>public</code> 什么的，但我们只需要将它「变」一下，Java 就可以认识啦！IDEA 会帮我们完成这个任务。</p><h2 id="创建工件" tabindex="-1">创建工件 <a class="header-anchor" href="#创建工件" aria-label="Permalink to &quot;创建工件&quot;">​</a></h2><p>像上一节那样打开「Project Structure」（你还可以使用「File」菜单）。</p><p>选择「Artifacts」，「+」、「JAR」、「Empty」，并为它命名「HelloWorld」。</p><p>右侧的「Available Elements」中有一个「&#39;HelloWorld&#39; compile output」，双击它，将它添加到左边。<strong>别把「spigot-1.16.5」添加进去了</strong>！</p><p>勾选「Include in project build」，单击「Apply」、「OK」。</p><p><em>留意一下此处的「Output directory」，等会你会用到它的。</em></p><p><img src="https://s2.loli.net/2022/04/15/RgyLdQYFfrVOXjM.png" alt="ARTIFACT.png"></p><p>现在单击工具栏（菜单栏下面）的绿色锤子图标「Build Project」（或按下<kbd>Ctrl</kbd> + <kbd>F9</kbd>），稍等一会构建就完成了。</p><p>现在打开之前的路径「Output directory」（但愿你没忘记它），这个文件夹没有在 IDEA 中显示，所以你要到文件资源管理器中找到它。</p><p><img src="https://s2.loli.net/2022/04/15/tZPSh5HRwjpONda.png" alt="FILE.png"></p><p>保持这个窗口打开，马上就要用到。</p><h2 id="如何启动一个服务端" tabindex="-1">如何启动一个服务端 <a class="header-anchor" href="#如何启动一个服务端" aria-label="Permalink to &quot;如何启动一个服务端&quot;">​</a></h2><p>运行插件，不会启动服务端怎么行啊，我们这就来学习一下如何启动 Minecraft 服务端。</p><p>首先新建一个文件夹，名为 <code>Server</code>，将 <code>spigot-1.16.5.jar</code> 粘贴进去。</p><p><img src="https://s2.loli.net/2022/04/15/Sv5TjGPtfu3cI12.png" alt="NFD.png"></p><p>单击窗口的地址栏，输入 <code>cmd</code> 并按回车。</p><p><img src="https://s2.loli.net/2022/04/15/zvAGuP3fcnrs29X.png" alt="CMD.png"></p><p>（一定要记得按回车啊~）</p><p>在弹出的窗口输入如下命令：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-color-text);">java -jar spigot-1.16.5.jar</span></span></code></pre></div><p>并按回车，你将看到这样的内容：</p><p><img src="https://s2.loli.net/2022/04/15/XzKmFiYRtDwJeoH.png" alt="OUTPUT.png"></p><p>别关掉这个窗口，回到刚才那个文件夹中，这里多出了 <code>eula.txt</code> 等几个文件。</p><p><img src="https://s2.loli.net/2022/04/15/Lfcvx2diPpqCatr.png" alt="FS.png"></p><p>双击 <code>eula.txt</code>，用记事本打开它。</p><p>将 <code>eula=false</code> 改成 <code>eula=true</code>：</p><p><img src="https://s2.loli.net/2022/04/15/gNZafvd1nFpCTiL.png" alt="EULA.png"></p><p>按 <kbd>Ctrl</kbd> + <kbd>S</kbd> 保存，然后关闭记事本。</p><p>现在回到刚刚那个黑色的窗口中（命令行窗口），重新输入上一次的命令，并按回车：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-color-text);">java -jar spigot-1.16.5.jar</span></span></code></pre></div><p>这一次服务端没有自动关闭，你将看到：</p><p><img src="https://s2.loli.net/2022/04/15/kjQFvsXEp8IKytB.png" alt="DONE.png"></p><p>这样服务端就成功启动了，同时还弹出一个窗口：</p><p><img src="https://s2.loli.net/2022/04/15/iRJr4eUIdgoHlXb.png" alt="SERVER.png"></p><p>这就是服务端控制台啦！</p><p>现在，在该窗口的右下角输入 <code>stop</code>，并按回车，服务器就会关闭。</p><p><img src="https://s2.loli.net/2022/04/15/jbL1MTJ6e8zIUum.png" alt="STOP.png"></p><p>是不是很简单？对了，下一次启动时就只需要启动 <code>cmd</code>，输入一次上面的命令就可以了，也不需要再次修改 <code>eula.txt</code> 了。</p><div class="info custom-block"><p class="custom-block-title"><img src="data:image/svg+xml,%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#39;0 0 16 16&#39; transform=&#39;scale(0.6)&#39; fill=&#39;%23fff&#39;%3E%3Cpath d=&#39;M9.1 0C10.2 0 10.7 0.7 10.7 1.6 10.7 2.6 9.8 3.6 8.6 3.6 7.6 3.6 7 3 7 2 7 1.1 7.7 0 9.1 0Z&#39;/%3E%3Cpath d=&#39;M5.8 16C5 16 4.4 15.5 5 13.2L5.9 9.1C6.1 8.5 6.1 8.2 5.9 8.2 5.7 8.2 4.6 8.6 3.9 9.1L3.5 8.4C5.6 6.6 7.9 5.6 8.9 5.6 9.8 5.6 9.9 6.6 9.5 8.2L8.4 12.5C8.2 13.2 8.3 13.5 8.5 13.5 8.7 13.5 9.6 13.2 10.4 12.5L10.9 13.2C8.9 15.2 6.7 16 5.8 16Z&#39;/%3E%3C/svg%3E" style="background-color:#0B87DA;clip-path:circle();" width="24px" height="24px"> <strong>到底怎么回事</strong>？</p><p>Minecraft 也是一种 Java 认识的东西，我们指示 Java 启动了 <code>spigot-1.16.5.jar</code>，那里面包含了 Minecraft 服务器需要的很多东西。</p></div><h2 id="安装插件" tabindex="-1">安装插件 <a class="header-anchor" href="#安装插件" aria-label="Permalink to &quot;安装插件&quot;">​</a></h2><p>安装插件很简单：找到刚刚创建的 <code>Server</code> 文件夹，下面有个 <code>plugins</code> 文件夹（没有就创建一个），把 <code>HelloWorld.jar</code> 复制到这个 <code>plugins</code> 文件夹里面。安装就瞬间完成了。</p><p>再次启动服务端（如果刚刚没有关掉，先关掉再打开），你应该可以看到「Hello, world!」字样了！</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-color-text);">// 输出（节选）</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">[00:00:00 INFO]: Loaded 0 spawn chunks for world world_the_end</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">[00:00:00 INFO]: Time elapsed: 54 ms</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">[00:00:00 INFO]: [HelloWorld] Enabling HelloWorld v1.0</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">[00:00:00 INFO]: [HelloWorld] Hello, world!</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">[00:00:00 INFO]: Running delayed init tasks</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">[00:00:00 INFO]: Done (7.245s)! For help, type &quot;help&quot;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">[00:00:00 INFO]: Timings Reset</span></span></code></pre></div><p><img src="https://s2.loli.net/2022/04/15/YraNFWmHRkU3eDo.png" alt="CONSOLE.png"></p><p>本次行动的源代码：<a href="https://github.com/Andy-K-Sparklight/PluginDiaryCode/tree/master/HelloWorld/src" target="_blank" rel="noreferrer">https://github.com/Andy-K-Sparklight/PluginDiaryCode/tree/master/HelloWorld/src</a></p><h2 id="行动结束" tabindex="-1">行动结束 <a class="header-anchor" href="#行动结束" aria-label="Permalink to &quot;行动结束&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title"><img src="data:image/svg+xml,%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#39;0 0 16 16&#39; transform=&#39;scale(0.6)&#39; fill=&#39;%23fff&#39;%3E%3Cpath d=&#39;M9.1 0C10.2 0 10.7 0.7 10.7 1.6 10.7 2.6 9.8 3.6 8.6 3.6 7.6 3.6 7 3 7 2 7 1.1 7.7 0 9.1 0Z&#39;/%3E%3Cpath d=&#39;M5.8 16C5 16 4.4 15.5 5 13.2L5.9 9.1C6.1 8.5 6.1 8.2 5.9 8.2 5.7 8.2 4.6 8.6 3.9 9.1L3.5 8.4C5.6 6.6 7.9 5.6 8.9 5.6 9.8 5.6 9.9 6.6 9.5 8.2L8.4 12.5C8.2 13.2 8.3 13.5 8.5 13.5 8.7 13.5 9.6 13.2 10.4 12.5L10.9 13.2C8.9 15.2 6.7 16 5.8 16Z&#39;/%3E%3C/svg%3E" style="background-color:#0B87DA;clip-path:circle();" width="24px" height="24px"> <strong>这是什么</strong>？</p><p>这是行动结束确认按钮。我们每次编写出一个能用的插件都要按它。虽然你是一无所知地编写了一个插件，但那也是你的作品，所以不要犹豫，按下它吧！</p></div>`,51),c=e("p",null,[e("button",{type:"button",class:"btn-unconfirmed",style:{width:"100%",transition:"500ms"},onclick:"this.innerHTML=' ✓ 恭喜！';document.getElementById('hiddenEle').style.display = 'block';this.className='btn-confirmed';this.onclick=function(){};"}," ❔ 确认行动结束 ")],-1),r=e("div",{id:"hiddenEle",style:{display:"none"}},[e("blockquote",null,[e("p",null,"行动结果：完成")]),e("p",null,[s("这是属于你的胜利！虽然你可能不知道你做了什么，但你做了伟大的事情。这是"),e("strong",null,"你自己的"),s("第一个插件，拿好它，因为马上你就要知道你刚刚做了什么了……")])],-1),i=[n,c,r];function d(g,h,u,m,v,b){return t(),a("div",null,i)}const C=l(p,[["render",d]]);export{f as __pageData,C as default};
