import{_ as s,o,c as n,S as a}from"./chunks/framework.7f03344f.js";const u=JSON.parse('{"title":"EX-2-1 编写菜单插件","description":"","frontmatter":{},"headers":[],"relativePath":"Volume3/EX-2-1.md","filePath":"docs/Volume3/EX-2-1.md","lastUpdated":1698403164000}'),t={name:"Volume3/EX-2-1.md"},e=a(`<h1 id="ex-2-1-编写菜单插件" tabindex="-1">EX-2-1 编写菜单插件 <a class="header-anchor" href="#ex-2-1-编写菜单插件" aria-label="Permalink to &quot;EX-2-1 编写菜单插件&quot;">​</a></h1><p>不知道为什么，笔者觉得第三章过得很快，又到了演习时间了。</p><div class="danger custom-block"><p class="custom-block-title"><img src="data:image/svg+xml,%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#39;0 0 16 16&#39; transform=&#39;scale(0.6)&#39; fill=&#39;%23fff&#39;%3E%3Cpath d=&#39;M10 14C10 15.1 9.1 16 8 16 6.9 16 6 15.1 6 14 6 12.9 6.9 12 8 12 9.1 12 10 12.9 10 14Z&#39;/%3E%3Cpath d=&#39;M10 1.6C10 1.2 9.8 0.9 9.6 0.7 9.2 0.3 8.6 0 8 0 7.4 0 6.8 0.2 6.5 0.6 6.2 0.9 6 1.2 6 1.6 6 1.7 6 1.8 6 1.9L6.8 9.6C6.9 9.9 7 10.1 7.2 10.2 7.4 10.4 7.7 10.5 8 10.5 8.3 10.5 8.6 10.4 8.8 10.3 9 10.1 9.1 9.9 9.2 9.6L10 1.9C10 1.8 10 1.7 10 1.6Z&#39;/%3E%3C/svg%3E" style="background-color:#DA0B50;clip-path:circle();" width="24px" height="24px"> <strong>需要 Paper 服务端</strong></p><p>由于笔者的失误，本次行动（以及后面章节的一些内容）必须使用 Paper 才能完成，如果发现示例代码在你的开发工具中显示错误，你可在 <a href="https://papermc.io/downloads" target="_blank" rel="noreferrer">PaperMC 官网</a> 下载 Paper 并运行一次（自动下载 Mojang 服务端，速度较慢，请耐心等待）。当 Paper 启动成功（出现 「Done!」 字样）后，你可以导入 <code>cache</code> 文件夹中的 <code>patched_1.16.5.jar</code> 以代替 <code>spigot-1.16.5.jar</code> 进行开发。</p></div><div class="tip custom-block"><p class="custom-block-title"><img src="data:image/svg+xml,%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#39;0 0 1028 1024&#39; transform=&#39;scale(0.6)&#39; fill=&#39;%23fff&#39;%3E%3Cpath d=&#39;M1018.319924 112.117535q4.093748 9.210934 6.652341 21.492179t2.558593 25.585928-5.117186 26.609365-16.374994 25.585928q-12.281245 12.281245-22.003898 21.492179t-16.886712 16.374994q-8.187497 8.187497-15.351557 14.32812l-191.382739-191.382739q12.281245-11.257808 29.167958-27.121083t28.144521-25.074209q14.32812-11.257808 29.679676-15.863275t30.191395-4.093748 28.656239 4.605467 24.050772 9.210934q21.492179 11.257808 47.589826 39.402329t40.425766 58.847634zM221.062416 611.554845q6.140623-6.140623 28.656239-29.167958t56.289041-56.80076l74.710909-74.710909 82.898406-82.898406 220.038979-220.038979 191.382739 192.406177-220.038979 220.038979-81.874969 82.898406q-40.937484 39.914047-73.687472 73.175753t-54.242167 54.753885-25.585928 24.562491q-10.234371 9.210934-23.539054 19.445305t-27.632802 16.374994q-14.32812 7.16406-41.960921 17.398431t-57.824197 19.957024-57.312478 16.886712-40.425766 9.210934q-27.632802 3.070311-36.843736-8.187497t-5.117186-37.867173q2.046874-14.32812 9.722653-41.449203t16.374994-56.289041 16.886712-53.730448 13.304682-33.773425q6.140623-14.32812 13.816401-26.097646t22.003898-26.097646z&#39;/%3E%3C/svg%3E" style="background-color:#057E3D;clip-path:circle();" width="24px" height="24px"> <strong>编者注</strong></p><p>Paper 服务端是基于 Spigot 服务端而开发的。即云，Spigot 服务端中包含的方法，Paper 服务端囊括全收。而在此之外，Paper 团队还向服务端中添加了一些方法。这等方法是 Spigot 服务端中所未有的。按 <a href="https://docs.papermc.io/paper/adding-plugins#finding-plugins" target="_blank" rel="noreferrer">Paper 服务端官方文档</a>，如果某个插件只用到了 Spigot 服务端中的方法，则它可以在 Paper 服务端上正常运作。然而，如果某个插件用到了 Paper 团队添加进服务端中的方法，则它就不可能在 Spigot 服务端上运行。</p><p>编者谨按，ThatRarityEG 原文称「示例代码在你的开发工具中显示错误」，即云示例代码中用到的某些方法是 Paper 团队添加到服务端中的，Spigot 服务端内没有。如果开发时的依赖是 Spigot 服务端，则 IDE 无法找到这些方法，因而报错。必须将依赖换成 Paper 服务端方可。用到这些 Paper 独有的方法之后，插件无法在 Spigot 服务端上运行，只能在 Paper 服务端上运行。</p></div><h2 id="行动背景" tabindex="-1">行动背景 <a class="header-anchor" href="#行动背景" aria-label="Permalink to &quot;行动背景&quot;">​</a></h2><p>总是让玩家使用命令行不是很友好，我们需要设计一个菜单。菜单的功能包括：</p><ul><li>退出服务器</li><li>获取服务器公告</li><li>随机传送</li></ul><p>我们先实现简单的功能，在没有支援的情况下，要实现那么多功能可能比较困难。我们慢慢来。</p><h2 id="行动规划" tabindex="-1">行动规划 <a class="header-anchor" href="#行动规划" aria-label="Permalink to &quot;行动规划&quot;">​</a></h2><blockquote><p>行动名称：HoofPower</p><p>行动代号：EX-2</p><p>行动类别：演习</p><p>涉及章节：</p><ul><li>EX-2-1</li><li>EX-2-2</li></ul><p>难度：骷髅</p></blockquote><p>这次演习基本上就是复习学过的内容，我们会用到物品介绍、配置文件读取、显示书等功能的。不记得了？再回去读一遍。</p><h2 id="开始行动" tabindex="-1">开始行动 <a class="header-anchor" href="#开始行动" aria-label="Permalink to &quot;开始行动&quot;">​</a></h2><p>创建新模块「HoofPower」并为它添加依赖（参照上一次演习内容）。</p><p><em>「Hoof」是什么意思呢？玩家玩 Minecraft 时右手只用两根手指，所以就算玩家没有手指，一样可以玩 Minecraft（把你的手握成拳试试），就像马蹄一样，所以用它的英文命名了这个插件——也算是提醒玩家不要沉迷游戏吧。<s>（没错这个理由是现编的）</s></em></p><p>创建包，创建主类，继承 <code>JavaPlugin</code>，这你应该很熟练了。<strong>自己命名</strong>！。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">package</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">rarityeg</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">hoofpower</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// 一定要自己为包命名啊</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">org</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">plugin</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">java</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">JavaPlugin</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">class</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">HoofPower</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">extends</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">JavaPlugin</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">JavaPlugin</span><span style="color:var(--shiki-color-text);"> instance;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">Override</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">void</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">onEnable</span><span style="color:var(--shiki-color-text);">() {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        instance </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">this</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><h2 id="菜单主体" tabindex="-1">菜单主体 <a class="header-anchor" href="#菜单主体" aria-label="Permalink to &quot;菜单主体&quot;">​</a></h2><p>我们先不考虑菜单如何打开，先考虑如何把菜单画出来。</p><p>一番思考后，我决定：使用一个单独的 <code>Menu</code> 类来制作菜单（面向对象！）。</p><p>那么我们赶快创建一个类，并为它创建一个成员变量 <code>components</code> 表示菜单内的组件。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">package</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">rarityeg</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">hoofpower</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">org</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">entity</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">Player</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">org</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">inventory</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">Inventory</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">class</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">Menu</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Inventory</span><span style="color:var(--shiki-color-text);"> components;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Player</span><span style="color:var(--shiki-color-text);"> player;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">Menu</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">Player</span><span style="color:var(--shiki-color-text);"> player) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><p><em>这里我还顺便创建了 <code>player</code> 变量，记录下 GUI 的所属者。</em></p><p>那么我们就在构造方法中，赶紧创建一个 GUI 吧~有了之前的知识，唰唰唰地就写出来了：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">package</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">rarityeg</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">hoofpower</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">org</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">Bukkit</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">org</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">entity</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">Player</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">org</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">inventory</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">Inventory</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">class</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">Menu</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Inventory</span><span style="color:var(--shiki-color-text);"> components;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Player</span><span style="color:var(--shiki-color-text);"> owner;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">final</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> TITLE </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;HoofPower 菜单&quot;</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">Menu</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">Player</span><span style="color:var(--shiki-color-text);"> player) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        components </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">createInventory</span><span style="color:var(--shiki-color-text);">(player</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">9</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> TITLE);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        owner </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> player;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><p><em>为什么要将标题作为一个常量呢？我们说过标题是区分 GUI 的方法，如果各处都硬编码字符串，不仅不好修改，如果写错了还难发现。使用常量就可很好地规避这些问题。</em></p><p>这里因为我们菜单的功能比较少，所以只做了一行。</p><h2 id="菜单内的按钮" tabindex="-1">菜单内的按钮 <a class="header-anchor" href="#菜单内的按钮" aria-label="Permalink to &quot;菜单内的按钮&quot;">​</a></h2><p>按钮基本上是物品，所以都是实例化 <code>ItemStack</code>，方法都差不多。</p><h3 id="退出服务器" tabindex="-1">退出服务器 <a class="header-anchor" href="#退出服务器" aria-label="Permalink to &quot;退出服务器&quot;">​</a></h3><p>退出服务器按钮我们决定使用屏障方块（禁行符号），因为……实在没有更合适的了。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-comment);">// Menu 节选</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">final</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> QUIT_SERVER </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;退出服务器&quot;</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">Menu(</span><span style="color:var(--shiki-token-keyword);">Player</span><span style="color:var(--shiki-token-function);"> player)</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    components </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">createInventory</span><span style="color:var(--shiki-color-text);">(player</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">9</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> TITLE);</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">ItemStack</span><span style="color:var(--shiki-color-text);"> quitServer </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">ItemStack(</span><span style="color:var(--shiki-token-constant);">Material</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">BARRIER</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// 屏障</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">ItemMeta</span><span style="color:var(--shiki-color-text);"> quitServerMeta </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">quitServer</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getItemMeta</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">quitServerMeta</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setDisplayName</span><span style="color:var(--shiki-color-text);">(QUIT_SERVER);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// 设置「按钮」的名字</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">quitServerMeta</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setLore</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Collections</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">singletonList</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">ChatColor</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">GRAY</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;&quot;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">ChatColor</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">ITALIC</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;离开此服务器&quot;</span><span style="color:var(--shiki-color-text);">));</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">quitServer</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setItemMeta</span><span style="color:var(--shiki-color-text);">(quitServerMeta);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// 有借有还，再借不难</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><p>这里我们同样使用了常量，以免出错。</p><p><em><code>ChatColor</code> 不能连续拼接（<code>+</code>），中间需要一个空字符串，没办法，这是规定。此外，<code>Collections.singletonList</code> 方法用于创建单元素 <code>List</code>，比 <code>Arrays.asList</code> 更快。</em></p><h3 id="服务器公告" tabindex="-1">服务器公告 <a class="header-anchor" href="#服务器公告" aria-label="Permalink to &quot;服务器公告&quot;">​</a></h3><p>这里我们用一本书表示。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-comment);">// Menu 节选</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// Menu 构造方法外：</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">final</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> SHOW_ANNOUNCEMENT </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">ChatColor</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">GOLD</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;显示公告&quot;</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// Menu 构造方法内：</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">ItemStack</span><span style="color:var(--shiki-color-text);"> showAnnouncement </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">ItemStack(</span><span style="color:var(--shiki-token-constant);">Material</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">BOOK</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">ItemMeta</span><span style="color:var(--shiki-color-text);"> showAnnouncementMeta </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">showAnnouncement</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getItemMeta</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">showAnnouncementMeta</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setDisplayName</span><span style="color:var(--shiki-color-text);">(SHOW_ANNOUNCEMENT);</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">showAnnouncementMeta</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setLore</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Collections</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">singletonList</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">ChatColor</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">GRAY</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;&quot;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">ChatColor</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">ITALIC</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;查看公告&quot;</span><span style="color:var(--shiki-color-text);">));</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">showAnnouncement</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setItemMeta</span><span style="color:var(--shiki-color-text);">(showAnnouncementMeta);</span></span></code></pre></div><h3 id="随机传送" tabindex="-1">随机传送 <a class="header-anchor" href="#随机传送" aria-label="Permalink to &quot;随机传送&quot;">​</a></h3><p>最后我们来添加随机传送按钮。</p><p><em>大家也许注意到了，这样编写代码比较累，你可以自己编写创建物品的方法。</em></p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-comment);">// Menu 节选</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// Menu 构造方法外：</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">final</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> TELEPORT </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">ChatColor</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">GREEN</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;随机传送&quot;</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// Menu 构造方法内：</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">ItemStack</span><span style="color:var(--shiki-color-text);"> teleport </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">ItemStack(</span><span style="color:var(--shiki-token-constant);">Material</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">COMPASS</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">ItemMeta</span><span style="color:var(--shiki-color-text);"> teleportMeta </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">teleport</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getItemMeta</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">teleportMeta</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setDisplayName</span><span style="color:var(--shiki-color-text);">(TELEPORT);</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">teleportMeta</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setLore</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Collections</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">singletonList</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">ChatColor</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">GRAY</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;&quot;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">ChatColor</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">ITALIC</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;在当前世界随机传送&quot;</span><span style="color:var(--shiki-color-text);">));</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">teleport</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setItemMeta</span><span style="color:var(--shiki-color-text);">(teleportMeta);</span></span></code></pre></div><h3 id="绘制菜单" tabindex="-1">绘制菜单 <a class="header-anchor" href="#绘制菜单" aria-label="Permalink to &quot;绘制菜单&quot;">​</a></h3><p>我们还需要将这些物品「粘」到菜单上。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-comment);">// Menu 节选</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">components</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setItem</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> quitServer); </span><span style="color:var(--shiki-token-comment);">// 左边</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">components</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setItem</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">4</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> showAnnouncement); </span><span style="color:var(--shiki-token-comment);">// 中间</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">components</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setItem</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">8</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> teleport); </span><span style="color:var(--shiki-token-comment);">// 右边</span></span></code></pre></div><h3 id="打开菜单" tabindex="-1">打开菜单 <a class="header-anchor" href="#打开菜单" aria-label="Permalink to &quot;打开菜单&quot;">​</a></h3><p>我们需要一个单独的方法打开菜单：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-comment);">// Menu 节选</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">void</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">open()</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">owner</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">openInventory</span><span style="color:var(--shiki-color-text);">(components);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><p>最终的代码像这样：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">package</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">rarityeg</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">hoofpower</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">org</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">Bukkit</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">org</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">ChatColor</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">org</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">Material</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">org</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">entity</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">Player</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">org</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">inventory</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">Inventory</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">org</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">inventory</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">ItemStack</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">org</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">inventory</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">meta</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">ItemMeta</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">java</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">util</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">Collections</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">class</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">Menu</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Inventory</span><span style="color:var(--shiki-color-text);"> components;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Player</span><span style="color:var(--shiki-color-text);"> owner;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">final</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> TITLE </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;HoofPower 菜单&quot;</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">final</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> QUIT_SERVER </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;退出服务器&quot;</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">final</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> SHOW_ANNOUNCEMENT </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">ChatColor</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">GOLD</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;显示公告&quot;</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">final</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> TELEPORT </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">ChatColor</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">GREEN</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;随机传送&quot;</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">Menu</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">Player</span><span style="color:var(--shiki-color-text);"> player) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        components </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">createInventory</span><span style="color:var(--shiki-color-text);">(player</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">9</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> TITLE);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        owner </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> player;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">ItemStack</span><span style="color:var(--shiki-color-text);"> quitServer </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">ItemStack(</span><span style="color:var(--shiki-token-constant);">Material</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">BARRIER</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">ItemMeta</span><span style="color:var(--shiki-color-text);"> quitServerMeta </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">quitServer</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getItemMeta</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">quitServerMeta</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setDisplayName</span><span style="color:var(--shiki-color-text);">(QUIT_SERVER);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">quitServerMeta</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setLore</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Collections</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">singletonList</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">ChatColor</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">GRAY</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;&quot;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">ChatColor</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">ITALIC</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;离开此服务器&quot;</span><span style="color:var(--shiki-color-text);">));</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">quitServer</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setItemMeta</span><span style="color:var(--shiki-color-text);">(quitServerMeta);</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">ItemStack</span><span style="color:var(--shiki-color-text);"> showAnnouncement </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">ItemStack(</span><span style="color:var(--shiki-token-constant);">Material</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">BOOK</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">ItemMeta</span><span style="color:var(--shiki-color-text);"> showAnnouncementMeta </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">showAnnouncement</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getItemMeta</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">showAnnouncementMeta</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setDisplayName</span><span style="color:var(--shiki-color-text);">(SHOW_ANNOUNCEMENT);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">showAnnouncementMeta</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setLore</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Collections</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">singletonList</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">ChatColor</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">GRAY</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;&quot;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">ChatColor</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">ITALIC</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;查看公告&quot;</span><span style="color:var(--shiki-color-text);">));</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">showAnnouncement</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setItemMeta</span><span style="color:var(--shiki-color-text);">(showAnnouncementMeta);</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">ItemStack</span><span style="color:var(--shiki-color-text);"> teleport </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">ItemStack(</span><span style="color:var(--shiki-token-constant);">Material</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">COMPASS</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">ItemMeta</span><span style="color:var(--shiki-color-text);"> teleportMeta </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">teleport</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getItemMeta</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">teleportMeta</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setDisplayName</span><span style="color:var(--shiki-color-text);">(TELEPORT);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">teleportMeta</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setLore</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Collections</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">singletonList</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">ChatColor</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">GRAY</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;&quot;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">ChatColor</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">ITALIC</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;在当前世界随机传送&quot;</span><span style="color:var(--shiki-color-text);">));</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">teleport</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setItemMeta</span><span style="color:var(--shiki-color-text);">(teleportMeta);</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">components</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setItem</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> quitServer);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">components</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setItem</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">4</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> showAnnouncement);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">components</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setItem</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">8</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> teleport);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">void</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">open</span><span style="color:var(--shiki-color-text);">() {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">owner</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">openInventory</span><span style="color:var(--shiki-color-text);">(components);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><p>好，这样我们的菜单就画好了。</p><h2 id="绑定事件处理" tabindex="-1">绑定事件处理 <a class="header-anchor" href="#绑定事件处理" aria-label="Permalink to &quot;绑定事件处理&quot;">​</a></h2><p>上面画好的菜单，实际上只是空壳，如果我们打开菜单，除了点击（拿出物品）以外什么也做不了。</p><p>我们需要事件监听，创建 <code>EventListener</code> 类。</p><h3 id="阻止玩家拿出物品" tabindex="-1">阻止玩家拿出物品 <a class="header-anchor" href="#阻止玩家拿出物品" aria-label="Permalink to &quot;阻止玩家拿出物品&quot;">​</a></h3><p>你不会希望玩家把屏障拿出来吧？</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-comment);">// EventListener 节选</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">@</span><span style="color:var(--shiki-token-keyword);">EventHandler</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">void</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">onClick(</span><span style="color:var(--shiki-token-keyword);">InventoryClickEvent</span><span style="color:var(--shiki-token-function);"> e)</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">Player</span><span style="color:var(--shiki-color-text);"> player </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> (Player) </span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getWhoClicked</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">InventoryView</span><span style="color:var(--shiki-color-text);"> inv </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getOpenInventory</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">inv</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getTitle</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">equals</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Menu</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">TITLE</span><span style="color:var(--shiki-color-text);">)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setCancelled</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">true</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><p>正如我们之前所说，监听器的函数名不重要，重要的是参数。</p><p>以上代码检查玩家点击的是不是我们的菜单，如果是就阻止本次点击。（防止拿出物品）</p><h3 id="获得被点击的物品" tabindex="-1">获得被点击的物品 <a class="header-anchor" href="#获得被点击的物品" aria-label="Permalink to &quot;获得被点击的物品&quot;">​</a></h3><p>和 3-1 一样：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-comment);">// EventListener 节选</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">inv</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getTitle</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">equals</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Menu</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">TITLE</span><span style="color:var(--shiki-color-text);">)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setCancelled</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">true</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getRawSlot</span><span style="color:var(--shiki-color-text);">() </span><span style="color:var(--shiki-token-keyword);">&lt;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">||</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getRawSlot</span><span style="color:var(--shiki-color-text);">() </span><span style="color:var(--shiki-token-keyword);">&gt;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getInventory</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getSize</span><span style="color:var(--shiki-color-text);">()) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-comment);">// 有效取值范围</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">ItemStack</span><span style="color:var(--shiki-color-text);"> clickedItem </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getCurrentItem</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (clickedItem </span><span style="color:var(--shiki-token-keyword);">==</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-color-text);">){</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// 进一步的代码写在这里</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><p>如果格子的位置不合法，就不进行进一步处理，直接 <code>return</code>。</p><div class="info custom-block"><p class="custom-block-title"><img src="data:image/svg+xml,%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#39;0 0 16 16&#39; transform=&#39;scale(0.6)&#39; fill=&#39;%23fff&#39;%3E%3Cpath d=&#39;M9.1 0C10.2 0 10.7 0.7 10.7 1.6 10.7 2.6 9.8 3.6 8.6 3.6 7.6 3.6 7 3 7 2 7 1.1 7.7 0 9.1 0Z&#39;/%3E%3Cpath d=&#39;M5.8 16C5 16 4.4 15.5 5 13.2L5.9 9.1C6.1 8.5 6.1 8.2 5.9 8.2 5.7 8.2 4.6 8.6 3.9 9.1L3.5 8.4C5.6 6.6 7.9 5.6 8.9 5.6 9.8 5.6 9.9 6.6 9.5 8.2L8.4 12.5C8.2 13.2 8.3 13.5 8.5 13.5 8.7 13.5 9.6 13.2 10.4 12.5L10.9 13.2C8.9 15.2 6.7 16 5.8 16Z&#39;/%3E%3C/svg%3E" style="background-color:#0B87DA;clip-path:circle();" width="24px" height="24px"> <strong>为什么不用 <code>else</code></strong>？</p><p>这里的 <code>return</code> 比 <code>else</code> 好用，我们的思路是：这种情况不符合，处理结束；那种情况不符合，处理结束……直到全都符合，才进行处理。使用 <code>return</code> 可以避免嵌套 <code>if</code> 的繁琐。</p></div><h3 id="退出服务器-1" tabindex="-1">退出服务器 <a class="header-anchor" href="#退出服务器-1" aria-label="Permalink to &quot;退出服务器&quot;">​</a></h3><p>退出服务器的实现也很简单：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-comment);">// EventListener 节选</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">clickedItem</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getItemMeta</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getDisplayName</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">equals</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Menu</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">QUIT_SERVER</span><span style="color:var(--shiki-color-text);">)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">kickPlayer</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;您已离开服务器&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);">; </span><span style="color:var(--shiki-token-comment);">// 处理完了记得结束处理</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><p>直接使用上一章我们讲到的 <code>kickPlayer</code> 就可以了。</p><p>这里我们比较了所点击物品的名称，由于 <code>switch</code> 不允许对变量进行，只能使用 <code>if</code> 了。</p><h3 id="随机传送-1" tabindex="-1">随机传送 <a class="header-anchor" href="#随机传送-1" aria-label="Permalink to &quot;随机传送&quot;">​</a></h3><p>随机传送稍微有一点点难度，需要用到 <code>Random</code>。</p><p>我们希望随机传送不是完全的随机，而是在玩家身边十万格之内传送。为了简单起见，我们让玩家传送到主世界。在服务端中，主世界的默认名称是 <code>world</code>，但是有的腐竹可能会修改这个名称，所以不能用名字查找……怎么办呢？</p><p>这个在 Bukkit 的文档中没有记载，但我在 Bukkit 的论坛上找到了解决方法：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">World</span><span style="color:var(--shiki-color-text);"> overworld </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getWorlds</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">get</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">World</span><span style="color:var(--shiki-color-text);"> nether </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getWorlds</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">get</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">World</span><span style="color:var(--shiki-color-text);"> end </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getWorlds</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">get</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">2</span><span style="color:var(--shiki-color-text);">);</span></span></code></pre></div><p>因为主世界、下界和末地在游戏的内部编号就是 0、1、2，这个是不会变的，因此可以用这个方法获得各个世界的。那么我们就可以实现随机传送功能啦！</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-comment);">// EventListener 节选</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// onClick 方法外：</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">final</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Random</span><span style="color:var(--shiki-color-text);"> RANDOM </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">Random()</span><span style="color:var(--shiki-color-text);">; </span><span style="color:var(--shiki-token-comment);">// 创建随机数单元</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// onClick 方法内：</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">clickedItem</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getItemMeta</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getDisplayName</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">equals</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Menu</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">TELEPORT</span><span style="color:var(--shiki-color-text);">)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">closeInventory</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">World</span><span style="color:var(--shiki-color-text);"> playerWorld </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getWorlds</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">get</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-color-text);">); </span><span style="color:var(--shiki-token-comment);">// 获得主世界</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">double</span><span style="color:var(--shiki-color-text);"> randX </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">RANDOM</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">nextInt</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">200000</span><span style="color:var(--shiki-color-text);">) </span><span style="color:var(--shiki-token-keyword);">-</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">100000</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">double</span><span style="color:var(--shiki-color-text);"> randZ </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">RANDOM</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">nextInt</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">200000</span><span style="color:var(--shiki-color-text);">) </span><span style="color:var(--shiki-token-keyword);">-</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">100000</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">Location</span><span style="color:var(--shiki-color-text);"> offset </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">Location(playerWorld</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> randX</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> randZ)</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">toHighestLocation</span><span style="color:var(--shiki-color-text);">(); </span><span style="color:var(--shiki-token-comment);">// 获得最高的非空气方块</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">teleport</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getLocation</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">add</span><span style="color:var(--shiki-color-text);">(offset)); </span><span style="color:var(--shiki-token-comment);">// add 加算距离</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">sendMessage</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">ChatColor</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">GREEN</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;传送成功！&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><p><code>toHighestLocation</code> 获得最高的非空方块位置——确保玩家脚下有东西并且不被卡到石头里面去（虽然有极小的概率传送到熔岩上）！</p><p><code>nextInt</code> 方法会返回一个 「0 ~ 设定值」之间的整数，因此我们生成 0 ~ 200000 之间的随机数，再减去 100000 就可以得到 -100000 ~ 100000 的随机数啦~</p><h3 id="服务器公告-1" tabindex="-1">服务器公告 <a class="header-anchor" href="#服务器公告-1" aria-label="Permalink to &quot;服务器公告&quot;">​</a></h3><p>最后我们实现服务器公告。为了服主配置方便，我们这里使用配置文件。默认的 <code>config.yml</code>（创建在 <code>src</code> 下）：</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">announcement</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">|</span></span>
<span class="line"><span style="color:var(--shiki-token-string);">  这是一段公告，您可以随意修改。</span></span>
<span class="line"><span style="color:var(--shiki-token-string);">  +++</span></span>
<span class="line"><span style="color:var(--shiki-token-string);">  使用三个加号来换页。</span></span>
<span class="line"><span style="color:var(--shiki-token-string);">  记得使用 UTF-8 编码保存！</span></span>
<span class="line"><span style="color:var(--shiki-token-string);">  服务端如果乱码请加上 Java 参数：</span></span>
<span class="line"><span style="color:var(--shiki-token-string);">  -Dfile.encoding=UTF-8</span></span>
<span class="line"><span style="color:var(--shiki-token-string);">  RarityEG 作品</span></span></code></pre></div><p>管道符（<code>|</code>）是 YAML 多行字符串的语法，加在冒号空格后面，再使用正确的缩进就可以书写多行字符串。</p><p>然后就简单啦，创建一个 <code>ItemStack</code> 并为玩家显示：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-comment);">// EventListener 节选</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">clickedItem</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getItemMeta</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getDisplayName</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">equals</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Menu</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">SHOW_ANNOUNCEMENT</span><span style="color:var(--shiki-color-text);">)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">ItemStack</span><span style="color:var(--shiki-color-text);"> ann </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">ItemStack(</span><span style="color:var(--shiki-token-constant);">Material</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">WRITTEN_BOOK</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">BookMeta</span><span style="color:var(--shiki-color-text);"> annBm </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> (BookMeta) </span><span style="color:var(--shiki-token-constant);">ann</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getItemMeta</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);">[] acText </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Objects</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">requireNonNullElse</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">HoofPower</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">instance</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getConfig</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getString</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;announcement&quot;</span><span style="color:var(--shiki-color-text);">)</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;&quot;</span><span style="color:var(--shiki-color-text);">)</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">split</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;\\\\+\\\\+\\\\+&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-comment);">// Java 默认使用正则表达式进行查找，在正则表达式中，加号是特殊字符，需要使用 \\ 转义；而在 Java 中，\\ 本身也是特殊字符，因此就需要输入两个 \\</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">annBm</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setPages</span><span style="color:var(--shiki-color-text);">(acText);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">annBm</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setAuthor</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;HoofPower&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">annBm</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setTitle</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;服务器公告&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-comment);">// 三项缺一不可</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">ann</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setItemMeta</span><span style="color:var(--shiki-color-text);">(annBm);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">openBook</span><span style="color:var(--shiki-color-text);">(ann);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><p>最后不需要 <code>return</code>，因为这已经是最后一个处理了。</p><p>最终代码：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">package</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">rarityeg</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">hoofpower</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">org</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">*</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">org</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">entity</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">Player</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">org</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">event</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">EventHandler</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">org</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">event</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">Listener</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">org</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">event</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">inventory</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">InventoryClickEvent</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">org</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">inventory</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">InventoryView</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">org</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">inventory</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">ItemStack</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">org</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">inventory</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">meta</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">BookMeta</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">java</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">util</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">Objects</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">java</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">util</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">Random</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">class</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">EventListener</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">implements</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">Listener</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">final</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Random</span><span style="color:var(--shiki-color-text);"> RANDOM </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">Random()</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">EventHandler</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">void</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">onClick</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">InventoryClickEvent</span><span style="color:var(--shiki-color-text);"> e) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">Player</span><span style="color:var(--shiki-color-text);"> player </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> (Player) </span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getWhoClicked</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">InventoryView</span><span style="color:var(--shiki-color-text);"> inv </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getOpenInventory</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">inv</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getTitle</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">equals</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Menu</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">TITLE</span><span style="color:var(--shiki-color-text);">)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setCancelled</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">true</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getRawSlot</span><span style="color:var(--shiki-color-text);">() </span><span style="color:var(--shiki-token-keyword);">&lt;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">||</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getRawSlot</span><span style="color:var(--shiki-color-text);">() </span><span style="color:var(--shiki-token-keyword);">&gt;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getInventory</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getSize</span><span style="color:var(--shiki-color-text);">()) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">ItemStack</span><span style="color:var(--shiki-color-text);"> clickedItem </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getCurrentItem</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (clickedItem </span><span style="color:var(--shiki-token-keyword);">==</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">clickedItem</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getItemMeta</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getDisplayName</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">equals</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Menu</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">QUIT_SERVER</span><span style="color:var(--shiki-color-text);">)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">kickPlayer</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;您已离开服务器&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">clickedItem</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getItemMeta</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getDisplayName</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">equals</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Menu</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">TELEPORT</span><span style="color:var(--shiki-color-text);">)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">closeInventory</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-keyword);">World</span><span style="color:var(--shiki-color-text);"> playerWorld </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getWorld</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;world&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-keyword);">double</span><span style="color:var(--shiki-color-text);"> randX </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">RANDOM</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">nextInt</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">200000</span><span style="color:var(--shiki-color-text);">) </span><span style="color:var(--shiki-token-keyword);">-</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">100000</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-keyword);">double</span><span style="color:var(--shiki-color-text);"> randZ </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">RANDOM</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">nextInt</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">200000</span><span style="color:var(--shiki-color-text);">) </span><span style="color:var(--shiki-token-keyword);">-</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">100000</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-keyword);">Location</span><span style="color:var(--shiki-color-text);"> offset </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">Location(playerWorld</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> randX</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> randZ)</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">toHighestLocation</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">teleport</span><span style="color:var(--shiki-color-text);">(offset);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">sendMessage</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">ChatColor</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">GREEN</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;传送成功！&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">clickedItem</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getItemMeta</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getDisplayName</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">equals</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Menu</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">SHOW_ANNOUNCEMENT</span><span style="color:var(--shiki-color-text);">)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-keyword);">ItemStack</span><span style="color:var(--shiki-color-text);"> ann </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">ItemStack(</span><span style="color:var(--shiki-token-constant);">Material</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">WRITTEN_BOOK</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-keyword);">BookMeta</span><span style="color:var(--shiki-color-text);"> annBm </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> (BookMeta) </span><span style="color:var(--shiki-token-constant);">ann</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getItemMeta</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);">[] acText </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Objects</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">requireNonNullElse</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">HoofPower</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">instance</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getConfig</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getString</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;announcement&quot;</span><span style="color:var(--shiki-color-text);">)</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;&quot;</span><span style="color:var(--shiki-color-text);">)</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">split</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;\\\\+\\\\+\\\\+&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-constant);">annBm</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setPages</span><span style="color:var(--shiki-color-text);">(acText);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-constant);">annBm</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setAuthor</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;HoofPower&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-constant);">annBm</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setTitle</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;服务器公告&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-constant);">ann</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setItemMeta</span><span style="color:var(--shiki-color-text);">(annBm);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">openBook</span><span style="color:var(--shiki-color-text);">(ann);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><h2 id="打开菜单-1" tabindex="-1">打开菜单 <a class="header-anchor" href="#打开菜单-1" aria-label="Permalink to &quot;打开菜单&quot;">​</a></h2><p>如果只是需要简单的命令处理，可以将 <code>onCommand</code> 写在主类中，这样就不需要注册了：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-comment);">// HoofPower 节选</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">@</span><span style="color:var(--shiki-token-keyword);">Override</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">@</span><span style="color:var(--shiki-token-keyword);">ParametersAreNonnullByDefault</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">boolean</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">onCommand(</span><span style="color:var(--shiki-token-keyword);">CommandSender</span><span style="color:var(--shiki-token-function);"> sender</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-keyword);">Command</span><span style="color:var(--shiki-token-function);"> command</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-token-function);"> label</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-token-function);">[] args)</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">!</span><span style="color:var(--shiki-token-constant);">command</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getName</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">equals</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;cd&quot;</span><span style="color:var(--shiki-color-text);">)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-comment);">// 按道理这里其实不用判断，因为不是 cd 这个命令就不会送到这里处理，但为了以防万一……</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">false</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">!</span><span style="color:var(--shiki-color-text);">(sender </span><span style="color:var(--shiki-token-keyword);">instanceof</span><span style="color:var(--shiki-color-text);"> Player)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">false</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">Menu((Player) sender)</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">open</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">true</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><p><em>能够写在主类中只是因为 <code>JavaPlugin</code> 自己就实现了 <code>CommandExecutor</code>，不需要注册则是因为 Bukkit 在初始化插件时会默认注册主类。</em></p><h2 id="注册事件" tabindex="-1">注册事件 <a class="header-anchor" href="#注册事件" aria-label="Permalink to &quot;注册事件&quot;">​</a></h2><p>接下来就是常规操作啦~</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">package</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">rarityeg</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">hoofpower</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">org</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">Bukkit</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">org</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">command</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">Command</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">org</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">command</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">CommandSender</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">org</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">entity</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">Player</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">org</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">plugin</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">java</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">JavaPlugin</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">javax</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">annotation</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-keyword);">ParametersAreNonnullByDefault</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">class</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">HoofPower</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">extends</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">JavaPlugin</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">JavaPlugin</span><span style="color:var(--shiki-color-text);"> instance;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">Override</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">void</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">onLoad</span><span style="color:var(--shiki-color-text);">() {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-function);">saveDefaultConfig()</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">Override</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">void</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">onEnable</span><span style="color:var(--shiki-color-text);">() {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        instance </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">this</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">Bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getPluginManager</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">registerEvents</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">EventListener()</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">this</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">Override</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">ParametersAreNonnullByDefault</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">boolean</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">onCommand</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">CommandSender</span><span style="color:var(--shiki-color-text);"> sender</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Command</span><span style="color:var(--shiki-color-text);"> command</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> label</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);">[] args) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">!</span><span style="color:var(--shiki-token-constant);">command</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getName</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">equals</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;cd&quot;</span><span style="color:var(--shiki-color-text);">)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">false</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">!</span><span style="color:var(--shiki-color-text);">(sender </span><span style="color:var(--shiki-token-keyword);">instanceof</span><span style="color:var(--shiki-color-text);"> Player)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">false</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">Menu((Player) sender)</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">open</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">true</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><h2 id="plugin-yml" tabindex="-1"><code>plugin.yml</code> <a class="header-anchor" href="#plugin-yml" aria-label="Permalink to &quot;\`plugin.yml\`&quot;">​</a></h2><p>最后一步！</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">main</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">rarityeg.hoofpower.HoofPower</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"># 改成你对应的包名！</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"># 改成你对应的包名！</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"># 改成你对应的包名！</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"># 改成你对应的包名！</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"># 改成你对应的包名！</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">name</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">HoofPower</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">version</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">1.0</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">api-version</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">1.16</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">commands</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">cd</span><span style="color:var(--shiki-token-keyword);">:</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">usage</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;/cd&quot;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">description</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;Open menu.&quot;</span></span></code></pre></div><p><em>我……我还是担心你会把上面的东西直接复制进去……不要……不要啊！你在编写代码时使用的是什么包名（可以通过主类中的 <code>package</code> 语句查到），<code>main</code> 这里就要填写对应的包名 + 主类名！不然 Bukkit 不认的啊！嘤……你什么时候才能让本小马对你放心呢……</em></p><h2 id="构建" tabindex="-1">构建 <a class="header-anchor" href="#构建" aria-label="Permalink to &quot;构建&quot;">​</a></h2><p>至此，所有的代码部分就完成了，呼——</p><p>和上一章一样，创建新的「Artifact」，「Include in project build」、「&#39;HoofPower&#39; compile output」，按下绿色锤子——</p><p>一切，就完成了。</p>`,100),l=[e];function r(i,p,c,k,y,v){return o(),n("div",null,l)}const x=s(t,[["render",r]]);export{u as __pageData,x as default};
