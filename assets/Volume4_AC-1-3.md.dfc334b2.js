import{_ as s,o as n,c as a,S as o}from"./chunks/framework.7f03344f.js";const u=JSON.parse('{"title":"AC-1-3 调试 HarmonyAuth SMART Part 1","description":"","frontmatter":{},"headers":[],"relativePath":"Volume4/AC-1-3.md","filePath":"docs/Volume4/AC-1-3.md","lastUpdated":1698403164000}'),t={name:"Volume4/AC-1-3.md"},e=o(`<h1 id="ac-1-3-调试-harmonyauth-smart-part-1" tabindex="-1">AC-1-3 调试 HarmonyAuth SMART Part 1 <a class="header-anchor" href="#ac-1-3-调试-harmonyauth-smart-part-1" aria-label="Permalink to &quot;AC-1-3 调试 HarmonyAuth SMART Part 1&quot;">​</a></h1><p>前面几次演习中，调试似乎都很无聊，那是因为那些插件很简单，不容易出错。</p><p>但真正开发插件时几乎不可能一次写对。上面两节中的代码有很多漏洞，接下来请诸位跟随笔者，看看我是如何逐一发现并除掉这些 Bug 的。</p><div class="tip custom-block"><p class="custom-block-title"><img src="data:image/svg+xml,%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#39;0 0 1028 1024&#39; transform=&#39;scale(0.6)&#39; fill=&#39;%23fff&#39;%3E%3Cpath d=&#39;M1018.319924 112.117535q4.093748 9.210934 6.652341 21.492179t2.558593 25.585928-5.117186 26.609365-16.374994 25.585928q-12.281245 12.281245-22.003898 21.492179t-16.886712 16.374994q-8.187497 8.187497-15.351557 14.32812l-191.382739-191.382739q12.281245-11.257808 29.167958-27.121083t28.144521-25.074209q14.32812-11.257808 29.679676-15.863275t30.191395-4.093748 28.656239 4.605467 24.050772 9.210934q21.492179 11.257808 47.589826 39.402329t40.425766 58.847634zM221.062416 611.554845q6.140623-6.140623 28.656239-29.167958t56.289041-56.80076l74.710909-74.710909 82.898406-82.898406 220.038979-220.038979 191.382739 192.406177-220.038979 220.038979-81.874969 82.898406q-40.937484 39.914047-73.687472 73.175753t-54.242167 54.753885-25.585928 24.562491q-10.234371 9.210934-23.539054 19.445305t-27.632802 16.374994q-14.32812 7.16406-41.960921 17.398431t-57.824197 19.957024-57.312478 16.886712-40.425766 9.210934q-27.632802 3.070311-36.843736-8.187497t-5.117186-37.867173q2.046874-14.32812 9.722653-41.449203t16.374994-56.289041 16.886712-53.730448 13.304682-33.773425q6.140623-14.32812 13.816401-26.097646t22.003898-26.097646z&#39;/%3E%3C/svg%3E" style="background-color:#057E3D;clip-path:circle();" width="24px" height="24px"> <strong>编者注</strong></p><p>谨按，调试 HarmonyAuth SMART 插件的部分，原教程中篇幅仅占一节，即 AC-1-3「调试 HarmonyAuth SMART」。然而编者 CaveNightingale 考订时发现，代码中还有几处问题，ThatRarityEG 未能在调试过程中发现。比如代码里异步调用了 <code>setWalkSpeed</code> 方法，但该方法并不线程安全，因而有时玩家登录以后仍然无法移动。又如，真实服务器环境中，玩家上线时的位置可能处于下界传送门内，因而无法登录。种种问题此处不具。现在将 AC-1-3 命名为「调试 HarmonyAuth SMART Part I」，新增 AC-1-4，命名为「调试 HarmonyAuth SMART Part II」。</p></div><h2 id="安装插件" tabindex="-1">安装插件 <a class="header-anchor" href="#安装插件" aria-label="Permalink to &quot;安装插件&quot;">​</a></h2><p>把构建出来的文件放到 <code>plugins</code> 目录下。这一次建议删除其它插件。</p><p>启动一次……</p><p><img src="https://s2.loli.net/2023/07/07/wVHZdrONtJIBWGb.png" alt="START_1.png"></p><p>呃，好像爆掉了……</p><p>其实这个问题笔者心里已经有数了，我们在构建时貌似是直接将依赖打包进去的，这会导致整个 JAR 包作为一个文件放到我们的插件中，这是不行的。</p><p>输入 <code>stop</code> 停止服务端，停止时似乎还出现了什么错误信息……不管了，我们先把 SQL 弄到位。</p><p>回到 IDEA 中，在「HarmonyAuth SMART」工件中，选择「mysql-connector-java-8.0.23」，按「-」移除它，接着在右侧「Available Elements」中找到它，右键，「Extract Into Output Root」将它解压到最终产品中。</p><p><img src="https://s2.loli.net/2023/07/07/8hza1VuTOs5AMyY.png" alt="REBUILD.png"></p><p>「Apply」、「OK」，按下绿色锤子重新构建，再将插件放到 <code>plugins</code> 目录下。</p><p>再启动一次……</p><h2 id="第二次启动" tabindex="-1">第二次启动 <a class="header-anchor" href="#第二次启动" aria-label="Permalink to &quot;第二次启动&quot;">​</a></h2><p><img src="https://s2.loli.net/2023/07/07/5KonIze6WmxARlQ.png" alt="START_2.png"></p><p>验证失败是自然的（MySQL 没有设置），但我们默认不是没有启用 MySQL 吗？</p><p>哦！对了！虽然配置文件中有这个选项，但我们没有处理这个设置，直接初始化了 <code>DBDataManager</code>，这里需要修改一下。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-comment);">// HarmonyAuthSMART 节选</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-function);">getConfig()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getBoolean</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;mysql.enabled&quot;</span><span style="color:var(--shiki-color-text);">)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">DBDataManager()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">loadAll</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><p>再构建一次。再试试。</p><h2 id="第三次启动" tabindex="-1">第三次启动 <a class="header-anchor" href="#第三次启动" aria-label="Permalink to &quot;第三次启动&quot;">​</a></h2><p><img src="https://s2.loli.net/2023/07/07/QNMwrEA12HVB7LZ.png" alt="START_3.png"></p><p>成功！</p><p>现在关闭服务器，我们把 MySQL 配置好。如果你的 <code>test</code> 数据库没有删除，那配置很快就完成了。否则，你需要创建新的数据库。</p><p>配置如下：</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">mysql</span><span style="color:var(--shiki-token-keyword);">:</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">enabled</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">true</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">host</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">localhost</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">port</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">3306</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">username</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">root</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">password</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">mylittlepony</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);"># 这是我的密码</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">db-name</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;test&quot;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);"># 数据库名</span></span></code></pre></div><p>除了修改一下数据库以外，其它配置我们保持默认。</p><p>然后启动一下~</p><p><img src="https://s2.loli.net/2023/07/07/ZWskTFnSf7RhyCV.png" alt="START_4.png"></p><p>无法保存 <code>data.yml</code> 是正常的，但为什么 Paper 要发一个警告呢……不管了，应该不要紧。</p><h2 id="加入服务器" tabindex="-1">加入服务器 <a class="header-anchor" href="#加入服务器" aria-label="Permalink to &quot;加入服务器&quot;">​</a></h2><p>打开客户端，这里我用的是 1.16.5 无正版验证。进入多人游戏，输入 <code>localhost</code> 连接……</p><p><img src="https://s2.loli.net/2023/07/07/ILiNEgQJjU24oyR.png" alt="CLI.png"></p><p>呃？为什么我可以移动？</p><p>检查代码，我很快就发现了问题：玩家登录时要加入限制列表啊！！！</p><p>关闭服务器，修改代码：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-comment);">// EventHarmony 节选</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">RuntimeDataManager</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">addRestrictUUID</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getPlayer</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getUniqueId</span><span style="color:var(--shiki-color-text);">());</span></span></code></pre></div><p>另外我们还将玩家退出时也进行了修改：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-comment);">// EventHarmony 节选</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">RuntimeDataManager</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">removeRestrictUUID</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getPlayer</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getUniqueId</span><span style="color:var(--shiki-color-text);">());</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">RuntimeDataManager</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">exitIForgotMode</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getPlayer</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getUniqueId</span><span style="color:var(--shiki-color-text);">());</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">RuntimeDataManager</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">exitReadMode</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getPlayer</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getUniqueId</span><span style="color:var(--shiki-color-text);">());</span></span></code></pre></div><p>再构建一次。</p><p>为了避免数据库污染，我们登录到 MySQL 中删除创建的表 <code>harmony_auth_data</code>。</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">USE</span><span style="color:var(--shiki-color-text);"> test;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">DROP</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">TABLE</span><span style="color:var(--shiki-color-text);"> harmony_auth_data;</span></span></code></pre></div><p>现在再次启动服务端，加入……</p><p>（图略）</p><p>还是不行！</p><p>仔细想想，我们……</p><p>哦！我们忘了<strong>注册事件处理器和命令处理器</strong>！</p><p><em>笔者犯了这么一个大错误实在是不应该啊……</em></p><p>赶紧注册，修改主类：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-comment);">// HarmonyAuthSMART 节选</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">Bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getPluginManager</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">registerEvents</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">EventHarmony()</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">this</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">Objects</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">requireNonNull</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getPluginCommand</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;hl&quot;</span><span style="color:var(--shiki-color-text);">))</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setExecutor</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">CommandHandler()</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">Objects</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">requireNonNull</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getPluginCommand</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;iforgot&quot;</span><span style="color:var(--shiki-color-text);">))</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setExecutor</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">CommandHandler()</span><span style="color:var(--shiki-color-text);">);</span></span></code></pre></div><p>然后重新构建，运行，加入……</p><p><img src="https://s2.loli.net/2023/07/07/DRqWw17LT4mVZgG.png" alt="EFFECTIVE.png"></p><p>也不回弹了，很好！但是同时我们又发现了新错误：</p><p>（图略）</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-color-text);">Operation not allowed for a result set of type ResultSet.TYPE_FORWARD_ONLY.</span></span></code></pre></div><p>看来这是个数据库错误，笔者果然还是对 SQL 了解不深啊……</p><p><em>这就是在 <code>executeQuery</code> 中缺失了那两个参数的后果。</em></p><h2 id="修复-sqlexception-1" tabindex="-1">修复 SQLException 1 <a class="header-anchor" href="#修复-sqlexception-1" aria-label="Permalink to &quot;修复 SQLException 1&quot;">​</a></h2><p>查阅了相关资料后，我发现 <code>createStatement</code> 参数中应当传入 <code>ResultSet.TYPE_SCROLL_SENSITIVE</code> 用于上下滚动和 <code>ResultSet.CONCUR_READ_ONLY</code> 表示只读，这些问题都只出现在 <code>getXXX</code> 方法中，我们修改它们就好……先关闭服务器。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-comment);">// DBDataManager 节选</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">PreparedStatement</span><span style="color:var(--shiki-color-text);"> preparedStatement </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">connection</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">prepareStatement</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;SELECT PwdHash FROM harmony_auth_data WHERE UUID=?;&quot;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">ResultSet</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">TYPE_SCROLL_SENSITIVE</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">ResultSet</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">CONCUR_READ_ONLY</span><span style="color:var(--shiki-color-text);">);</span></span></code></pre></div><p>这里只列出了一处，但所有的 <code>getXXX</code> 方法我们都要如此修改。</p><p>另外，还有 <code>isExist</code> 和 <code>getNextRequest</code> 要修改：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-comment);">// DBDataManager 节选</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">@</span><span style="color:var(--shiki-token-keyword);">Override</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">boolean</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">isExist(</span><span style="color:var(--shiki-token-keyword);">UUID</span><span style="color:var(--shiki-token-function);"> id)</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">try</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">Connection</span><span style="color:var(--shiki-color-text);"> connection </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">DriverManager</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getConnection</span><span style="color:var(--shiki-color-text);">(db_url</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> username</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> password);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">PreparedStatement</span><span style="color:var(--shiki-color-text);"> preparedStatement </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">connection</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">prepareStatement</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;SELECT COUNT(UUID) FROM harmony_auth_data WHERE UUID=?&quot;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">ResultSet</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">TYPE_SCROLL_SENSITIVE</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">ResultSet</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">CONCUR_READ_ONLY</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-comment);">// 这里！</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">preparedStatement</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setString</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">id</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">toString</span><span style="color:var(--shiki-color-text);">());</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">ResultSet</span><span style="color:var(--shiki-color-text);"> rs </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">preparedStatement</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">executeQuery</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">rs</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">first</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">preparedStatement</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">close</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">connection</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">close</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">rs</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getInt</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-color-text);">) </span><span style="color:var(--shiki-token-keyword);">!=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    } </span><span style="color:var(--shiki-token-keyword);">catch</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">SQLException</span><span style="color:var(--shiki-color-text);"> e) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-function);">putError(e)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">false</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">@</span><span style="color:var(--shiki-token-keyword);">Override</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">UUID</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">getNextRequest()</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">try</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">Connection</span><span style="color:var(--shiki-color-text);"> connection </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">DriverManager</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getConnection</span><span style="color:var(--shiki-color-text);">(db_url</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> username</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> password);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">Statement</span><span style="color:var(--shiki-color-text);"> statement </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">connection</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">createStatement</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">ResultSet</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">TYPE_SCROLL_SENSITIVE</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">ResultSet</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">CONCUR_READ_ONLY</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-comment);">// 这里！</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">ResultSet</span><span style="color:var(--shiki-color-text);"> rsc </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">statement</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">executeQuery</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;SELECT COUNT(UUID) FROM harmony_auth_data WHERE IForgotState=true LIMIT 1&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">rsc</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getInt</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-color-text);">) </span><span style="color:var(--shiki-token-keyword);">==</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">UUID</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">fromString</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;00000000-0000-0000-0000-000000000000&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">ResultSet</span><span style="color:var(--shiki-color-text);"> rs </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">statement</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">executeQuery</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;SELECT UUID FROM harmony_auth_data WHERE IForgotState=true LIMIT 1&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">rs</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">first</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> uString </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">rs</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getString</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;UUID&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">UUID</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">fromString</span><span style="color:var(--shiki-color-text);">(uString);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    } </span><span style="color:var(--shiki-token-keyword);">catch</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">SQLException</span><span style="color:var(--shiki-color-text);"> e) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-function);">putError(e)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">UUID</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">fromString</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;00000000-0000-0000-0000-000000000000&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><p>重新构建，运行，加入……</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-color-text);">java.sql.SQLException: Operation not allowed after ResultSet closed</span></span></code></pre></div><p>糟糕！我们在查询数据前就断开了连接！</p><h2 id="修复-sqlexception-2" tabindex="-1">修复 SQLException 2 <a class="header-anchor" href="#修复-sqlexception-2" aria-label="Permalink to &quot;修复 SQLException 2&quot;">​</a></h2><p>这很简单，我们只需要把关闭挪到取值之前就可以了。由于 <code>return</code> 会直接离开函数，我们需要用一个变量存储。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-comment);">// DBDataManager 节选</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">rs</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">first</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> res </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">rs</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getString</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;PwdHash&quot;</span><span style="color:var(--shiki-color-text);">); </span><span style="color:var(--shiki-token-comment);">// 这里！</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">preparedStatement</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">close</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">connection</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">close</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Objects</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">requireNonNullElse</span><span style="color:var(--shiki-color-text);">(res</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;&quot;</span><span style="color:var(--shiki-color-text);">); </span><span style="color:var(--shiki-token-comment);">// 这里！</span></span></code></pre></div><p>其它部分也要这样修改。另外我们还将 <code>getNextRequest</code> 中忘记关闭的连接关闭了：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-color-text);">@</span><span style="color:var(--shiki-token-keyword);">Override</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">UUID</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">getNextRequest()</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">try</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">Connection</span><span style="color:var(--shiki-color-text);"> connection </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">DriverManager</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getConnection</span><span style="color:var(--shiki-color-text);">(db_url</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> username</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> password);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">Statement</span><span style="color:var(--shiki-color-text);"> statement </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">connection</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">createStatement</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">ResultSet</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">TYPE_SCROLL_SENSITIVE</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">ResultSet</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">CONCUR_READ_ONLY</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">ResultSet</span><span style="color:var(--shiki-color-text);"> rsc </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">statement</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">executeQuery</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;SELECT COUNT(UUID) FROM harmony_auth_data WHERE IForgotState=true LIMIT 1&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">rsc</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getInt</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-color-text);">) </span><span style="color:var(--shiki-token-keyword);">==</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">UUID</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">fromString</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;00000000-0000-0000-0000-000000000000&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">ResultSet</span><span style="color:var(--shiki-color-text);"> rs </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">statement</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">executeQuery</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;SELECT UUID FROM harmony_auth_data WHERE IForgotState=true LIMIT 1&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">rs</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">first</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> uString </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">rs</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getString</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;UUID&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">statement</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">close</span><span style="color:var(--shiki-color-text);">(); </span><span style="color:var(--shiki-token-comment);">// 这里！</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">connection</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">close</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">UUID</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">fromString</span><span style="color:var(--shiki-color-text);">(uString);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    } </span><span style="color:var(--shiki-token-keyword);">catch</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">SQLException</span><span style="color:var(--shiki-color-text);"> e) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-function);">putError(e)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">UUID</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">fromString</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;00000000-0000-0000-0000-000000000000&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><p>构建，运行，加入……</p><p>好，不出错了！</p><p>我们注册……</p><p>（图略）</p><p>注册成功了，为什么不能动呢？</p><h2 id="修复移动问题" tabindex="-1">修复移动问题 <a class="header-anchor" href="#修复移动问题" aria-label="Permalink to &quot;修复移动问题&quot;">​</a></h2><p>从上面的测试中我们了解到，注册后可以跳动，说明移动事件没有 <code>setCancelled</code>。经过检查，我发现我们的代码有点问题。</p><p>我们是在<strong>玩家移动时才降低玩家移动速度</strong>的，而如果玩家没有移动，最后移动速度也恢复不回来。</p><p>所以这部分代码应该移动到在 <code>PlayerLoginEvent</code> 中。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-comment);">// EventHarmony 节选</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">RuntimeDataManager</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">addRestrictUUID</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getPlayer</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getUniqueId</span><span style="color:var(--shiki-color-text);">());</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">UUID</span><span style="color:var(--shiki-color-text);"> id </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getPlayer</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getUniqueId</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">originSpeed</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">put</span><span style="color:var(--shiki-color-text);">(id</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getPlayer</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getWalkSpeed</span><span style="color:var(--shiki-color-text);">()); </span><span style="color:var(--shiki-token-comment);">// 这里！</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getPlayer</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setWalkSpeed</span><span style="color:var(--shiki-color-text);">((</span><span style="color:var(--shiki-token-keyword);">float</span><span style="color:var(--shiki-color-text);">) </span><span style="color:var(--shiki-token-constant);">0.00001</span><span style="color:var(--shiki-color-text);">);</span></span></code></pre></div><p>然后把恢复速度的代码放到 <code>CommandHandler</code> 中，注册和登录两部分都要放：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-comment);">// CommandHandler 节选</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">Bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getScheduler</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">runTask</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">HarmonyAuthSMART</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">instance</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> () </span><span style="color:var(--shiki-token-keyword);">-&gt;</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">RuntimeDataManager</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">removeRestrictUUID</span><span style="color:var(--shiki-color-text);">(id);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setWalkSpeed</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">EventHarmony</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">originSpeed</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">get</span><span style="color:var(--shiki-color-text);">(id)); </span><span style="color:var(--shiki-token-comment);">// 这里！</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">});</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title"><img src="data:image/svg+xml,%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#39;0 0 1028 1024&#39; transform=&#39;scale(0.6)&#39; fill=&#39;%23fff&#39;%3E%3Cpath d=&#39;M1018.319924 112.117535q4.093748 9.210934 6.652341 21.492179t2.558593 25.585928-5.117186 26.609365-16.374994 25.585928q-12.281245 12.281245-22.003898 21.492179t-16.886712 16.374994q-8.187497 8.187497-15.351557 14.32812l-191.382739-191.382739q12.281245-11.257808 29.167958-27.121083t28.144521-25.074209q14.32812-11.257808 29.679676-15.863275t30.191395-4.093748 28.656239 4.605467 24.050772 9.210934q21.492179 11.257808 47.589826 39.402329t40.425766 58.847634zM221.062416 611.554845q6.140623-6.140623 28.656239-29.167958t56.289041-56.80076l74.710909-74.710909 82.898406-82.898406 220.038979-220.038979 191.382739 192.406177-220.038979 220.038979-81.874969 82.898406q-40.937484 39.914047-73.687472 73.175753t-54.242167 54.753885-25.585928 24.562491q-10.234371 9.210934-23.539054 19.445305t-27.632802 16.374994q-14.32812 7.16406-41.960921 17.398431t-57.824197 19.957024-57.312478 16.886712-40.425766 9.210934q-27.632802 3.070311-36.843736-8.187497t-5.117186-37.867173q2.046874-14.32812 9.722653-41.449203t16.374994-56.289041 16.886712-53.730448 13.304682-33.773425q6.140623-14.32812 13.816401-26.097646t22.003898-26.097646z&#39;/%3E%3C/svg%3E" style="background-color:#057E3D;clip-path:circle();" width="24px" height="24px"> <strong>编者注</strong></p><p>谨按，ThatRarityEG 原文中，没有 <code>runTask</code> 方法。这会导致 <code>setWalkSpeed</code> 方法被异步执行，因而时好时坏。玩家登录以后，移动速度有概率无法恢复。今依据 7-4 中的原理改正。</p></div><p>删除数据表，清理脏数据，构建，再次运行。</p><p><img src="https://s2.loli.net/2023/07/07/wZB7gNQhqJ9Gs6y.png" alt="MOVE.png"></p><p>成功了，同时我们也看到，在登录成功的瞬间客户端有一个加速的动作，这和我们之前见到的其它登录插件很像。</p><p>继续测试，看看自动登录能否生效。</p><p><img src="https://s2.loli.net/2023/07/07/c5bQ2aElWfOATLs.png" alt="AUTORELOG.png"></p><p>话说，如果不正常才麻烦呢，因为笔者实在找不到出错的地方了……</p><p>接下来测试一下不自动登录，将 <code>auto-login</code> 改为 <code>0</code>。重启服务器（这一次不要删数据库）。</p><p><img src="https://s2.loli.net/2023/07/07/4tLIc32ni5vhsFq.png" alt="LOGIN.png"></p><p>系统识别出来了我们已经注册。并且没有自动登录。很好！</p><p>接下来模拟密码恢复。</p><p><img src="https://s2.loli.net/2023/07/07/HOgR3widrbM1sfE.png" alt="IFORGOT.png"></p><p>并且数据已经保存到了数据库（用 <code>SELECT * FROM harmony_auth_data</code> 可知）。</p><p>我们需要模拟 OP 进行测试……</p><p>退出客户端，换一个 ID 登录。</p><p><em>客户端的启动远没有服务端那么快。</em></p><p>我们给这个新 ID 以 OP 权限，登录，运行 <code>/iforgot</code>：</p><p><img src="https://s2.loli.net/2023/07/07/nPKq96FwWr2jU4z.png" alt="FAILED.png"></p><p>还是不行？</p><h2 id="修改-sqlexception-3" tabindex="-1">修改 SQLException 3 <a class="header-anchor" href="#修改-sqlexception-3" aria-label="Permalink to &quot;修改 SQLException 3&quot;">​</a></h2><p>根据指出的错误行数，我们找到了 <code>getNextRequest</code> 方法。根据错误提示，我觉得应该是忘记了 <code>rsc.first()</code>。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-comment);">// DBDataManager 节选</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">ResultSet</span><span style="color:var(--shiki-color-text);"> rsc </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">statement</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">executeQuery</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;SELECT COUNT(UUID) FROM harmony_auth_data WHERE IForgotState=true LIMIT 1&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">rsc</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">first</span><span style="color:var(--shiki-color-text);">(); </span><span style="color:var(--shiki-token-comment);">// 这里！</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">rsc</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getInt</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-color-text);">) </span><span style="color:var(--shiki-token-keyword);">==</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">UUID</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">fromString</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;00000000-0000-0000-0000-000000000000&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><p>再试试。</p><p>（图略）</p><p>进入和退出审核模式正常了，但发送的消息全是空。怎么回事？</p><h2 id="修复审核问题" tabindex="-1">修复审核问题 <a class="header-anchor" href="#修复审核问题" aria-label="Permalink to &quot;修复审核问题&quot;">​</a></h2><p>这个问题出现在 <code>CommandHandler</code> 中。</p><p>实际上笔者又犯了一个低级错误，这是原来的代码：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-comment);">// CommandHandler</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">sendMessage</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Util</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getAndTranslate</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;audit-uuid&quot;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">firstId</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">toString</span><span style="color:var(--shiki-color-text);">()));</span></span></code></pre></div><p>看见了吧？<code>firstId.toString()</code> 应该移动到括号外去。而且还忘了 <code>msg.</code>！赶紧修改。改完后：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-comment);">// CommandHandler 节选</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">sendMessage</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Util</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getAndTranslate</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;msg.audit-uuid&quot;</span><span style="color:var(--shiki-color-text);">) </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">firstId</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">toString</span><span style="color:var(--shiki-color-text);">());</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// 这里！</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">sendMessage</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Util</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getAndTranslate</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;msg.audit-reason&quot;</span><span style="color:var(--shiki-color-text);">) </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">idm</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getIForgotManualReason</span><span style="color:var(--shiki-color-text);">(firstId));</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// 这里！</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">sendMessage</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Util</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getAndTranslate</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;msg.audit-hint&quot;</span><span style="color:var(--shiki-color-text);">));</span></span></code></pre></div><p>不光是这里，还有 <code>EventHarmony</code> 中的 <code>onPlayerChat</code> 监听器也要修改。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-comment);">// EventHarmony 节选</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">sendMessage</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Util</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getAndTranslate</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;msg.audit-uuid&quot;</span><span style="color:var(--shiki-color-text);">) </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">nextId</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">toString</span><span style="color:var(--shiki-color-text);">());</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// 这里！</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">sendMessage</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Util</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getAndTranslate</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;msg.audit-reason&quot;</span><span style="color:var(--shiki-color-text);">) </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">idm</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getIForgotManualReason</span><span style="color:var(--shiki-color-text);">(nextId));</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// 这里！</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">sendMessage</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Util</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getAndTranslate</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;msg.audit-hint&quot;</span><span style="color:var(--shiki-color-text);">));</span></span></code></pre></div><p>另外我还顺便检查了聊天处理器，结果又发现了问题。我们修改一部分代码：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-comment);">// EventHarmony 节选</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getMessage</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">startsWith</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;/&quot;</span><span style="color:var(--shiki-color-text);">)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">!</span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getMessage</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">startsWith</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;/iforgot&quot;</span><span style="color:var(--shiki-color-text);">)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">RuntimeDataManager</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">exitReadMode</span><span style="color:var(--shiki-color-text);">(id); </span><span style="color:var(--shiki-token-comment);">// 这里！</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getPlayer</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">sendMessage</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Util</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getAndTranslate</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;msg.audit-out&quot;</span><span style="color:var(--shiki-color-text);">));</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><p>当 OP 输入 <code>/iforgot</code> 时退出审核模式。</p><p>还删掉了一部分：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-comment);">// EventHarmony 节选</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getMessage</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">toLowerCase</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">startsWith</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;y&quot;</span><span style="color:var(--shiki-color-text);">)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">idm</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setPasswordHash</span><span style="color:var(--shiki-color-text);">(jid</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">idm</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getIForgotNewPasswordHash</span><span style="color:var(--shiki-color-text);">(jid));</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">idm</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setIForgotState</span><span style="color:var(--shiki-color-text);">(jid</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">false</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">idm</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setIForgotManualReason</span><span style="color:var(--shiki-color-text);">(jid</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;&lt;Internal&gt; Accepted.&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">} </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getMessage</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">toLowerCase</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">startsWith</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;n&quot;</span><span style="color:var(--shiki-color-text);">)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">idm</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setIForgotState</span><span style="color:var(--shiki-color-text);">(jid</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">false</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">idm</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setIForgotManualReason</span><span style="color:var(--shiki-color-text);">(jid</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;&lt;Internal&gt; Rejected.&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">} </span><span style="color:var(--shiki-token-comment);">// else {</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// RuntimeDataManager.exitReadMode(id);</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// e.getPlayer().sendMessage(Util.getAndTranslate(&quot;msg.audit-out&quot;));</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// }</span></span></code></pre></div><p>这样使得输入的不是 <code>y</code> 或 <code>n</code> 时将自动跳过，而不是退出。</p><p>重新构建，运行。</p><p><img src="https://s2.loli.net/2023/07/07/9kFX6KYngmhsH5S.png" alt="OK_AUDIT.png"></p><p>其实退出审核只是因为只有一个请求啦，我按的是 <code>y</code> 哦~</p><p>我们用原来的身份登录，看看密码有没有被修改……</p><p>（数据库中的数据是正常的哦）</p><p><img src="https://s2.loli.net/2023/07/07/InrGtMUw8mEgSZH.png" alt="OK_RESET.png"></p><p>很好！修改后的密码登录也很正常。</p><p>但我们发现了两个新问题：</p><ul><li>玩家又开始回弹了</li><li>玩家仍旧可以输入命令，并使用 <code>/say</code> 聊天。</li></ul><p>我们需要解决它们。</p><h2 id="修复回弹-1" tabindex="-1">修复回弹 1 <a class="header-anchor" href="#修复回弹-1" aria-label="Permalink to &quot;修复回弹 1&quot;">​</a></h2><p>第一个问题实际上比较好解决。该错误位于处理玩家登录时设置的值。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-comment);">// EventHarmony 节选</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getPlayer</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setWalkSpeed</span><span style="color:var(--shiki-color-text);">((</span><span style="color:var(--shiki-token-keyword);">float</span><span style="color:var(--shiki-color-text);">) </span><span style="color:var(--shiki-token-constant);">0.0001</span><span style="color:var(--shiki-color-text);">);</span></span></code></pre></div><p><code>float</code> 的精度可能没有那么高，因此应将 <code>0.0001</code> 改为 <code>0.001</code>。</p><h2 id="修复聊天问题" tabindex="-1">修复聊天问题 <a class="header-anchor" href="#修复聊天问题" aria-label="Permalink to &quot;修复聊天问题&quot;">​</a></h2><p>这个问题比较微妙。</p><p>玩家聊天是 <code>AsyncPlayerChatEvent</code>，相当于「事后诸葛亮」，这时服务器已经进行了初步的处理，我们能做的只是阻止聊天信息的广播，而命令处理在这个事件之前已经完成了。</p><p>因此我们需要一个能够「及时汇报」的事件，这个事件就是 <code>PlayerCommandPreprocessEvent</code>，在命令处理前触发。</p><p>于是我们修改 <code>EventHarmony</code>，删除原来的有关命令处理，添加新的处理函数。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-comment);">// EventHarmony 节选</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">@</span><span style="color:var(--shiki-token-keyword);">EventHandler</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">void</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">onPlayerCommand(</span><span style="color:var(--shiki-token-keyword);">PlayerCommandPreprocessEvent</span><span style="color:var(--shiki-token-function);"> e)</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">RuntimeDataManager</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">hasRestrictUUID</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getPlayer</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getUniqueId</span><span style="color:var(--shiki-color-text);">())) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-comment);">// 没登录</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> msg </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getMessage</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setCancelled</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">true</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-comment);">// 先给你取消了</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">for</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);"> a </span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> allowCmd) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">msg</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">startsWith</span><span style="color:var(--shiki-color-text);">(a)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-comment);">// 如果发现命令可以使用，你是冤枉的，那就再复原</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setCancelled</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">false</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-keyword);">break</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><p>构建，重新运行。</p><p>测试后证明命令确实生效了，但<strong>回弹问题没有解决</strong>！</p><h2 id="修复回弹-2" tabindex="-1">修复回弹 2 <a class="header-anchor" href="#修复回弹-2" aria-label="Permalink to &quot;修复回弹 2&quot;">​</a></h2><p>事实上笔者一下就找到了问题所在。</p><p>我们会发现，玩家的登录是<strong>在玩家加入服务器之前的</strong>，也就是说，<code>PlayerLoginEvent</code> 发生时，玩家的实体还没有出现，因此我们应该将减速代码写在 <code>PlayerJoinEvent</code> 中。</p><p>既然不是 <code>float</code> 的问题，我们就提升一点精度吧。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-comment);">// EventHarmony 节选</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">@</span><span style="color:var(--shiki-token-keyword);">EventHandler</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">void</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">onPlayerJoin(</span><span style="color:var(--shiki-token-keyword);">PlayerJoinEvent</span><span style="color:var(--shiki-token-function);"> e)</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">originSpeed</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">put</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getPlayer</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getUniqueId</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getPlayer</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getWalkSpeed</span><span style="color:var(--shiki-color-text);">());</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getPlayer</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setWalkSpeed</span><span style="color:var(--shiki-color-text);">((</span><span style="color:var(--shiki-token-keyword);">float</span><span style="color:var(--shiki-color-text);">) </span><span style="color:var(--shiki-token-constant);">0.00001</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><p>运行测试，这个问题终于解决了！</p><h2 id="丢弃物品" tabindex="-1">丢弃物品 <a class="header-anchor" href="#丢弃物品" aria-label="Permalink to &quot;丢弃物品&quot;">​</a></h2><p>还有另外一个问题，那就是未登录的玩家可以丢弃物品。</p><p>如果有人逮到了一个创造模式的玩家，那就发财了，因为该玩家可以从创造背包中取出物品，然后丢弃。获取物品毫无限制。</p><p>其实，我们只要在 <code>PlayerDropItemEvent</code> 中检查玩家是否登录就好了。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-comment);">// EventHarmony 节选</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">@</span><span style="color:var(--shiki-token-keyword);">EventHandler</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">void</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">noDropItem(</span><span style="color:var(--shiki-token-keyword);">PlayerDropItemEvent</span><span style="color:var(--shiki-token-function);"> e)</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">RuntimeDataManager</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">hasRestrictUUID</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getPlayer</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getUniqueId</span><span style="color:var(--shiki-color-text);">())) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setCancelled</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">true</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getPlayer</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">sendMessage</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Util</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getAndTranslate</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;msg.hint&quot;</span><span style="color:var(--shiki-color-text);">));</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><h2 id="还有两个-bug" tabindex="-1">还有两个 Bug <a class="header-anchor" href="#还有两个-bug" aria-label="Permalink to &quot;还有两个 Bug&quot;">​</a></h2><p>如果玩家没登录就退出，会导致移动速度卡在 <code>0.00001</code>，这个数据保存在了存档里，以后玩家即使成功登录了，也无法正常移动，这可不行啊。</p><p>只要加两行就能解决这个问题了，写在 <code>PlayerQuitEvent</code> 中。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-comment);">// EventHarmony 节选</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getPlayer</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setWalkSpeed</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">originSpeed</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">get</span><span style="color:var(--shiki-color-text);">(id));</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">originSpeed</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">remove</span><span style="color:var(--shiki-color-text);">(id);</span></span></code></pre></div><p>然后还有一个 Bug，登录时似乎无法使用 <code>/iforgot</code> 和 <code>/ifg</code>，经检查，我忘了把它写到 <code>allowCmd</code> 中了。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-comment);">// EventHarmony 节选</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">final</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">List</span><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-color-text);">&gt; allowCmd </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Arrays</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">asList</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;/hl&quot;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;/L&quot;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;/l&quot;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;/reg&quot;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;/register&quot;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;/login&quot;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;/log&quot;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;/iforgot&quot;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;/ifg&quot;</span><span style="color:var(--shiki-color-text);">);</span></span></code></pre></div><p>这样就除掉了 Bug。</p><p>对了，在测试前一定要删除 <code>world</code>，<code>world_nether</code> 和 <code>world_end</code> 啊。</p><h2 id="还有一个小问题" tabindex="-1">还有一个小问题 <a class="header-anchor" href="#还有一个小问题" aria-label="Permalink to &quot;还有一个小问题&quot;">​</a></h2><p>我们的配置文件中有一处拼写错误：</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">hint-register</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;请输入 /hl &lt;密码&gt; &lt;再输入一次密码&gt; 进行或注册！&quot;</span></span></code></pre></div><p>这显得很不专业，因此我们改过来。</p><div class="info custom-block"><p class="custom-block-title"><img src="data:image/svg+xml,%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#39;0 0 16 16&#39; transform=&#39;scale(0.6)&#39; fill=&#39;%23fff&#39;%3E%3Cpath d=&#39;M9.1 0C10.2 0 10.7 0.7 10.7 1.6 10.7 2.6 9.8 3.6 8.6 3.6 7.6 3.6 7 3 7 2 7 1.1 7.7 0 9.1 0Z&#39;/%3E%3Cpath d=&#39;M5.8 16C5 16 4.4 15.5 5 13.2L5.9 9.1C6.1 8.5 6.1 8.2 5.9 8.2 5.7 8.2 4.6 8.6 3.9 9.1L3.5 8.4C5.6 6.6 7.9 5.6 8.9 5.6 9.8 5.6 9.9 6.6 9.5 8.2L8.4 12.5C8.2 13.2 8.3 13.5 8.5 13.5 8.7 13.5 9.6 13.2 10.4 12.5L10.9 13.2C8.9 15.2 6.7 16 5.8 16Z&#39;/%3E%3C/svg%3E" style="background-color:#0B87DA;clip-path:circle();" width="24px" height="24px"> <strong>这种小事也要强调吗</strong>？</p><p><strong>是的</strong>！往往用户拿到一个插件，如果配置文件写得清晰简洁，用户会觉得这个插件比较好，而如果配置文件有像上面这样的拼写错误，用户会觉得「这是什么垃圾」，会影响使用体验。</p></div><p>因此，为了方便服主设置颜色，我们把颜色表附在配置文件中……</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-comment);"># 颜色及样式表</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"># 使用 &amp; 代替 § 指定样式</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"># &amp;0 黑色</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"># &amp;1 深蓝</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"># &amp;2 深绿</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"># &amp;3 湖蓝</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"># &amp;4 深红</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"># &amp;5 紫色</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"># &amp;6 金色</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"># &amp;7 灰色</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"># &amp;8 深灰</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"># &amp;9 蓝色</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"># &amp;a 绿色</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"># &amp;b 天蓝</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"># &amp;c 红色</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"># &amp;d 粉红</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"># &amp;e 黄色</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"># &amp;f 白色</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"># &amp;k 乱码字符</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"># &amp;l 加粗</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"># &amp;m 划掉</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"># &amp;n 下划线</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"># &amp;o 斜体</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"># &amp;r 全部重置</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"># 设置的样式能够应用到接着这些消息后的文字，例如 audit-uuid，请小心使用！</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"># 颜色代码必须在格式代码之前，并且修改颜色时必须再写一遍格式代码！！！</span></span></code></pre></div><h2 id="boom" tabindex="-1">BOOM！ <a class="header-anchor" href="#boom" aria-label="Permalink to &quot;BOOM！&quot;">​</a></h2><p>打开 Minecraft，进入服务器，发送 <code>/hl</code>。</p><p>发生什么了？</p><p>恭喜！这个账号再也无法登录啦！看下面的图片！Successful Hacking Attempt！（大雾）</p><p><img src="https://s2.loli.net/2023/07/24/QmsqdDoGT4r7z6i.png" alt="BUG-1.png"></p><p>相信你已经从控制台上看出一些东西来了，我们没有检查参数的个数。</p><p>在 <code>onLoginCommand</code> 方法里加上下面代码即可：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">args</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">length</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">&lt;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">false</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><h2 id="未完待续" tabindex="-1">未完待续 <a class="header-anchor" href="#未完待续" aria-label="Permalink to &quot;未完待续&quot;">​</a></h2><p>对了？错了！</p><p>通过观察 Minecraft 服务端的标准输入和输出，我们成功解决了一些漏洞。</p><p>但是我们的插件尚有许多漏洞未曾修复，在下一章节，我们将利用 IDEA 的调试功能，完成一些复杂的调试。</p>`,183),l=[e];function r(p,i,c,k,y,h){return n(),a("div",null,l)}const d=s(t,[["render",r]]);export{u as __pageData,d as default};
