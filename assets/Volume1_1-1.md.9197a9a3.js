import{_ as a,o as t,c as e,S as r}from"./chunks/framework.7f03344f.js";const f=JSON.parse('{"title":"1-1 从 Minecraft 到 Bukkit","description":"","frontmatter":{},"headers":[],"relativePath":"Volume1/1-1.md","filePath":"docs/Volume1/1-1.md","lastUpdated":1698403164000}'),o={name:"Volume1/1-1.md"},n=r('<h1 id="_1-1-从-minecraft-到-bukkit" tabindex="-1">1-1 从 Minecraft 到 Bukkit <a class="header-anchor" href="#_1-1-从-minecraft-到-bukkit" aria-label="Permalink to &quot;1-1 从 Minecraft 到 Bukkit&quot;">​</a></h1><h2 id="minecraft-的-c-s-架构" tabindex="-1">Minecraft 的 C/S 架构 <a class="header-anchor" href="#minecraft-的-c-s-架构" aria-label="Permalink to &quot;Minecraft 的 C/S 架构&quot;">​</a></h2><h3 id="多人游戏的运作" tabindex="-1">多人游戏的运作 <a class="header-anchor" href="#多人游戏的运作" aria-label="Permalink to &quot;多人游戏的运作&quot;">​</a></h3><p>如果你经常玩 Minecraft 多人游戏，你可能会问一个问题：<strong>为什么我每次都要输入一个域名呢</strong>？</p><p>域名被解析到一个 IP 地址上，一个 IP 地址代表了一个<strong>服务器</strong>，服务器也是一台计算机。</p><p>在你（玩家）的电脑上运作的那个叫做<strong>客户端</strong>，而那个远在几千公里之外的计算机……就叫<strong>服务器</strong>。</p><p>服务器是在多人游戏中<strong>用来交换玩家间数据</strong>的。客户端把数据发送给服务器，服务器把数据发送给其它客户端。</p><h3 id="服务端世界的复制品" tabindex="-1">服务端世界的复制品 <a class="header-anchor" href="#服务端世界的复制品" aria-label="Permalink to &quot;服务端世界的复制品&quot;">​</a></h3><p>当一个 Minecraft 服务器开始运转时，那里生成了一个世界。</p><p>客户端加入游戏时，将世界的相关信息下载下来（相当于复制一份），并在本地运转起来。</p><p>当服务端或客户端发生了什么事情时，客户端（或服务端）会使用一种名为<strong>数据包</strong>的东西传递信息，收到数据包的一方根据其中的内容，更新自己的那个世界。</p><h2 id="插件运行的原理" tabindex="-1">插件运行的原理 <a class="header-anchor" href="#插件运行的原理" aria-label="Permalink to &quot;插件运行的原理&quot;">​</a></h2><h3 id="利用原版的机制" tabindex="-1">利用原版的机制 <a class="header-anchor" href="#利用原版的机制" aria-label="Permalink to &quot;利用原版的机制&quot;">​</a></h3><p>从未接触过插件开发的人，可能觉得插件像魔法一样。</p><blockquote><p>天呐！这种命令是怎么实现的嘛！怎么会有这样的附魔呢？为什么没登录我就不能动呢？</p></blockquote><p>实际上插件不是什么魔法，它只是利用了原版的机制而已。</p><p>客户端执行一些操作之前（如显示物品），都会向服务端请求相关信息（如物品附魔），<strong>一旦服务端有机会干预客户端，插件就有了用武之地</strong>。</p><p>插件程序发送对应的数据包，或者修改服务端发送的数据，蒙了客户端一把，让客户端显示了想要的信息。</p><p>形象地说，有人给你寄一封信，结果邮局被插件劫持了，把那封信的内容改了一下，再发给你，你会知道吗？</p><p>如果你照做了（就像 Minecraft 客户端一样），你就被「骗」了，这个效果就相当于插件控制客户端。</p>',20),i=[n];function s(c,p,l,h,d,_){return t(),e("div",null,i)}const m=a(o,[["render",s]]);export{f as __pageData,m as default};
