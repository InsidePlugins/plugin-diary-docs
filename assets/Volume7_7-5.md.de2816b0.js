import{_ as s,o as n,c as o,S as a}from"./chunks/framework.7f03344f.js";const u=JSON.parse('{"title":"7-5 附魔、耐久与属性修改","description":"","frontmatter":{},"headers":[],"relativePath":"Volume7/7-5.md","filePath":"docs/Volume7/7-5.md","lastUpdated":1698403164000}'),t={name:"Volume7/7-5.md"},e=a(`<h1 id="_7-5-附魔、耐久与属性修改" tabindex="-1">7-5 附魔、耐久与属性修改 <a class="header-anchor" href="#_7-5-附魔、耐久与属性修改" aria-label="Permalink to &quot;7-5 附魔、耐久与属性修改&quot;">​</a></h1><p>理论部分的最后一章里，我们来讲一些关于物品之前没讲完的内容。</p><p>首先，让我们从一个 <code>ItemStack</code> 开始。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">ItemStack</span><span style="color:var(--shiki-color-text);"> item </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">ItemStack(</span><span style="color:var(--shiki-token-constant);">Material</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">DIAMOND_AXE</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-color-text);">;</span></span></code></pre></div><h2 id="附魔" tabindex="-1">附魔 <a class="header-anchor" href="#附魔" aria-label="Permalink to &quot;附魔&quot;">​</a></h2><p>要为物品添加附魔相当简单，只看代码你应该也看得懂。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">ItemMeta</span><span style="color:var(--shiki-color-text);"> im </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">item</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getItemMeta</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">im</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">addEnchant</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Enchantment</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">DURABILITY</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">300</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">true</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// 耐久 300</span></span></code></pre></div><p><code>addEnchant</code> 方法这样工作：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">boolean</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">addEnchant(</span><span style="color:var(--shiki-token-keyword);">Enchantment</span><span style="color:var(--shiki-token-function);"> ench</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-token-function);"> level</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-keyword);">boolean</span><span style="color:var(--shiki-token-function);"> ignoreLimit)</span></span></code></pre></div><p><code>ench</code> 只能取 <code>Enchantment</code> 类中的值，其中包括了所有的原版附魔。</p><p><code>level</code> 是附魔的等级。</p><p><code>ignoreLimit</code> 表示<strong>是否突破附魔等级上限</strong>，比如上面我们设置的是「耐久 300」，如果不设置 <code>ignoreLimit</code> 为 <code>true</code>，就会被限制到「耐久 III」。</p><p>最后记得返还：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-constant);">item</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setItemMeta</span><span style="color:var(--shiki-color-text);">(im);</span></span></code></pre></div><h2 id="耐久" tabindex="-1">耐久 <a class="header-anchor" href="#耐久" aria-label="Permalink to &quot;耐久&quot;">​</a></h2><p>这里的耐久不是上面的耐久，这里的耐久指的是物品的<strong>耐久度</strong>，例如钻石镐的耐久度是 1561，即可以挖掘 1561 个方块。</p><p>在 Bukkit 中，我们的思路得换过来。Bukkit 不是记录「物品还有多少耐久度」，而是记录「已经损失了多少耐久度」。</p><p>要修改耐久度，我们可以这么做：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">ItemMeta</span><span style="color:var(--shiki-color-text);"> im </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">item</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getItemMeta</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (im </span><span style="color:var(--shiki-token-keyword);">instanceof</span><span style="color:var(--shiki-color-text);"> Damageable) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">Damageable</span><span style="color:var(--shiki-color-text);"> dmg </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> (Damageable) im;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">dmg</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setDamage</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">100</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">item</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setItemMeta</span><span style="color:var(--shiki-color-text);">((ItemMeta) dmg);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><div class="danger custom-block"><p class="custom-block-title"><img src="data:image/svg+xml,%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#39;0 0 16 16&#39; transform=&#39;scale(0.6)&#39; fill=&#39;%23fff&#39;%3E%3Cpath d=&#39;M10 14C10 15.1 9.1 16 8 16 6.9 16 6 15.1 6 14 6 12.9 6.9 12 8 12 9.1 12 10 12.9 10 14Z&#39;/%3E%3Cpath d=&#39;M10 1.6C10 1.2 9.8 0.9 9.6 0.7 9.2 0.3 8.6 0 8 0 7.4 0 6.8 0.2 6.5 0.6 6.2 0.9 6 1.2 6 1.6 6 1.7 6 1.8 6 1.9L6.8 9.6C6.9 9.9 7 10.1 7.2 10.2 7.4 10.4 7.7 10.5 8 10.5 8.3 10.5 8.6 10.4 8.8 10.3 9 10.1 9.1 9.9 9.2 9.6L10 1.9C10 1.8 10 1.7 10 1.6Z&#39;/%3E%3C/svg%3E" style="background-color:#DA0B50;clip-path:circle();" width="24px" height="24px"> <strong>当心同名</strong>！</p><p>这里的 <code>Damageable</code> 是 <code>org.bukkit.inventory.meta.Damageable</code>，不是 <code>org.bukkit.entity.Damageable</code>！</p></div><p>首先我们判断获得的 <code>ItemMeta</code> 是不是 <code>Damageable</code> 的，如果不是，表明它没有耐久度（如火把）。</p><p>如果有，我们通过一次强制类型转换将其转换为 <code>Damageable</code> 对象。</p><p><code>setDamage</code> 方法用于设置已经损失的耐久度，<code>setDamage(100)</code> 表示损失 100 耐久度，对于钻石镐而言，那就是「还可以挖掘 1561 - 100 = 1461」个方块，以此类推。如果设置超过 1561，物品即被损坏。</p><p>重复进行 <code>setDamage</code> 没有效果，因为它是「设置」，不是「累加」，如果要累加，需要使用：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-constant);">dmg</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setDamage</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">dmg</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getDamage</span><span style="color:var(--shiki-color-text);">() </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">100</span><span style="color:var(--shiki-color-text);">);</span></span></code></pre></div><p>最后，我们进行一次强制类型转换，将设置耐久后的 <code>ItemMeta</code> 返还回去。</p><p>由于 <code>Damageable</code> 接口中并没有 <code>setLore</code> 这样的操作，因此不太好用，在设置耐久后应该重新转换为 <code>ItemMeta</code> 再进行后续处理。</p><hr><p>如果要设置物品不可破坏，没必要监听事件并且取消或者恢复耐久，可以直接使用：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-constant);">im</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setUnbreakable</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">true</span><span style="color:var(--shiki-color-text);">);</span></span></code></pre></div><p>就可以了。</p><h2 id="属性修改" tabindex="-1">属性修改 <a class="header-anchor" href="#属性修改" aria-label="Permalink to &quot;属性修改&quot;">​</a></h2><p>要修改诸如攻击速度，玩家移动速度时，可以避免使用 NBT 或者 <code>setWalkSpeed</code> 这样麻烦的方法，我们可以使用<strong>属性修改器</strong>（<code>AttributeModifier</code>）。</p><p>一个 <code>AttributeModifier</code> 代表的是「一种算法」，包括了「何时生效」、「数量」、「计算类型」等等。</p><p>下面我们以玩家用副手持有我们的钻石剑时提升攻击速度、移动速度和伤害为例，演示 <code>AttributeModifier</code> 的使用方法：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">ItemStack</span><span style="color:var(--shiki-color-text);"> item </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">ItemStack(</span><span style="color:var(--shiki-token-constant);">Material</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">DIAMOND_SWORD</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">AttributeModifier</span><span style="color:var(--shiki-color-text);"> am </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">AttributeModifier(</span><span style="color:var(--shiki-token-constant);">UUID</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">randomUUID()</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;内部名字&quot;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-constant);">2.2</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-constant);">AttributeModifier</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">Operation</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">ADD_SCALAR</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-constant);">EquipmentSlot</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">OFF_HAND</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">AttributeModifier</span><span style="color:var(--shiki-color-text);"> am2 </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">AttributeModifier(</span><span style="color:var(--shiki-token-constant);">UUID</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">randomUUID()</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;提升移动速度&quot;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-constant);">0.2</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-constant);">AttributeModifier</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">Operation</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">MULTIPLY_SCALAR_1</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-constant);">EquipmentSlot</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">OFF_HAND</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">AttributeModifier</span><span style="color:var(--shiki-color-text);"> am3 </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">AttributeModifier(</span><span style="color:var(--shiki-token-constant);">UUID</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">randomUUID()</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;提升攻击速度&quot;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-constant);">1.2</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-constant);">AttributeModifier</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">Operation</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">ADD_NUMBER</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-constant);">EquipmentSlot</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">OFF_HAND</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">ItemMeta</span><span style="color:var(--shiki-color-text);"> im </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">item</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getItemMeta</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">im</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">addAttributeModifier</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Attribute</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">GENERIC_ATTACK_DAMAGE</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> am);</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">im</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">addAttributeModifier</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Attribute</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">GENERIC_MOVEMENT_SPEED</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> am2);</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">im</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">addAttributeModifier</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Attribute</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">GENERIC_ATTACK_SPEED</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> am3);</span></span></code></pre></div><p><code>AttributeModifier</code> 的构造方法如下：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-function);">AttributeModifier(</span></span>
<span class="line"><span style="color:var(--shiki-token-function);">    </span><span style="color:var(--shiki-token-keyword);">UUID</span><span style="color:var(--shiki-token-function);"> id</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-token-function);">    </span><span style="color:var(--shiki-token-keyword);">String</span><span style="color:var(--shiki-token-function);"> name</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-token-function);">    </span><span style="color:var(--shiki-token-keyword);">double</span><span style="color:var(--shiki-token-function);"> amound</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span></span>
<span class="line"><span style="color:var(--shiki-token-function);">    </span><span style="color:var(--shiki-token-constant);">AttributeModifier</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">Operation</span><span style="color:var(--shiki-token-function);"> operation</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-token-function);">    @</span><span style="color:var(--shiki-token-keyword);">Nullable</span></span>
<span class="line"><span style="color:var(--shiki-token-function);">    </span><span style="color:var(--shiki-token-keyword);">EquipmentSlot</span><span style="color:var(--shiki-token-function);"> slot</span></span>
<span class="line"><span style="color:var(--shiki-token-function);">)</span></span></code></pre></div><p>五个参数，最后一个可省略，它们分别是：</p><ul><li>这个修改器的 ID，通常使用 <code>UUID.randomUUID</code> 随机生成一个</li><li>这个修改器的名字，和记分板一样，只是内部名字，不会给玩家显示</li><li>数量，这个数值的效果取决于下面的操作</li><li>操作，必须取 <code>AttributeModifier.Operation</code> 中的值，可能的取值有三种： <ul><li><code>ADD_NUMBER</code> 最终加算，直接将指定属性添加指定的值</li><li><code>MULTIPLY_SCALAR_1</code> 将指定的数值加上 1 后最终乘算，<code>0.2</code> 相当于 + 20%（1.2 倍），<code>1.2</code> 则相当于 + 120%（2.2 倍）</li><li><code>ADD_SCALAR</code> 直接乘算指定的数值，<code>0.4</code> 相当于 - 60%，<code>1.5</code> 相当于 + 50%</li></ul></li><li>生效区域，可选，只能取 <code>EquipmentSlot</code> 中的值，包括： <ul><li><code>HAND</code> 主手</li><li><code>OFF_HAND</code> 副手</li><li><code>FEET</code> 脚上</li><li><code>LEGS</code> 腿上</li><li><code>CHEST</code> 身上</li><li><code>HEAD</code> 头上</li></ul></li></ul><p>上面我虽然用了三种不同的算法，但并不是说对应的属性就只能用这种算法，乘算和加算的选取根据插件的设计来决定就好啦。</p><p><code>addAttributeModifier</code> 将属性「应用」到物品上。</p><p>第二个参数就是刚刚创建的 <code>AttributeModifier</code>，第一个参数是要修改的属性，只能取 <code>Attribute</code> 中的值，可能的取值很多，这里就不一一列举了，如 <code>GENERIC_MAX_HEALTH</code> 更改最大生命值（「+ XXX 生命上限」），<code>GENERIC_ARMOR</code> 设置盔甲量（「+ XXX 盔甲」）等等，这里我们分别设置了攻击伤害，攻击速度和移动速度。</p><p>这里的 <code>AttributeModifier</code> 实际上就和游戏中的「在 XX 时：XXX」一样，看图：</p><p><img src="https://s2.loli.net/2022/04/15/CcxDsHW8PTFSbLw.png" alt="AMF.png"></p><p>这里实际上就有两个 <code>AttributeModifier</code>，一个修改攻击速度，一个修改攻击伤害，并且只有在主手（<code>EquipmentSlot.HAND</code>）才有效。</p><p>虽然上面我创建了三个 <code>AtttributeModifier</code>，但实际上你也可以只用一个，只是我习惯分别设置。</p><p>最后别忘了返还！</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-constant);">item</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setItemMeta</span><span style="color:var(--shiki-color-text);">(im);</span></span></code></pre></div><p>这样我们就做好了一个拿在副手就可以加速的钻石剑。</p><hr><p>笔者认为，到目前为止，你已经具备了开发一个插件需要的全部基础知识，接下来只需要合理利用它们，就可以做出好的插件来了。当然，你还需要学习其它的一些插件，诸如权限系统之类的，但由于这些插件不是 Bukkit 提供的，本教程无法涵盖，还请见谅。你可以查阅它们各自的文档来获取更多信息。</p>`,52),i=[e];function l(p,r,c,k,v,y){return n(),o("div",null,i)}const d=s(t,[["render",l]]);export{u as __pageData,d as default};
