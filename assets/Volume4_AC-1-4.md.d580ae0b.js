import{_ as n,o as a,c as t,S as o,k as s}from"./chunks/framework.7f03344f.js";const g=JSON.parse('{"title":"AC-1-4 调试 HarmonyAuth SMART Part 2","description":"","frontmatter":{},"headers":[],"relativePath":"Volume4/AC-1-4.md","filePath":"docs/Volume4/AC-1-4.md","lastUpdated":1698403164000}'),l={name:"Volume4/AC-1-4.md"},e=o(`<h1 id="ac-1-4-调试-harmonyauth-smart-part-2" tabindex="-1">AC-1-4 调试 HarmonyAuth SMART Part 2 <a class="header-anchor" href="#ac-1-4-调试-harmonyauth-smart-part-2" aria-label="Permalink to &quot;AC-1-4 调试 HarmonyAuth SMART Part 2&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title"><img src="data:image/svg+xml,%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#39;0 0 1028 1024&#39; transform=&#39;scale(0.6)&#39; fill=&#39;%23fff&#39;%3E%3Cpath d=&#39;M1018.319924 112.117535q4.093748 9.210934 6.652341 21.492179t2.558593 25.585928-5.117186 26.609365-16.374994 25.585928q-12.281245 12.281245-22.003898 21.492179t-16.886712 16.374994q-8.187497 8.187497-15.351557 14.32812l-191.382739-191.382739q12.281245-11.257808 29.167958-27.121083t28.144521-25.074209q14.32812-11.257808 29.679676-15.863275t30.191395-4.093748 28.656239 4.605467 24.050772 9.210934q21.492179 11.257808 47.589826 39.402329t40.425766 58.847634zM221.062416 611.554845q6.140623-6.140623 28.656239-29.167958t56.289041-56.80076l74.710909-74.710909 82.898406-82.898406 220.038979-220.038979 191.382739 192.406177-220.038979 220.038979-81.874969 82.898406q-40.937484 39.914047-73.687472 73.175753t-54.242167 54.753885-25.585928 24.562491q-10.234371 9.210934-23.539054 19.445305t-27.632802 16.374994q-14.32812 7.16406-41.960921 17.398431t-57.824197 19.957024-57.312478 16.886712-40.425766 9.210934q-27.632802 3.070311-36.843736-8.187497t-5.117186-37.867173q2.046874-14.32812 9.722653-41.449203t16.374994-56.289041 16.886712-53.730448 13.304682-33.773425q6.140623-14.32812 13.816401-26.097646t22.003898-26.097646z&#39;/%3E%3C/svg%3E" style="background-color:#057E3D;clip-path:circle();" width="24px" height="24px"> <strong>编者注</strong></p><p>本节内容由 <a href="https://github.com/CaveNightingale" target="_blank" rel="noreferrer">CaveNightingale</a> 撰写，<a href="https://github.com/William-Shi233" target="_blank" rel="noreferrer">William_Shi</a> 校订。</p></div><h2 id="账号报废" tabindex="-1">账号报废 <a class="header-anchor" href="#账号报废" aria-label="Permalink to &quot;账号报废&quot;">​</a></h2><p>真的对了？又错了！</p><p><img src="https://s2.loli.net/2023/07/24/Pkzg2ZbfevIhURj.png" alt="BUG.png"></p><p>只要知道了一位玩家下线时所处的坐标，再在该位置建造一个下界传送门，就能让这个账号无法登录。因为依据原版游戏设定，当玩家处于下界传送门方块中时，无法打开聊天窗口。想要执行登录指令，就必须离开传送门。但我们的插件又禁止了未登录的玩家移动。这下就形成了死循环，玩家会被卡死在传送门内。</p><p>一般的处理方式是，在玩家上线时，将其传送到一个安全的位置，以排除下界传送门的影响。</p><p>来吧。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-comment);">// Check if player can open chat here</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">boolean</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">isSafe(@</span><span style="color:var(--shiki-token-keyword);">Nonnull</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-keyword);">Location</span><span style="color:var(--shiki-token-function);"> loc)</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">loc</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getBlock</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getType</span><span style="color:var(--shiki-color-text);">() </span><span style="color:var(--shiki-token-keyword);">!=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Material</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">NETHER_PORTAL</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">final</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Map</span><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-keyword);">UUID</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Location</span><span style="color:var(--shiki-color-text);">&gt; originalLocation </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">HashMap</span><span style="color:var(--shiki-color-text);">&lt;&gt;();</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">final</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);"> skyHeight </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">512</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">final</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);"> maxSearchVolume </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">256</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">final</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Vector</span><span style="color:var(--shiki-color-text);">[] directions </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">Vector(</span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">Vector(</span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">Vector(</span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">Vector(</span><span style="color:var(--shiki-token-keyword);">-</span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">Vector(</span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-keyword);">-</span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">Vector(</span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-keyword);">-</span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// Let player log in in a safe place</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">void</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">ensureSafety(@</span><span style="color:var(--shiki-token-keyword);">Nonnull</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-keyword);">Player</span><span style="color:var(--shiki-token-function);"> player)</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-function);">isSafe(</span><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getLocation())</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// If the position is unsafe, first try to search nearby</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">ArrayDeque</span><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-keyword);">Location</span><span style="color:var(--shiki-color-text);">&gt; queue </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">ArrayDeque</span><span style="color:var(--shiki-color-text);">&lt;&gt;();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">HashSet</span><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-keyword);">Location</span><span style="color:var(--shiki-color-text);">&gt; visited </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">HashSet</span><span style="color:var(--shiki-color-text);">&lt;&gt;();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">queue</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">addLast</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getLocation</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">toBlockLocation</span><span style="color:var(--shiki-color-text);">());</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">Location</span><span style="color:var(--shiki-color-text);"> solution </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">while</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">!</span><span style="color:var(--shiki-token-constant);">queue</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">isEmpty</span><span style="color:var(--shiki-color-text);">() </span><span style="color:var(--shiki-token-keyword);">&amp;&amp;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">visited</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">size</span><span style="color:var(--shiki-color-text);">() </span><span style="color:var(--shiki-token-keyword);">&lt;=</span><span style="color:var(--shiki-color-text);"> maxSearchVolume) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">Location</span><span style="color:var(--shiki-color-text);"> loc </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">queue</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">removeFirst</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">visited</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">contains</span><span style="color:var(--shiki-color-text);">(loc)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">continue</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">visited</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">add</span><span style="color:var(--shiki-color-text);">(loc);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-function);">isSafe(loc)</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            solution </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> loc;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">break</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">for</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">Vector</span><span style="color:var(--shiki-color-text);"> direction </span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> directions) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">queue</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">addLast</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">loc</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">clone</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">add</span><span style="color:var(--shiki-color-text);">(direction));</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// Or else we may fall back to logging in in the sky</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (solution </span><span style="color:var(--shiki-token-keyword);">==</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">Location</span><span style="color:var(--shiki-color-text);"> loc </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getLocation</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">clone</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">loc</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setY</span><span style="color:var(--shiki-color-text);">(skyHeight);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        solution </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> loc;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">originalLocation</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">put</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getUniqueId</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getLocation</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">clone</span><span style="color:var(--shiki-color-text);">());</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">teleport</span><span style="color:var(--shiki-color-text);">(solution);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// Restore player&#39;s location</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">void</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">restoreLocation(@</span><span style="color:var(--shiki-token-keyword);">Nonnull</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-keyword);">Player</span><span style="color:var(--shiki-token-function);"> player)</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">Bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">isPrimaryThread</span><span style="color:var(--shiki-color-text);">()) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">Location</span><span style="color:var(--shiki-color-text);"> loc </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">originalLocation</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">remove</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getUniqueId</span><span style="color:var(--shiki-color-text);">());</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (loc </span><span style="color:var(--shiki-token-keyword);">!=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">teleport</span><span style="color:var(--shiki-color-text);">(loc);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">Bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getScheduler</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">runTask</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">HarmonyAuthSMART</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">instance</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> () </span><span style="color:var(--shiki-token-keyword);">-&gt;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">restoreLocation(player)</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><p><code>ensureSafety</code> 方法用广度优先算法来寻找玩家近处的安全位置，然后将玩家传送到那里。如果在 256 次尝试以后仍寻找不到安全位置，就把玩家传送到自身正上方 Y = 512 的地方。由于原版游戏有最大建筑高度限制，这一高度不可能有下界传送门方块存在，是安全的。</p><p><code>restoreLocation</code> 方法用于将玩家传送回原来的位置，以免登录后从高空坠落或迷路。</p><p>接着，在 <code>PlayerJoinEvent</code> 监听器中调用 <code>ensureSafety</code> 方法，在登录成功或者玩家退出游戏时调用 <code>restoreLocation</code> 方法。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">void</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">onPlayerJoin(</span><span style="color:var(--shiki-token-keyword);">PlayerJoinEvent</span><span style="color:var(--shiki-token-function);"> e)</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">System</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">out</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">println</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;Walk speed set from &quot;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getPlayer</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getWalkSpeed</span><span style="color:var(--shiki-color-text);">());</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">originSpeed</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">put</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getPlayer</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getUniqueId</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getPlayer</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getWalkSpeed</span><span style="color:var(--shiki-color-text);">());</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getPlayer</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setWalkSpeed</span><span style="color:var(--shiki-color-text);">((</span><span style="color:var(--shiki-token-keyword);">float</span><span style="color:var(--shiki-color-text);">) </span><span style="color:var(--shiki-token-constant);">0.00001</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-function);">ensureSafety(</span><span style="color:var(--shiki-token-constant);">e</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getPlayer())</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><p>有多处代码需要添加 <code>ensureSafety</code> 和 <code>restoreLocation</code>，此处略过。</p><div class="danger custom-block"><p class="custom-block-title"><img src="data:image/svg+xml,%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#39;0 0 16 16&#39; transform=&#39;scale(0.6)&#39; fill=&#39;%23fff&#39;%3E%3Cpath d=&#39;M10 14C10 15.1 9.1 16 8 16 6.9 16 6 15.1 6 14 6 12.9 6.9 12 8 12 9.1 12 10 12.9 10 14Z&#39;/%3E%3Cpath d=&#39;M10 1.6C10 1.2 9.8 0.9 9.6 0.7 9.2 0.3 8.6 0 8 0 7.4 0 6.8 0.2 6.5 0.6 6.2 0.9 6 1.2 6 1.6 6 1.7 6 1.8 6 1.9L6.8 9.6C6.9 9.9 7 10.1 7.2 10.2 7.4 10.4 7.7 10.5 8 10.5 8.3 10.5 8.6 10.4 8.8 10.3 9 10.1 9.1 9.9 9.2 9.6L10 1.9C10 1.8 10 1.7 10 1.6Z&#39;/%3E%3C/svg%3E" style="background-color:#DA0B50;clip-path:circle();" width="24px" height="24px"> <strong>这些代码有问题，待会我们要调试它</strong>。</p></div><p>再次启动服务端！</p><p>测试发现，即使我们在传送门中退出游戏，再上线时登录插件也没有把我们传送到安全的地方。真令人失望……</p><p>查看服务端后台，并没有报错告诉我们哪里出错了。该怎么办？</p><p>这时候，一批专业的工具就派上用场了。</p><h3 id="用「idea」来调试插件" tabindex="-1">用「IDEA」来调试插件 <a class="header-anchor" href="#用「idea」来调试插件" aria-label="Permalink to &quot;用「IDEA」来调试插件&quot;">​</a></h3><p>IDEA 提供了调试器（Debugger），我们可以用它来调试插件。在调试前，要将调试器附加（Attach）到 Minecraft 服务端的进程上。</p><p>首先，要在启动服务端时设置 Java 代理。之前，我们用 <code>java -jar spigot-1.16.5.jar</code> 命令来开启服务端。现在要改成这样（记得把 <code>spigot-1.16.5.jar</code> 换成你的服务端核心文件名）：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-function);">java</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string);">-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8342</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string);">-jar</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string);">spigot-1.16.5.jar</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title"><img src="data:image/svg+xml,%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#39;0 0 16 16&#39; transform=&#39;scale(0.6)&#39; fill=&#39;%23fff&#39;%3E%3Cpath d=&#39;M9.1 0C10.2 0 10.7 0.7 10.7 1.6 10.7 2.6 9.8 3.6 8.6 3.6 7.6 3.6 7 3 7 2 7 1.1 7.7 0 9.1 0Z&#39;/%3E%3Cpath d=&#39;M5.8 16C5 16 4.4 15.5 5 13.2L5.9 9.1C6.1 8.5 6.1 8.2 5.9 8.2 5.7 8.2 4.6 8.6 3.9 9.1L3.5 8.4C5.6 6.6 7.9 5.6 8.9 5.6 9.8 5.6 9.9 6.6 9.5 8.2L8.4 12.5C8.2 13.2 8.3 13.5 8.5 13.5 8.7 13.5 9.6 13.2 10.4 12.5L10.9 13.2C8.9 15.2 6.7 16 5.8 16Z&#39;/%3E%3C/svg%3E" style="background-color:#0B87DA;clip-path:circle();" width="24px" height="24px"> <strong>关键参数的解释</strong></p><p><code>suspend=n</code>: 不等待调试器连接，直接启动服务端。若需要等待 IDEA 的调试器连接再启动服务端，则将其改为 <code>suspend=y</code>。 <code>port=8342</code>: 调试器连接的端口号。没有什么讲究，不要与其它程序冲突即可。8342 是随便写的。</p></div><div class="danger custom-block"><p class="custom-block-title"><img src="data:image/svg+xml,%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#39;0 0 16 16&#39; transform=&#39;scale(0.6)&#39; fill=&#39;%23fff&#39;%3E%3Cpath d=&#39;M10 14C10 15.1 9.1 16 8 16 6.9 16 6 15.1 6 14 6 12.9 6.9 12 8 12 9.1 12 10 12.9 10 14Z&#39;/%3E%3Cpath d=&#39;M10 1.6C10 1.2 9.8 0.9 9.6 0.7 9.2 0.3 8.6 0 8 0 7.4 0 6.8 0.2 6.5 0.6 6.2 0.9 6 1.2 6 1.6 6 1.7 6 1.8 6 1.9L6.8 9.6C6.9 9.9 7 10.1 7.2 10.2 7.4 10.4 7.7 10.5 8 10.5 8.3 10.5 8.6 10.4 8.8 10.3 9 10.1 9.1 9.9 9.2 9.6L10 1.9C10 1.8 10 1.7 10 1.6Z&#39;/%3E%3C/svg%3E" style="background-color:#DA0B50;clip-path:circle();" width="24px" height="24px"> <strong>请设置代理</strong>！</p><p>即使不加 <code>-javaagent</code> 参数，不设置代理，IDEA 也可以转而利用 Root 权限，通过 <code>PTRACE</code> 系统调用（System Call）附加到被调试进程上。但是不建议这样做，因为：</p><ul><li>没有 Java Agent，调试器的大部分功能都无法使用。</li><li>Root 权限应当严格控制，不能轻易授予。</li></ul></div><p>打开 IDEA 顶部的「Run」菜单，点击「Attach to Process」，然后在弹出列表选择你的服务端进程。此时不应有申请 Root 授权的弹窗，如有，则说明你没能设置好代理。</p><p>如果你按照上述步骤操作，那么现在 IDEA 就应该进入到调试模式了。</p><h3 id="初识断点" tabindex="-1">初识断点 <a class="header-anchor" href="#初识断点" aria-label="Permalink to &quot;初识断点&quot;">​</a></h3><p>在代码的左侧、行号的右侧，那一小片空白处点击，会出现一个红色的圆点，这就是断点。执行到断点所在的那一行时，程序会暂停，等待你的调试操作。</p><p>打断点，是开发者的基本能力。不仅 Java 程序可以打断点调试，其它很多语言也可以。就插件开发而言，在程序暂停以后，你便接管了整个服务端。你可以让程序恢复正常运转，也可以让程序向下跑一行后暂停。你可以让服务端开始运行一个方法，或强制 <code>return</code> 退出当前方法。你可以查看各个变量在暂停那一刻的实际值，还可以输入一段表达式并要求服务端当场计算其结果。总之，打上了断点，服务端就在你的掌握之中。</p><h3 id="关闭看门狗-watchdog-线程" tabindex="-1">关闭看门狗（WatchDog）线程 <a class="header-anchor" href="#关闭看门狗-watchdog-线程" aria-label="Permalink to &quot;关闭看门狗（WatchDog）线程&quot;">​</a></h3><p>看门狗是一个特殊的线程，它时刻检查服务端主线程是否在正常运转。如果主线程卡住了，看门狗会让服务端直接崩溃。</p><p>但是断点调试，就是要让线程卡住。在这种暂停状态下调试。为了防止看门狗干扰，我们需要把它关掉。</p><p>找到 <code>org.spigotmc.WatchdogThread#run</code> 方法，在 <code>while</code> 循环内第一行打个断点。执行到此处时，在 IDEA 调试窗口左侧的栈帧中点击右键，唤出菜单，选择「Force Return」，然后点左边的继续（绿色三角加一竖线）。</p><p>这样看门狗就失去作用了。</p><h3 id="初识调试界面" tabindex="-1">初识调试界面 <a class="header-anchor" href="#初识调试界面" aria-label="Permalink to &quot;初识调试界面&quot;">​</a></h3><p><img src="https://s2.loli.net/2023/07/25/syNQzYV1fD48MRt.png" alt="IDEA-DEBUG-SCREEN.png"></p><p>如图，在调试模式下，代码区域不同以往。蓝色高亮的，是即将被执行的代码行。该行的右侧显示了一些变量。变量的值，反映此刻程序执行到这一行时的情况。</p><p>底部是调试器区域，下面内容均介绍此区域。</p><p>最左边的快捷操作栏从上到下依次为：</p><ul><li>Rerun: 如果被调试的进程是 IDEA 启动的，那就杀死该进程并重新启动。如果不是 IDEA 启动的，那么此按键只会把 IDEA 重新附加到进程上，可以认为没有任何效果。一般来说，不建议使用此功能。它会直接杀死服务端进程，而非正常关闭服务端，容易造成存档问题。</li><li>Resume Program: 继续运行程序。程序运行到断点暂停以后，或用户点击 Pause Program 键手动暂停程序以后，都可以用本按键使程序继续执行。</li><li>Pause Program: 暂停程序。</li><li>Stop: 停止调试。如果被调试的进程是 IDEA 启动的，那就杀死该进程。</li><li>View Breakpoints: 查看和管理断点。</li><li>Mute Breakpoints: 关闭 / 打开所有断点。当程序执行到关闭的断点时，不会暂停。</li></ul><p>左半边是线程栈，「Server Thread」是当前正在查看的线程，点击可以选择其他线程，它的下面是调用栈帧。A 方法里调用了 B 方法，B 方法里又调用了 C 方法，环环相扣，就组成了栈帧。被调用的方法在上面，调用的方法在下面。在图中可以看到，我们的 <code>onPlayerJoin</code> 方法是在 <code>GeneratedEventExecutor1#execute</code> 方法中被调用的。</p><p>上方横着排列有几个按键，它们的作用如下：</p><ul><li>Show Execution Point: 如果你在四处查看代码，找不到即将执行的代码行了，点击此按键可以快速返回即将执行的行。</li><li>Step Over: 当前线程执行一行代码，然后重新暂停。</li><li>Step Into: 进入即将执行的行所调用的方法，然后在方法的头部暂停。</li><li>Step Out: 当前线程执行到方法返回处，然后暂停。</li><li>Run to Cursor: 当前线程执行到光标所在行的前面，然后暂停。</li></ul><p>右边是表达式执行区。</p><p>你可以在「Evaluate expression」中输入要查看的表达式，按 <kbd>Enter</kbd> 查看表达式的值，或者按 <kbd>Ctrl</kbd> + <kbd>Shift</kbd> + <kbd>Enter</kbd> 使得它在每次程序停下时都自动执行。（注意不要在表达式中调用加了断点的方法！）</p><p>这个区域也会自动显示当前所有局部变量。如果该变量是个对象，你可以点开查看该对象里面的成员变量。</p><h3 id="开始调试" tabindex="-1">开始调试 <a class="header-anchor" href="#开始调试" aria-label="Permalink to &quot;开始调试&quot;">​</a></h3><p>在 <code>onPlayerJoin</code> 方法里设置好断点。放好传送门，然后在传送门的位置下线，再重新登录。</p><p><img src="https://s2.loli.net/2023/07/25/TEjPK1gLzHOcSvl.png" alt="BREAK-POINT-HIT.png"></p><p>果然，程序在断点处停下来了。</p><p>我们在执行到 <code>ensureSafety</code> 时用「Step Into」键进入方法。该行有两个方法，分别是 <code>ensureSafety</code> 和 <code>getPlayer</code>，IDEA 问我们选择哪个，我们点击 <code>ensureSafety</code>。</p><p><img src="https://s2.loli.net/2023/07/25/sEG2tMLruoN8BT3.png" alt="BEFORE-STEP-INTO.png"></p><p>我们一边使用「Step Over」一边观察底部局部变量变化是否符合预期。</p><p>很快，程序执行到了 <code>solution = loc</code>，观察底部变量显示可知，找到的这个解是正确的，它向 X 轴正方向移动了一格。</p><div class="info custom-block"><p class="custom-block-title"><img src="data:image/svg+xml,%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#39;0 0 16 16&#39; transform=&#39;scale(0.6)&#39; fill=&#39;%23fff&#39;%3E%3Cpath d=&#39;M9.1 0C10.2 0 10.7 0.7 10.7 1.6 10.7 2.6 9.8 3.6 8.6 3.6 7.6 3.6 7 3 7 2 7 1.1 7.7 0 9.1 0Z&#39;/%3E%3Cpath d=&#39;M5.8 16C5 16 4.4 15.5 5 13.2L5.9 9.1C6.1 8.5 6.1 8.2 5.9 8.2 5.7 8.2 4.6 8.6 3.9 9.1L3.5 8.4C5.6 6.6 7.9 5.6 8.9 5.6 9.8 5.6 9.9 6.6 9.5 8.2L8.4 12.5C8.2 13.2 8.3 13.5 8.5 13.5 8.7 13.5 9.6 13.2 10.4 12.5L10.9 13.2C8.9 15.2 6.7 16 5.8 16Z&#39;/%3E%3C/svg%3E" style="background-color:#0B87DA;clip-path:circle();" width="24px" height="24px"> <strong>找到了错误的解</strong>？</p><p>也许你在调试的时候发现，找到的解是错误的。或者该程序错误地认为，玩家站立的位置没有传送门。这两种情况都是正常的，因为代码中的错误不止一个。我们先讨论找到正确解的情况，其它漏洞会在后面调试、修复。如果你不幸地遇到了上述两个漏洞，可以暂缓调试，先依本文的思路往下阅读。</p></div><p>当运行到函数的末尾时，发现 <code>solution</code> 是安全位置，而 <code>player</code> 却没有传送到 <code>solution</code> 位置上。</p><p>我们怀疑 <code>player.teleport(solution)</code> 没有起作用，可是它已经运行完了，怎么办呢？</p><p>别急，在下面的线程栈区域，右键 <code>ensureSafety</code> 的栈帧，选择「Reset Frame」，可以重新执行一遍这个方法。</p><p>再次执行到 <code>player.teleport(solution)</code> 语句前面，点击「Step Into」，这样我们就转到了 <code>CraftEntity#teleport</code>。</p><p><img src="https://s2.loli.net/2023/07/25/uajmAWyfIXPYLOe.png" alt="DEBUG-TELEPORT.png"></p><p>栈帧很长，方法一环扣一环，不断转发调用其它方法。我们一直「Step Into」，直到有实际传送逻辑的，方法体最长的 <code>teleport</code> 方法里面。</p><p>边观察，边逐行执行，我们发现，<code>teleport</code> 方法没有传送玩家就返回了，因为 <code>PlayerTeleportEvent</code> 被取消了！</p><p><img src="https://s2.loli.net/2023/07/25/XUOzalxmASZKNV6.png" alt="TELEPORT-CANCELLED.png"></p><p>原来如此！我们禁止未登录用户传送的同时，不小心干扰了自己的代码，限制了我们自己把玩家传送到安全的地方。</p><p>解决方法很简单，临时取消限制就可以了。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-constant);">RuntimeDataManager</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">removeRestrictUUID</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getUniqueId</span><span style="color:var(--shiki-color-text);">());</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">teleport</span><span style="color:var(--shiki-color-text);">(solution);</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">RuntimeDataManager</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">addRestrictUUID</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getUniqueId</span><span style="color:var(--shiki-color-text);">());</span></span></code></pre></div><p>修改代码了，需要重启服务端吗？</p><p>不需要，改完直接选择 IDEA 顶部菜单「Run」-&gt;「Debugging Actions」-&gt;「Reload Changed Classes」重新加载变化的类即可。</p><div class="info custom-block"><p class="custom-block-title"><img src="data:image/svg+xml,%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#39;0 0 16 16&#39; transform=&#39;scale(0.6)&#39; fill=&#39;%23fff&#39;%3E%3Cpath d=&#39;M9.1 0C10.2 0 10.7 0.7 10.7 1.6 10.7 2.6 9.8 3.6 8.6 3.6 7.6 3.6 7 3 7 2 7 1.1 7.7 0 9.1 0Z&#39;/%3E%3Cpath d=&#39;M5.8 16C5 16 4.4 15.5 5 13.2L5.9 9.1C6.1 8.5 6.1 8.2 5.9 8.2 5.7 8.2 4.6 8.6 3.9 9.1L3.5 8.4C5.6 6.6 7.9 5.6 8.9 5.6 9.8 5.6 9.9 6.6 9.5 8.2L8.4 12.5C8.2 13.2 8.3 13.5 8.5 13.5 8.7 13.5 9.6 13.2 10.4 12.5L10.9 13.2C8.9 15.2 6.7 16 5.8 16Z&#39;/%3E%3C/svg%3E" style="background-color:#0B87DA;clip-path:circle();" width="24px" height="24px"> <strong>Reload Changed Classes 何时有效</strong>？</p><p>必须同时满足以下几个条件：</p><ul><li>不新增 / 删除类、方法、字段。</li><li>不修改字段的类型。</li><li>不修改方法的返回值类型、参数的个数、参数的类型。</li><li>被修改的类不是需要运行期 ASM 改写才能加载的类。</li><li>没有修改初始化步骤（例如你在 <code>onEnable</code> 中写的内容，必须重启服务器才能调用到，IDEA 的调试操作重新加载类没有用）。</li></ul></div><p>继续调试，很明显玩家传送成功了。</p><h3 id="另一个-bug" tabindex="-1">另一个 BUG <a class="header-anchor" href="#另一个-bug" aria-label="Permalink to &quot;另一个 BUG&quot;">​</a></h3><p>很快我们又高兴不起来了，我们发现，如果站在传送门方块的边缘，玩家仍然不能打开聊天栏，但位置又会被误认为是安全的。这样玩家仍然无法登录。</p><p><img src="https://s2.loli.net/2023/07/25/REMf4yCOTDxQF5v.png" alt="FALSE-SAFETY.png"></p><p>在调试器中执行表达式 <code>player.getLocation().getBlock().getType()</code>，我们发现玩家位置对应的方块是空气，而不是下界传送门。</p><p>又发现 <code>player.getLocation().clone().add(1, 0, 1).getBlock().getType()</code> 返回 <code>NETHER_PORTAL</code>，说明玩家站立在传送门旁边。</p><p><code>Player#getLocation</code> 方法的返回值，是玩家脚部的中心。当玩家站在传送门的边缘时，玩家脚部中心没碰到传送门。但是玩家的脚尖碰到了传送门。这时候，玩家仍然打不开聊天栏。所以，我们要判断的不是 <code>player.getLocation()</code> 是否处于传送门中，而是玩家的长方体碰撞箱有没有碰到传送门。</p><p>经过一番思考，编者决定把代码改成下面这样：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables has-diff"><code><span class="line"><span style="color:var(--shiki-token-comment);">// Check if player can log in here</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// We are not going to check if player is in wall, in lava or something else like that,</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// since player does not get hurt before logging in</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">boolean</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">isSafe(@</span><span style="color:var(--shiki-token-keyword);">Nonnull</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-keyword);">Player</span><span style="color:var(--shiki-token-function);"> player</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> @</span><span style="color:var(--shiki-token-keyword);">Nonnull</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-keyword);">Location</span><span style="color:var(--shiki-token-function);"> loc)</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">Location</span><span style="color:var(--shiki-color-text);"> diff </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">loc</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">clone</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">diff</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">subtract</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getLocation</span><span style="color:var(--shiki-color-text);">());</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">BoundingBox</span><span style="color:var(--shiki-color-text);"> box </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getBoundingBox</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">clone</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">shift</span><span style="color:var(--shiki-color-text);">(diff);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">for</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);"> x </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);">)</span><span style="color:var(--shiki-token-constant);">Math</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">floor</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">box</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getMinX</span><span style="color:var(--shiki-color-text);">()); x </span><span style="color:var(--shiki-token-keyword);">&lt;=</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);">)</span><span style="color:var(--shiki-token-constant);">Math</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">ceil</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">box</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getMaxX</span><span style="color:var(--shiki-color-text);">()); x</span><span style="color:var(--shiki-token-keyword);">++</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">for</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);"> y </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);">)</span><span style="color:var(--shiki-token-constant);">Math</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">floor</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">box</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getMinY</span><span style="color:var(--shiki-color-text);">()); y </span><span style="color:var(--shiki-token-keyword);">&lt;=</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);">)</span><span style="color:var(--shiki-token-constant);">Math</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">ceil</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">box</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getMaxY</span><span style="color:var(--shiki-color-text);">()); y</span><span style="color:var(--shiki-token-keyword);">++</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">for</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);"> z </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);">)</span><span style="color:var(--shiki-token-constant);">Math</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">floor</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">box</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getMinZ</span><span style="color:var(--shiki-color-text);">()); z </span><span style="color:var(--shiki-token-keyword);">&lt;=</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);">)</span><span style="color:var(--shiki-token-constant);">Math</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">ceil</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">box</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getMaxZ</span><span style="color:var(--shiki-color-text);">()); z</span><span style="color:var(--shiki-token-keyword);">++</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-keyword);">Block</span><span style="color:var(--shiki-color-text);"> block </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">Location(</span><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getWorld()</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> x</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> y</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> z)</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getBlock</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">block</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getType</span><span style="color:var(--shiki-color-text);">() </span><span style="color:var(--shiki-token-keyword);">==</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Material</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">NETHER_PORTAL</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                    </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">false</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">true</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">final</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Map</span><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-keyword);">UUID</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Location</span><span style="color:var(--shiki-color-text);">&gt; originalLocation </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">HashMap</span><span style="color:var(--shiki-color-text);">&lt;&gt;();</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">final</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);"> skyHeight </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">512</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">final</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);"> maxSearchVolume </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">256</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">final</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">Vector</span><span style="color:var(--shiki-color-text);">[] directions </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">Vector(</span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">Vector(</span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">Vector(</span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">Vector(</span><span style="color:var(--shiki-token-keyword);">-</span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">Vector(</span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-keyword);">-</span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">Vector(</span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-keyword);">-</span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// Let player log in in a safe place</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">private</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">void</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">ensureSafety(@</span><span style="color:var(--shiki-token-keyword);">Nonnull</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-keyword);">Player</span><span style="color:var(--shiki-token-function);"> player)</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-function);">isSafe(player</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getLocation())</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// If the position is unsafe, first try to search nearby</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">ArrayDeque</span><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-keyword);">Location</span><span style="color:var(--shiki-color-text);">&gt; queue </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">ArrayDeque</span><span style="color:var(--shiki-color-text);">&lt;&gt;();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">HashSet</span><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-keyword);">Location</span><span style="color:var(--shiki-color-text);">&gt; visited </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">HashSet</span><span style="color:var(--shiki-color-text);">&lt;&gt;();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">queue</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">addLast</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getLocation</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">toBlockLocation</span><span style="color:var(--shiki-color-text);">());</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">Location</span><span style="color:var(--shiki-color-text);"> solution </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">while</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">!</span><span style="color:var(--shiki-token-constant);">queue</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">isEmpty</span><span style="color:var(--shiki-color-text);">() </span><span style="color:var(--shiki-token-keyword);">&amp;&amp;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">visited</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">size</span><span style="color:var(--shiki-color-text);">() </span><span style="color:var(--shiki-token-keyword);">&lt;=</span><span style="color:var(--shiki-color-text);"> maxSearchVolume) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">Location</span><span style="color:var(--shiki-color-text);"> loc </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">queue</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">removeFirst</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">visited</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">contains</span><span style="color:var(--shiki-color-text);">(loc)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">continue</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">visited</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">add</span><span style="color:var(--shiki-color-text);">(loc);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-function);">isSafe(player</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-constant);">loc</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">toCenterLocation())</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            solution </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">loc</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">toCenterLocation</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">break</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">for</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">Vector</span><span style="color:var(--shiki-color-text);"> direction </span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> directions) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">queue</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">addLast</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">loc</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">clone</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">add</span><span style="color:var(--shiki-color-text);">(direction));</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// Or else we may fall back to logging in in the sky</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (solution </span><span style="color:var(--shiki-token-keyword);">==</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">Location</span><span style="color:var(--shiki-color-text);"> loc </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getLocation</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">clone</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">loc</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setY</span><span style="color:var(--shiki-color-text);">(skyHeight);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        solution </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> loc;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">originalLocation</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">put</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getUniqueId</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getLocation</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">clone</span><span style="color:var(--shiki-color-text);">());</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">RuntimeDataManager</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">removeRestrictUUID</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getUniqueId</span><span style="color:var(--shiki-color-text);">());</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">teleport</span><span style="color:var(--shiki-color-text);">(solution);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">RuntimeDataManager</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">addRestrictUUID</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getUniqueId</span><span style="color:var(--shiki-color-text);">());</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// Restore player&#39;s location</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">void</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">restoreLocation(@</span><span style="color:var(--shiki-token-keyword);">Nonnull</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-keyword);">Player</span><span style="color:var(--shiki-token-function);"> player)</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">Bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">isPrimaryThread</span><span style="color:var(--shiki-color-text);">()) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">Location</span><span style="color:var(--shiki-color-text);"> loc </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">originalLocation</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">remove</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getUniqueId</span><span style="color:var(--shiki-color-text);">());</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (loc </span><span style="color:var(--shiki-token-keyword);">!=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">player</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">teleport</span><span style="color:var(--shiki-color-text);">(loc);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">Bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getScheduler</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">runTask</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">HarmonyAuthSMART</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">instance</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> () </span><span style="color:var(--shiki-token-keyword);">-&gt;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">restoreLocation(player)</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><p>Reload Changed Classes？不，<code>isSafe</code> 方法的参数有变化。我们需要重启服务端。</p><p>再次 Build Artifact，把构建产物扔进 <code>plugins</code> 文件夹，启动服务端。</p><p>一切工作正常，我们终于可以放心地在传送门中下线了。刷屏的问题暂不在本节讨论。</p><div class="info custom-block"><p class="custom-block-title"><img src="data:image/svg+xml,%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#39;0 0 16 16&#39; transform=&#39;scale(0.6)&#39; fill=&#39;%23fff&#39;%3E%3Cpath d=&#39;M9.1 0C10.2 0 10.7 0.7 10.7 1.6 10.7 2.6 9.8 3.6 8.6 3.6 7.6 3.6 7 3 7 2 7 1.1 7.7 0 9.1 0Z&#39;/%3E%3Cpath d=&#39;M5.8 16C5 16 4.4 15.5 5 13.2L5.9 9.1C6.1 8.5 6.1 8.2 5.9 8.2 5.7 8.2 4.6 8.6 3.9 9.1L3.5 8.4C5.6 6.6 7.9 5.6 8.9 5.6 9.8 5.6 9.9 6.6 9.5 8.2L8.4 12.5C8.2 13.2 8.3 13.5 8.5 13.5 8.7 13.5 9.6 13.2 10.4 12.5L10.9 13.2C8.9 15.2 6.7 16 5.8 16Z&#39;/%3E%3C/svg%3E" style="background-color:#0B87DA;clip-path:circle();" width="24px" height="24px"> <strong>为什么要重启服务端</strong>？</p><p>因为我们给 <code>isSafe</code> 方法增加了一个 <code>Player</code> 类型的参数，改变了方法的类型。这种情况下，Reload Changed Classes 是无效的。</p></div><h3 id="其它种类的断点" tabindex="-1">其它种类的断点 <a class="header-anchor" href="#其它种类的断点" aria-label="Permalink to &quot;其它种类的断点&quot;">​</a></h3><p>IDEA 提供了多种类型的断点，除了上面使用过的行号断点，常见的还有以下三种：</p><ul><li>方法断点: 在方法的入口处暂停程序。</li><li>字段断点: 在字段被修改时暂停程序。</li><li>异常断点: 在异常被抛出时暂停程序。</li></ul><p>在调试器左侧第五个按钮「View Breakpoints」中，点击「+」，可以添加断点。</p><p>也可以点击已有的断点进行高级设置，如：</p><ul><li>「Condition」功能可以只在输入表达式为 <code>true</code> 时暂停程序。</li><li>「Evaluate and log」功能可以在暂停时输出一条日志。</li></ul><p>IDEA 还有许多方便的调试功能，读者可以自行探索。这段内容就不再进行实例展示了。</p><h2 id="刷取物品和结构位置泄漏问题" tabindex="-1">刷取物品和结构位置泄漏问题 <a class="header-anchor" href="#刷取物品和结构位置泄漏问题" aria-label="Permalink to &quot;刷取物品和结构位置泄漏问题&quot;">​</a></h2><p>我们发现，在使用 HarmonyAuth SMART 登录插件的服务器中，管理员账号在未登录状态下仍然可以使用 <code>/loot</code>、<code>/locate</code> 等命令。因此，玩家只要知道了管理员的游戏 ID，哪怕没有密码，也可以定位要塞、神殿等结构的位置。还可以用 <code>/loot</code> 来刷取战利品箱。</p><p>聪明的你，能猜到为什么吗？</p>`,93),r=s("p",null,[s("button",{type:"button",class:"btn-unconfirmed",style:{width:"100%",transition:"500ms"},onclick:"document.getElementById('solution1').style.display = 'block';this.onclick=function(){};this.style.display = 'none'"}," ❔ 揭晓谜底 ")],-1),i=o('<div id="solution1" style="display:none;"><div class="info custom-block"><p class="custom-block-title"><img src="data:image/svg+xml,%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#39;0 0 16 16&#39; transform=&#39;scale(0.6)&#39; fill=&#39;%23fff&#39;%3E%3Cpath d=&#39;M9.1 0C10.2 0 10.7 0.7 10.7 1.6 10.7 2.6 9.8 3.6 8.6 3.6 7.6 3.6 7 3 7 2 7 1.1 7.7 0 9.1 0Z&#39;/%3E%3Cpath d=&#39;M5.8 16C5 16 4.4 15.5 5 13.2L5.9 9.1C6.1 8.5 6.1 8.2 5.9 8.2 5.7 8.2 4.6 8.6 3.9 9.1L3.5 8.4C5.6 6.6 7.9 5.6 8.9 5.6 9.8 5.6 9.9 6.6 9.5 8.2L8.4 12.5C8.2 13.2 8.3 13.5 8.5 13.5 8.7 13.5 9.6 13.2 10.4 12.5L10.9 13.2C8.9 15.2 6.7 16 5.8 16Z&#39;/%3E%3C/svg%3E" style="background-color:#0B87DA;clip-path:circle();" width="24px" height="24px"> <strong>谜底</strong></p><p>HarmonyAuth SMART 有一套命令白名单系统，防止未登录的玩家随便执行命令（否则玩家可以用管理员的游戏 ID 加入服务器，在未登录情况下输入 <code>/op</code> 等指令，那太糟糕了）。该系统使用 <code>String#startsWith</code> 方法判断命令是否在白名单内。登录命令是 <code>/l</code>，自然要加进白名单里。于是所有满足 <code>startsWith(&quot;l&quot;)</code> 的命令，都被加进了白名单里。玩家在未登录时也可以执行 <code>/locate</code> 之类的命令了。在真实的服务器中，可能会有玩家尝试 <code>/luckperms</code> 等敏感命令，使得服务器的权限管理系统瞬间瓦解。</p></div></div><h2 id="结束了" tabindex="-1">结束了 <a class="header-anchor" href="#结束了" aria-label="Permalink to &quot;结束了&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title"><img src="data:image/svg+xml,%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#39;0 0 1028 1024&#39; transform=&#39;scale(0.6)&#39; fill=&#39;%23fff&#39;%3E%3Cpath d=&#39;M1018.319924 112.117535q4.093748 9.210934 6.652341 21.492179t2.558593 25.585928-5.117186 26.609365-16.374994 25.585928q-12.281245 12.281245-22.003898 21.492179t-16.886712 16.374994q-8.187497 8.187497-15.351557 14.32812l-191.382739-191.382739q12.281245-11.257808 29.167958-27.121083t28.144521-25.074209q14.32812-11.257808 29.679676-15.863275t30.191395-4.093748 28.656239 4.605467 24.050772 9.210934q21.492179 11.257808 47.589826 39.402329t40.425766 58.847634zM221.062416 611.554845q6.140623-6.140623 28.656239-29.167958t56.289041-56.80076l74.710909-74.710909 82.898406-82.898406 220.038979-220.038979 191.382739 192.406177-220.038979 220.038979-81.874969 82.898406q-40.937484 39.914047-73.687472 73.175753t-54.242167 54.753885-25.585928 24.562491q-10.234371 9.210934-23.539054 19.445305t-27.632802 16.374994q-14.32812 7.16406-41.960921 17.398431t-57.824197 19.957024-57.312478 16.886712-40.425766 9.210934q-27.632802 3.070311-36.843736-8.187497t-5.117186-37.867173q2.046874-14.32812 9.722653-41.449203t16.374994-56.289041 16.886712-53.730448 13.304682-33.773425q6.140623-14.32812 13.816401-26.097646t22.003898-26.097646z&#39;/%3E%3C/svg%3E" style="background-color:#057E3D;clip-path:circle();" width="24px" height="24px"> <strong>编者注</strong></p><p>下文是 ThatRarityEG 为 AC-1-3 所作的结语。谨依实情对「所有的 BUG 都已经除掉了」等内容作了改动。凡用「笔者」自称处，都为 ThatRarityEG 所写，编者不敢僭越。</p></div><p>就这么多了。也许还有更多的漏洞等待读者去发现。</p><p>本插件还有许多奇怪的问题，比如未登录的玩家无法受到伤害，却能吸引怪物的火力，甚至能打怪。另外，玩家在载具上或者在空中登录时，插件发来的警告会刷屏。玩家在未登录时也可以聊天……受篇幅所限就不再修改了。</p><p>有些项目没来得及测试，例如登录时取消已经创建的请求，重新创建请求时自动覆盖。当然，笔者事后测试成功了（查数据库可知）。至于钩子能否运行……既然配置空命令也没出错，我们就权且相信它可以正常运行吧——开玩笑的，笔者测试过没有问题的啦~</p><p>至于登录时按着 <kbd>W</kbd> 移动鼠标会回弹的现象……应该不会有人这么无聊吧？如果有，那回弹也是自作自受（笑）。</p><p>密码中不能包含空格，设计如此。如果你的密码包含空格并且每一段都相同，那也不影响注册和登录。重设密码时，如果包含空格将无法通过。基本上没有大问题了。</p><p>本次行动的源代码：<a href="https://github.com/Andy-K-Sparklight/PluginDiaryCode/tree/master/HarmonyAuth%20SMART/src" target="_blank" rel="noreferrer">https://github.com/Andy-K-Sparklight/PluginDiaryCode/tree/master/HarmonyAuth SMART/src</a></p><h2 id="行动总结" tabindex="-1">行动总结 <a class="header-anchor" href="#行动总结" aria-label="Permalink to &quot;行动总结&quot;">​</a></h2><p>战斗还是很艰难的，但我们做到了！</p><p>笔者写这两节写了两遍，并且好几次都有过放弃的念头，但最终坚持下来了。其实笔者能够在这里写出教程并非因为笔者技艺精湛或者经验丰富，只是我能够一直坚持。</p><p>这个插件已经能够使用了，笔者把它安装在了自己的服务器上，也算是一个纪念吧。</p><h2 id="行动结束" tabindex="-1">行动结束 <a class="header-anchor" href="#行动结束" aria-label="Permalink to &quot;行动结束&quot;">​</a></h2>',14),p=s("p",null,[s("button",{type:"button",class:"btn-unconfirmed",style:{width:"100%",transition:"500ms"},onclick:"this.innerHTML=' ✓ 恭喜！';document.getElementById('hiddenEle').style.display = 'block';this.className='btn-confirmed';this.onclick=function(){};"}," ❔ 确认行动结束 ")],-1),c=s("div",{id:"hiddenEle",style:{display:"none"}},[s("blockquote",null,[s("p",null,"行动结果：胜利")]),s("p",null,"不容易啊，笔者写到这里花了一周，各位读者大概会比我要快一点吧？（毕竟笔者需要打字）"),s("p",null,"笔者认为，到目前为止，你已经掌握了插件开发需要的全部基础知识。接下来我们将学习一些高级知识和小技巧，并且由此开始通向最终的旅程。"),s("p",null,"回顾你编写的「Hello World」，记忆犹新？很好，那一章是「基础之基础」，而我们下一章的内容，叫做「终极之开端」。"),s("p",null,"最后感谢你的坚持，也感谢笔者自己。现在的你一定成就感满满吧？那我们来一首应景的歌~"),s("iframe",{frameborder:"no",border:"0",marginwidth:"0",marginheight:"0",width:"100%",height:"86",src:"//music.163.com/outchain/player?type=2&id=28077562&auto=0&height=66"}),s("p",null,"下一章，内容更精彩！")],-1),k=[e,r,i,p,c];function y(h,v,u,d,x,f){return a(),t("div",null,k)}const m=n(l,[["render",y]]);export{g as __pageData,m as default};
