import{_ as s,o,c as n,S as a}from"./chunks/framework.7f03344f.js";const u=JSON.parse('{"title":"5-4 药水效果","description":"","frontmatter":{},"headers":[],"relativePath":"Volume5/5-4.md","filePath":"docs/Volume5/5-4.md","lastUpdated":1698403164000}'),t={name:"Volume5/5-4.md"},e=a(`<h1 id="_5-4-药水效果" tabindex="-1">5-4 药水效果 <a class="header-anchor" href="#_5-4-药水效果" aria-label="Permalink to &quot;5-4 药水效果&quot;">​</a></h1><p>Bukkit 中所有的药水效果都通过 <code>PotionEffect</code> 进行描述。</p><h2 id="使用原版药水效果" tabindex="-1">使用原版药水效果 <a class="header-anchor" href="#使用原版药水效果" aria-label="Permalink to &quot;使用原版药水效果&quot;">​</a></h2><p>要使用一个已经存在的药水效果，我们只需要实例化 <code>PotionEffect</code> 并进行应用即可。</p><p>下面演示如何给一名玩家「迅捷 II」效果，首先创建药水效果的实例：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">PotionEffect</span><span style="color:var(--shiki-color-text);"> pe </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">PotionEffect(</span><span style="color:var(--shiki-token-constant);">PotionEffectType</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">SPEED</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-constant);">100</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-color-text);">;</span></span></code></pre></div><p>其中，所有的药水效果种类都定义在 <code>PotionEffectType</code> 类中。可以通过 JavaDocs 查找可能的值。</p><p>我们来看看构造方法的签名：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">PotionEffect(</span></span>
<span class="line"><span style="color:var(--shiki-token-function);">    @</span><span style="color:var(--shiki-token-keyword);">NotNull</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-keyword);">PotionEffectType</span><span style="color:var(--shiki-token-function);"> type</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-token-function);">    </span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-token-function);"> duration</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-token-function);">    </span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-token-function);"> amplifier</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-token-function);">    </span><span style="color:var(--shiki-token-keyword);">boolean</span><span style="color:var(--shiki-token-function);"> ambient</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-comment);">// 可选</span></span>
<span class="line"><span style="color:var(--shiki-token-function);">    </span><span style="color:var(--shiki-token-keyword);">boolean</span><span style="color:var(--shiki-token-function);"> particles</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-comment);">// 可选</span></span>
<span class="line"><span style="color:var(--shiki-token-function);">    </span><span style="color:var(--shiki-token-keyword);">boolean</span><span style="color:var(--shiki-token-function);"> icon </span><span style="color:var(--shiki-token-comment);">// 可选</span></span>
<span class="line"><span style="color:var(--shiki-token-function);">)</span></span></code></pre></div><p>六个参数分别是：</p><ul><li>药水类型，只能使用 <code>PotionEffectType</code> 中的静态成员变量</li><li>持续时间，单位刻</li><li>倍率，对于有等级的效果（如「力量」），该数字比等级小 1，对于没有等级的效果，设置为 0</li><li>是否进行渲染，可选，如果为 <code>true</code> 将产生更多的粒子，如果不填，默认为 <code>true</code></li><li>是否具有粒子，可选，似乎会影响客户端的渲染，具体作用尚不明确</li><li>是否具有图标，可选，似乎会影响客户端在背包界面是否显示该效果，具体作用尚不明确</li></ul><p>一般而言，填写三个参数就足够了。</p><p>要使用这个药水效果，只需要在合适的时机进行应用：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-constant);">pe</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">apply</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Objects</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">requireNonNull</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getPlayer</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;ThatRarityEG&quot;</span><span style="color:var(--shiki-color-text);">)));</span></span></code></pre></div><p>药水效果实际上不仅能用于玩家，还能用于任何 <code>LivingEntity</code> 的实例。</p><h2 id="自定义药水效果" tabindex="-1">自定义药水效果 <a class="header-anchor" href="#自定义药水效果" aria-label="Permalink to &quot;自定义药水效果&quot;">​</a></h2><p>Bukkit 没有提供自定义药水效果的方法，但我们可以自己创建。</p><p>下面演示如何创建「EEE」效果，该效果在玩家获取 10 秒之后发送大量的字母「e」。（致敬咏士）</p><div class="tip custom-block"><p class="custom-block-title"><img src="data:image/svg+xml,%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#39;0 0 1028 1024&#39; transform=&#39;scale(0.6)&#39; fill=&#39;%23fff&#39;%3E%3Cpath d=&#39;M1018.319924 112.117535q4.093748 9.210934 6.652341 21.492179t2.558593 25.585928-5.117186 26.609365-16.374994 25.585928q-12.281245 12.281245-22.003898 21.492179t-16.886712 16.374994q-8.187497 8.187497-15.351557 14.32812l-191.382739-191.382739q12.281245-11.257808 29.167958-27.121083t28.144521-25.074209q14.32812-11.257808 29.679676-15.863275t30.191395-4.093748 28.656239 4.605467 24.050772 9.210934q21.492179 11.257808 47.589826 39.402329t40.425766 58.847634zM221.062416 611.554845q6.140623-6.140623 28.656239-29.167958t56.289041-56.80076l74.710909-74.710909 82.898406-82.898406 220.038979-220.038979 191.382739 192.406177-220.038979 220.038979-81.874969 82.898406q-40.937484 39.914047-73.687472 73.175753t-54.242167 54.753885-25.585928 24.562491q-10.234371 9.210934-23.539054 19.445305t-27.632802 16.374994q-14.32812 7.16406-41.960921 17.398431t-57.824197 19.957024-57.312478 16.886712-40.425766 9.210934q-27.632802 3.070311-36.843736-8.187497t-5.117186-37.867173q2.046874-14.32812 9.722653-41.449203t16.374994-56.289041 16.886712-53.730448 13.304682-33.773425q6.140623-14.32812 13.816401-26.097646t22.003898-26.097646z&#39;/%3E%3C/svg%3E" style="background-color:#057E3D;clip-path:circle();" width="24px" height="24px"> <strong>编者注</strong></p><p>所谓「咏士」，指 MCBBS 论坛中的一些用户，该群体以喜好发布内容极长的帖子著称。最著名的咏士「一道阳光」，曾复制粘贴出近一百万个字母「e」，然后将这段超长文本发在论坛。该行为称「咏 e」。由于帖子正文太长，点开页面者往往卡死，因此「咏 e」可谓损人不利己。谨按，此处 ThatRarityEG 仅有调侃之意，并非鼓励读者这么做。</p></div><p>首先，由于我们要创建的是药水效果，因此需要创建一个类来描述它。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">class</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">EEEEffect</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">extends</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">PotionEffect</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">EEEEffect</span><span style="color:var(--shiki-color-text);">() {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        super(</span><span style="color:var(--shiki-token-constant);">PotionEffectType</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">BAD_OMEN</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">100</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><p><code>super</code> 指的是「使用父类的构造方法」，也就是「采用传统的方法」。</p><p>这里的 <code>PotionEffectType</code> 是药水类型（主要决定图标），插件无法修改（Bukkit 写死在代码里面了），因此只能选择一个已有的。这里我们选择的是「不祥之兆」。</p><p>持续时间和等级无所谓，因为我们不会用到它，随便传两个值就可以了。</p><div class="tip custom-block"><p class="custom-block-title"><img src="data:image/svg+xml,%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#39;0 0 1028 1024&#39; transform=&#39;scale(0.6)&#39; fill=&#39;%23fff&#39;%3E%3Cpath d=&#39;M1018.319924 112.117535q4.093748 9.210934 6.652341 21.492179t2.558593 25.585928-5.117186 26.609365-16.374994 25.585928q-12.281245 12.281245-22.003898 21.492179t-16.886712 16.374994q-8.187497 8.187497-15.351557 14.32812l-191.382739-191.382739q12.281245-11.257808 29.167958-27.121083t28.144521-25.074209q14.32812-11.257808 29.679676-15.863275t30.191395-4.093748 28.656239 4.605467 24.050772 9.210934q21.492179 11.257808 47.589826 39.402329t40.425766 58.847634zM221.062416 611.554845q6.140623-6.140623 28.656239-29.167958t56.289041-56.80076l74.710909-74.710909 82.898406-82.898406 220.038979-220.038979 191.382739 192.406177-220.038979 220.038979-81.874969 82.898406q-40.937484 39.914047-73.687472 73.175753t-54.242167 54.753885-25.585928 24.562491q-10.234371 9.210934-23.539054 19.445305t-27.632802 16.374994q-14.32812 7.16406-41.960921 17.398431t-57.824197 19.957024-57.312478 16.886712-40.425766 9.210934q-27.632802 3.070311-36.843736-8.187497t-5.117186-37.867173q2.046874-14.32812 9.722653-41.449203t16.374994-56.289041 16.886712-53.730448 13.304682-33.773425q6.140623-14.32812 13.816401-26.097646t22.003898-26.097646z&#39;/%3E%3C/svg%3E" style="background-color:#057E3D;clip-path:circle();" width="24px" height="24px"> <strong>编者注</strong></p><p>谨按，继承 <code>PotionEffect</code> 来自行创建药水效果，不见诸文档。经编者 CaveNightingale 测试，该做法是完全不可取的。下文部分代码的有效性严重存疑，编者会在下文注解中逐条分析。</p><p>正所谓「尽信《书》，不如无《书》」，请读者在阅读时多加思考、披沙拣金，不要直接照抄代码。</p></div><p>下面是重中之重！</p><p>要实现我们自己的效果，需要<strong>重写</strong> <code>apply</code> 方法。</p><p>示例如下：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">class</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">EEEEffect</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">extends</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">PotionEffect</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">EEEEffect</span><span style="color:var(--shiki-color-text);">() {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        super(</span><span style="color:var(--shiki-token-constant);">PotionEffectType</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">BAD_OMEN</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">100</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">Override</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">boolean</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">apply</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">LivingEntity</span><span style="color:var(--shiki-color-text);"> entity) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (entity </span><span style="color:var(--shiki-token-keyword);">instanceof</span><span style="color:var(--shiki-color-text);"> Player) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">entity</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">sendMessage</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;您即将受到 EEE 效果的影响！&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-comment);">// 计划任务，从此开始</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">BukkitRunnable()</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                @</span><span style="color:var(--shiki-token-keyword);">Override</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">void</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">run</span><span style="color:var(--shiki-color-text);">() {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                    </span><span style="color:var(--shiki-token-keyword);">for</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);"> i </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-color-text);">; i </span><span style="color:var(--shiki-token-keyword);">&lt;=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">10</span><span style="color:var(--shiki-color-text);">; i</span><span style="color:var(--shiki-token-keyword);">++</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                        </span><span style="color:var(--shiki-token-constant);">entity</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">sendMessage</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;eeeeeeeeeeeeeeee（后略）&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                        </span><span style="color:var(--shiki-token-comment);">// 发送消息</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            }</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">runTaskLaterAsynchronously</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">&lt;</span><span style="color:var(--shiki-color-text);">插件主类名</span><span style="color:var(--shiki-token-keyword);">&gt;</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">instance</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">200</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-comment);">// 到此结束</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">true</span><span style="color:var(--shiki-color-text);">; </span><span style="color:var(--shiki-token-comment);">// 可以被添加</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">false</span><span style="color:var(--shiki-color-text);">; </span><span style="color:var(--shiki-token-comment);">// 不可被添加</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><p>基本上只需要注意三个点：</p><ul><li>如果这个效果成功被添加，返回 <code>true</code>，否则返回 <code>false</code>，这似乎会影响到 Bukkit 的游戏判断，因此请如实返回</li><li><s><code>apply</code> 方法只会<strong>在药水生效的瞬间被调用一次</strong></s>，如果要像「力量」那样持续生效，有几个办法： <ul><li>创建一个 <code>List&lt;UUID&gt;</code> 记录有这个效果的实体，并通过 Bukkit 的计划任务在一定时间后移除，然后监听事件，通过查询这个 <code>List</code> 对实体的行为进行相应的修改</li><li>将数据通过 NBT 绑定到实体上，并通过 Bukkit 的计划任务在一定时间后移除，然后监听事件，通过查询 NBT 对实体的行为进行相应的修改</li></ul></li><li>一定要记得加 <code>@Override</code></li></ul><p>那什么是 Bukkit 的计划任务呢？</p><p>Bukkit 计划任务用于「在一段时间后执行某个操作」，我们在 4-2 和 AC-1-1 中见到过它的「异步执行」版本。计划任务的写法和异步执行非常相似：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">BukkitRunnable()</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">Override</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">void</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">run</span><span style="color:var(--shiki-color-text);">() {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-comment);">// 要做之事……</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">runTaskLaterAsynchronously</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">&lt;</span><span style="color:var(--shiki-color-text);">插件主类名</span><span style="color:var(--shiki-token-keyword);">&gt;</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">instance</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">200</span><span style="color:var(--shiki-color-text);">); </span><span style="color:var(--shiki-token-comment);">// 200 是要推迟的时间，单位刻</span></span></code></pre></div><p>这样就不难解释我们上面的效果了，我们让 Bukkit 向玩家发送许多「e」，并将这个操作推迟了 10 秒（200 刻）。</p><p>好啦！这样药水效果就创建完了，不需要注册！</p><p>将这个效果直接应用给玩家：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">EEEEffect()</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">apply</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Objects</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">requireNonNull</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getPlayer</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;ThatRarityEG&quot;</span><span style="color:var(--shiki-color-text);">)));</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title"><img src="data:image/svg+xml,%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#39;0 0 1028 1024&#39; transform=&#39;scale(0.6)&#39; fill=&#39;%23fff&#39;%3E%3Cpath d=&#39;M1018.319924 112.117535q4.093748 9.210934 6.652341 21.492179t2.558593 25.585928-5.117186 26.609365-16.374994 25.585928q-12.281245 12.281245-22.003898 21.492179t-16.886712 16.374994q-8.187497 8.187497-15.351557 14.32812l-191.382739-191.382739q12.281245-11.257808 29.167958-27.121083t28.144521-25.074209q14.32812-11.257808 29.679676-15.863275t30.191395-4.093748 28.656239 4.605467 24.050772 9.210934q21.492179 11.257808 47.589826 39.402329t40.425766 58.847634zM221.062416 611.554845q6.140623-6.140623 28.656239-29.167958t56.289041-56.80076l74.710909-74.710909 82.898406-82.898406 220.038979-220.038979 191.382739 192.406177-220.038979 220.038979-81.874969 82.898406q-40.937484 39.914047-73.687472 73.175753t-54.242167 54.753885-25.585928 24.562491q-10.234371 9.210934-23.539054 19.445305t-27.632802 16.374994q-14.32812 7.16406-41.960921 17.398431t-57.824197 19.957024-57.312478 16.886712-40.425766 9.210934q-27.632802 3.070311-36.843736-8.187497t-5.117186-37.867173q2.046874-14.32812 9.722653-41.449203t16.374994-56.289041 16.886712-53.730448 13.304682-33.773425q6.140623-14.32812 13.816401-26.097646t22.003898-26.097646z&#39;/%3E%3C/svg%3E" style="background-color:#057E3D;clip-path:circle();" width="24px" height="24px"> <strong>编者注</strong></p><p>谨按，覆写 <code>apply</code> 方法是不可取的。<code>apply</code> 方法不会在药水生效的瞬间被调用。在药水生效时，Bukkit 根本不会实例化 <code>PotionEffect</code> 对象。具体说明参见下一条注释。</p><p>药水效果有两种生效方式。第一种，是玩家在游戏里正常喝下药水。第二种，是插件调用 <code>apply</code> 等方法强行给玩家施加药水效果。既然第一种情况下，<code>apply</code> 方法不会被调用，那么这个方法就只能由插件开发者手动调用，也即插件开发者手里有一个 <code>PotionEffect</code> 对象、并且想要将之赋予一个实体的时候，手动调用 <code>apply</code> 方法来施加药水效果。</p><p>所以，如果要让玩家发送很多个 e，没有必要写 <code>EEEEffect</code> 类。直接新建一个 <code>PotionEffect</code> 对象，调用 <code>apply</code>，再接着 <code>apply</code> 写 <code>sendMessage</code> 即可。例如：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">PotionEffect(</span><span style="color:var(--shiki-token-constant);">PotionEffectType</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">BAD_OMEN</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-constant);">100</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">apply</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getPlayer</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;ThatRarityEG&quot;</span><span style="color:var(--shiki-color-text);">));</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">entity</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">sendMessage</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;您即将受到 EEE 效果的影响！&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// 计划任务，从此开始</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">BukkitRunnable()</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    @</span><span style="color:var(--shiki-token-keyword);">Override</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">void</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">run</span><span style="color:var(--shiki-color-text);">() {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">for</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);"> i </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-color-text);">; i </span><span style="color:var(--shiki-token-keyword);">&lt;=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">10</span><span style="color:var(--shiki-color-text);">; i</span><span style="color:var(--shiki-token-keyword);">++</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">entity</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">sendMessage</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;eeeeeeeeeeeeeeee（后略）&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-comment);">// 发送消息</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">runTaskLaterAsynchronously</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">&lt;</span><span style="color:var(--shiki-color-text);">插件主类名</span><span style="color:var(--shiki-token-keyword);">&gt;</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">instance</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">200</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// 到此结束</span></span></code></pre></div></div><h2 id="将效果与药水绑定" tabindex="-1">将效果与药水绑定 <a class="header-anchor" href="#将效果与药水绑定" aria-label="Permalink to &quot;将效果与药水绑定&quot;">​</a></h2><p>现在重新看看 3-2 中的内容，是不是恍然大悟了？</p><p>其实，创建一瓶「咏 e」药水也不难嘛……唰唰唰就写出来了：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">ItemStack</span><span style="color:var(--shiki-color-text);"> ePotion </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">ItemStack(</span><span style="color:var(--shiki-token-constant);">Material</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">SPLASH_POTION</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// 喷溅型咏 E 药水，Minecraft 会自动判断受影响的实体，想想就很好玩啊！</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">PotionMeta</span><span style="color:var(--shiki-color-text);"> pm </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> (PotionMeta) </span><span style="color:var(--shiki-token-constant);">ePotion</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getItemMeta</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">pm</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setColor</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Color</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">fromRGB</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">225</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-color-text);">)); </span><span style="color:var(--shiki-token-comment);">// 危险的红色</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">pm</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setBasePotionData</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">PotionData(</span><span style="color:var(--shiki-token-constant);">PotionType</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">WATER</span><span style="color:var(--shiki-token-function);">)</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// 不需要任何预设效果，使用 WATER，请区分 PotionType 和 PotionEffectType！</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">pm</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">addCustomEffect</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">EEEEffect()</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">true</span><span style="color:var(--shiki-color-text);">); </span><span style="color:var(--shiki-token-comment);">// 加入我们自定义的药水效果</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">pm</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setDisplayName</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;喷溅的咏 e 药水&quot;</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">pm</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setLore</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Collections</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">singletonList</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">ChatColor</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">GRAY</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;eee……eeee？&quot;</span><span style="color:var(--shiki-color-text);">));</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// 灰色的介绍</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">ePotion</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">setItemMeta</span><span style="color:var(--shiki-color-text);">(pm);</span></span></code></pre></div><p><em><code>Collections.singletonList</code> 创建一个单项只读列表。</em></p><p>对于药水究竟怎么「喷溅」，「喷溅」到谁身上，那是 Bukkit 来决定的啦~</p><p>现在 <code>ePotion</code> 就是一个「喷溅的咏 e 药水」啦！想怎么使用就由你决定啦~</p><p>例如，将它给予一个玩家：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-constant);">Objects</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">requireNonNull</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Bukkit</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getPlayer</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&quot;ThatRarityEG&quot;</span><span style="color:var(--shiki-color-text);">))</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getInventory</span><span style="color:var(--shiki-color-text);">()</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">addItem</span><span style="color:var(--shiki-color-text);">(ePotion);</span></span></code></pre></div><p>将它对着自己丢出来试试吧！</p><div class="tip custom-block"><p class="custom-block-title"><img src="data:image/svg+xml,%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#39;0 0 1028 1024&#39; transform=&#39;scale(0.6)&#39; fill=&#39;%23fff&#39;%3E%3Cpath d=&#39;M1018.319924 112.117535q4.093748 9.210934 6.652341 21.492179t2.558593 25.585928-5.117186 26.609365-16.374994 25.585928q-12.281245 12.281245-22.003898 21.492179t-16.886712 16.374994q-8.187497 8.187497-15.351557 14.32812l-191.382739-191.382739q12.281245-11.257808 29.167958-27.121083t28.144521-25.074209q14.32812-11.257808 29.679676-15.863275t30.191395-4.093748 28.656239 4.605467 24.050772 9.210934q21.492179 11.257808 47.589826 39.402329t40.425766 58.847634zM221.062416 611.554845q6.140623-6.140623 28.656239-29.167958t56.289041-56.80076l74.710909-74.710909 82.898406-82.898406 220.038979-220.038979 191.382739 192.406177-220.038979 220.038979-81.874969 82.898406q-40.937484 39.914047-73.687472 73.175753t-54.242167 54.753885-25.585928 24.562491q-10.234371 9.210934-23.539054 19.445305t-27.632802 16.374994q-14.32812 7.16406-41.960921 17.398431t-57.824197 19.957024-57.312478 16.886712-40.425766 9.210934q-27.632802 3.070311-36.843736-8.187497t-5.117186-37.867173q2.046874-14.32812 9.722653-41.449203t16.374994-56.289041 16.886712-53.730448 13.304682-33.773425q6.140623-14.32812 13.816401-26.097646t22.003898-26.097646z&#39;/%3E%3C/svg%3E" style="background-color:#057E3D;clip-path:circle();" width="24px" height="24px"> <strong>编者注</strong></p><p>谨按，上述代码根本不可能创建出一瓶「咏 e」药水。据编者 CaveNightingale 测试，对自己丢出来之后没有效果。有两点原因：</p><p>第一，<code>EEEEffect</code> 类未经注册，服务端根本不知道有这么一个类，自然无法调用它的方法。</p><p>药水瓶的 NBT 数据结构是这样的：</p><div class="language-JSON"><button title="Copy Code" class="copy"></button><span class="lang">JSON</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-color-text);">{</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">&quot;Potion&quot;</span><span style="color:var(--shiki-token-punctuation);">:</span><span style="color:var(--shiki-token-string-expression);">&quot;minecraft:empty&quot;</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">&quot;CustomPotionEffects&quot;</span><span style="color:var(--shiki-token-punctuation);">:</span><span style="color:var(--shiki-color-text);">[</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">&quot;Duration&quot;</span><span style="color:var(--shiki-token-punctuation);">:</span><span style="color:var(--shiki-token-constant);">200</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">&quot;ShowIcon&quot;</span><span style="color:var(--shiki-token-punctuation);">:</span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">&quot;Ambient&quot;</span><span style="color:var(--shiki-token-punctuation);">:</span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">&quot;ShowParticles&quot;</span><span style="color:var(--shiki-token-punctuation);">:</span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">&quot;Id&quot;</span><span style="color:var(--shiki-token-punctuation);">:</span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">&quot;Amplifier&quot;</span><span style="color:var(--shiki-token-punctuation);">:</span><span style="color:var(--shiki-token-constant);">0</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   ]</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><p>也就是说，<code>PotionMeta</code> 这个类，可以读取 <code>CustomPotionEffects</code> 数据，将其转换为 <code>List&lt;PotionEffect&gt;</code>。一个 <code>PotionEffect</code> 就对应一个 <code>{&quot;Duration&quot;:200, &quot;ShowIcon&quot;:1, &quot;Ambient&quot;:1, &quot;ShowParticles&quot;:1, &quot;Id&quot;:1, &quot;Amplifier&quot;:0}</code> 这样的 Tag。当你要读取药水瓶的数据时，服务端依据上述的 NBT 数据来构造一个 <code>PotionEffect</code> 对象。代码节选如下：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">NBTTagList</span><span style="color:var(--shiki-color-text);"> list </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-punctuation);">...</span><span style="color:var(--shiki-color-text);"> ; </span><span style="color:var(--shiki-token-comment);">// CustomPotionEffects</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">for</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);"> i </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-color-text);">; i </span><span style="color:var(--shiki-token-keyword);">&lt;</span><span style="color:var(--shiki-color-text);"> length; i</span><span style="color:var(--shiki-token-keyword);">++</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// 以下，遍历 CustomPotionEffects</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">NBTTagCompound</span><span style="color:var(--shiki-color-text);"> effect </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">list</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getCompound</span><span style="color:var(--shiki-color-text);">(i);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">PotionEffectType</span><span style="color:var(--shiki-color-text);"> type </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">PotionEffectType</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getById</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">effect</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getByte</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">ID</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">NBT</span><span style="color:var(--shiki-color-text);">));</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// Id 为魔法值，1 是速度、2 是缓慢……</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (type </span><span style="color:var(--shiki-token-keyword);">!=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);"> amp </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">effect</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getByte</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">AMPLIFIER</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">NBT</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">int</span><span style="color:var(--shiki-color-text);"> duration </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">effect</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getInt</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">DURATION</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">NBT</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">boolean</span><span style="color:var(--shiki-color-text);"> ambient </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">effect</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getBoolean</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">AMBIENT</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">NBT</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">boolean</span><span style="color:var(--shiki-color-text);"> particles </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">tag</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">hasKeyOfType</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">SHOW_PARTICLES</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">NBT</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-color-text);">) </span><span style="color:var(--shiki-token-keyword);">?</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">effect</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getBoolean</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">SHOW_PARTICLES</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">NBT</span><span style="color:var(--shiki-color-text);">) </span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">true</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">boolean</span><span style="color:var(--shiki-color-text);"> icon </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">tag</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">hasKeyOfType</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">SHOW_ICON</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">NBT</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-color-text);">) </span><span style="color:var(--shiki-token-keyword);">?</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">effect</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">getBoolean</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">SHOW_ICON</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">NBT</span><span style="color:var(--shiki-color-text);">) </span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> particles;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">this</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-constant);">customEffects</span><span style="color:var(--shiki-token-punctuation);">.</span><span style="color:var(--shiki-token-function);">add</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">PotionEffect(type</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> duration</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> amp</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> ambient</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> particles</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> icon)</span><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    } </span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><p>从 <code>amp</code> 到 <code>icon</code> 这几个变量，把 NBT 中的数据逐个读取出来。然后调用 <code>PotionEffect</code> 类的构造器，就可以构造出 <code>PotionEffect</code> 对象了。这样，插件开发者便有 <code>getType</code>、<code>getDuration</code>、<code>getAmplifier</code> 等方法来读取药水数据，不用背出来 <code>Duration</code>、<code>ShowIcon</code> 这样的字符串。</p><p>等等，服务端构造一个 <code>PotionEffect</code> 对象？为什么写死了 <code>PotionEffect</code>，不留出一个注册渠道，以便注册 <code>EEEEffect</code> 类，然后调用 <code>this.customEffects.add(new EEEEffect(...));</code> 呢？假如你是服务端的设计者，你根本不知道什么情况下用 <code>EEEEffect</code>、又在什么情况下用 <code>PotionEffect</code>。毕竟 NBT 数据里没有一个数据项叫 <code>PotionEffectClassName</code>，这个 NBT 数据结构是 Mojang 设计的，有 Id 就足够了，根本没想过有插件会继承。那服务端该怎么安排 <code>PotionEffect</code> 和 <code>EEEEffect</code>？难道是类型为不祥之兆、时长为 100 tick 的药水效果用 <code>EEEEffect</code>，而其它情况下用 <code>PotionEffect</code> 吗？这显然是很荒谬的。<code>PotionEffect</code> 只供传递信息之用，提供几个 getter 方法以便用户读取药水效果信息，连 setter 都没有，就算新建了 <code>EEEEffect</code> 也没有什么意义。像 <code>getDuration</code> 之类的简单 getter 方法，根本玩不出花来。假如插件真要在 <code>apply</code> 方法上做手脚，那直接如上一条注释那样，调用 <code>apply</code> 方法之后直接写「咏 e」代码即可。没必要把「咏 e」代码放进 <code>apply</code> 方法里。就算有了注册渠道，允许继承 <code>PotionEffect</code> 类，也没有大用。</p><p>第二，<code>PotionEffect#apply</code> 方法，只能由插件开发者手动调用，也即插件开发者手里有一个 <code>PotionEffect</code> 对象、并且想要将之赋予一个实体的时候，手动调用 <code>apply</code> 方法来施加药水效果。药水喷溅时，服务端根本不会调用 <code>apply</code> 方法。</p><p>阅读 <code>EntityPotion</code> 类的源代码 <code>List&lt;MobEffect&gt; list = PotionUtil.getEffects(itemstack);</code> 可知，在药水瓶碎裂时，服务端会用 <code>PotionUtil</code> 读取物品堆 NBT 数据，得到 <code>MobEffect</code>（NMS 当中近似于 <code>PotionEffect</code> 的类）。整个过程没有 <code>PotionEffect</code> 类的参与。当然，你可以说，有 <code>EntityPotionEffectEvent</code> 事件，有 <code>PotionEffect</code>。但是，在服务端构造事件对象时，是不是类似 <code>PotionMeta</code> 那样，根据物品堆来构建 <code>PotionEffect</code>？上文说到，<code>PotionEffect</code> 类没有 setter 只有 getter，是只读的。并且 <code>EntityPotionEffectEvent</code> 没有给插件提供一个「修改药水效果」的方法。所以整个事件都是只读的，只能读取药水效果，没得修改。最多也就是取消事件。所以赋予实体的，还是 NMS 里的 <code>MobEffect</code>，轮不到 <code>PotionEffect</code>。<code>PotionEffect</code> 仅仅是给插件用的。</p><p>我们还是退一步说，假设服务端在药水喷溅时，要构造 Bukkit 中的 <code>PotionEffect</code> 对象，那么就又回到上面所讨论的问题中了。服务端怎么知道 <code>EEEEffect</code> 的存在呢？再说了，<code>apply</code> 方法就只能由插件开发者手动调用，再怎么覆写 <code>apply</code> 方法都没有用。玩家喝下药水、喷溅药水溅射到玩家身上时，服务端都不需要 <code>apply</code> 方法。那么插件调用 <code>apply</code> 方法之后直接写「咏 e」代码即可。没必要把「咏 e」代码放进 <code>apply</code> 方法里。</p><p>综上所述，ThatRarityEG 的代码根本不可能创建出一瓶「咏 e」药水。那么就没有必要再按 ThatRarityEG 所说，将这瓶药水对着自己丢出来测试了。不会有任何效果。</p></div><p>效果大概是这样的（1.16.5 原版<s>，资源包是 Love-And-Tolerance</s>）：</p><p><img src="https://s2.loli.net/2023/06/19/j9h3XFRs2Qx6n1E.png" alt="RESULT.png"></p><p><img src="https://s2.loli.net/2023/06/19/4f9zo8JaUsPipHb.png" alt="EEE.png"></p><div class="tip custom-block"><p class="custom-block-title"><img src="data:image/svg+xml,%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#39;0 0 1028 1024&#39; transform=&#39;scale(0.6)&#39; fill=&#39;%23fff&#39;%3E%3Cpath d=&#39;M1018.319924 112.117535q4.093748 9.210934 6.652341 21.492179t2.558593 25.585928-5.117186 26.609365-16.374994 25.585928q-12.281245 12.281245-22.003898 21.492179t-16.886712 16.374994q-8.187497 8.187497-15.351557 14.32812l-191.382739-191.382739q12.281245-11.257808 29.167958-27.121083t28.144521-25.074209q14.32812-11.257808 29.679676-15.863275t30.191395-4.093748 28.656239 4.605467 24.050772 9.210934q21.492179 11.257808 47.589826 39.402329t40.425766 58.847634zM221.062416 611.554845q6.140623-6.140623 28.656239-29.167958t56.289041-56.80076l74.710909-74.710909 82.898406-82.898406 220.038979-220.038979 191.382739 192.406177-220.038979 220.038979-81.874969 82.898406q-40.937484 39.914047-73.687472 73.175753t-54.242167 54.753885-25.585928 24.562491q-10.234371 9.210934-23.539054 19.445305t-27.632802 16.374994q-14.32812 7.16406-41.960921 17.398431t-57.824197 19.957024-57.312478 16.886712-40.425766 9.210934q-27.632802 3.070311-36.843736-8.187497t-5.117186-37.867173q2.046874-14.32812 9.722653-41.449203t16.374994-56.289041 16.886712-53.730448 13.304682-33.773425q6.140623-14.32812 13.816401-26.097646t22.003898-26.097646z&#39;/%3E%3C/svg%3E" style="background-color:#057E3D;clip-path:circle();" width="24px" height="24px"> <strong>编者注</strong></p><p>有鉴于图床失效、原图丢失，上图系定稿后再行修补，截图时未使用前述资源包。</p><p>虽然上述代码是无效的，但编者谨据文字描述模拟了预期效果并截图。</p></div>`,54),l=[e];function i(p,r,c,k,y,v){return o(),n("div",null,l)}const d=s(t,[["render",i]]);export{u as __pageData,d as default};
